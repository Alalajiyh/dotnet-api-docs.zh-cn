<Type Name="HttpServerUtility" FullName="System.Web.HttpServerUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0b6477787c17199600536f8a4df06d52440d68c5" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66008073" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpServerUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpServerUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpServerUtility" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpServerUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpServerUtility sealed" />
  <TypeSignature Language="F#" Value="type HttpServerUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="207ee-101">提供用于处理 Web 请求的 Helper 方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-101">Provides helper methods for processing Web requests.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-102">方法和属性<xref:System.Web.HttpServerUtility>类公开通过内部<xref:System.Web.HttpContext.Server%2A>由 ASP.NET 提供的对象。</span><span class="sxs-lookup"><span data-stu-id="207ee-102">The methods and properties of the <xref:System.Web.HttpServerUtility> class are exposed through the intrinsic <xref:System.Web.HttpContext.Server%2A> object provided by ASP.NET.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="207ee-103">包含源代码的 Visual Studio Web 站点项目是可随附于本主题：[下载](https://go.microsoft.com/fwlink/?LinkId=192870)。</span><span class="sxs-lookup"><span data-stu-id="207ee-103">A Visual Studio Web site project with source code is available to accompany this topic: [Download](https://go.microsoft.com/fwlink/?LinkId=192870).</span></span>  
  
 <span data-ttu-id="207ee-104">下面的示例演示如何使用<xref:System.Web.HttpServerUtility.HtmlEncode%2A>方法和<xref:System.Web.HttpServerUtility.UrlEncode%2A>方法的<xref:System.Web.HttpServerUtility>类。</span><span class="sxs-lookup"><span data-stu-id="207ee-104">The following example demonstrates how to use the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method and the <xref:System.Web.HttpServerUtility.UrlEncode%2A> method of the <xref:System.Web.HttpServerUtility> class.</span></span> <span data-ttu-id="207ee-105"><xref:System.Web.HttpServerUtility.HtmlEncode%2A>方法有助于确保用户提供的任何字符串输入将呈现为静态文本，而不是可执行脚本或 HTML 元素的浏览器中。</span><span class="sxs-lookup"><span data-stu-id="207ee-105">The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method helps ensure that any user-supplied string input will be rendered as static text in browsers instead of executable script or HTML elements.</span></span> <span data-ttu-id="207ee-106"><xref:System.Web.HttpServerUtility.UrlEncode%2A>方法对 Url 进行编码，以便它们正确传输 HTTP 流中。</span><span class="sxs-lookup"><span data-stu-id="207ee-106">The <xref:System.Web.HttpServerUtility.UrlEncode%2A> method encodes URLs so that they are correctly transmitted in the HTTP stream.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpServerUtility1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpServerUtility1/cs/HttpServerUtilityCS.aspx#1)]
 [!code-aspx-vb[System.Web.HttpServerUtility1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpServerUtility1/vb/HttpServerUtilityVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpContext" />
  </Docs>
  <Members>
    <Member MemberName="ClearError">
      <MemberSignature Language="C#" Value="public void ClearError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.ClearError" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearError ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearError();" />
      <MemberSignature Language="F#" Value="member this.ClearError : unit -&gt; unit" Usage="httpServerUtility.ClearError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="207ee-107">清除前一个异常。</span><span class="sxs-lookup"><span data-stu-id="207ee-107">Clears the previous exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="207ee-108">以下示例清除抛出的最后一个异常。</span><span class="sxs-lookup"><span data-stu-id="207ee-108">The following example clears the last exception that was thrown.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.ClearError Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.ClearError Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.ClearError Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.ClearError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpServerUtility.GetLastError" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="207ee-109">创建 COM 对象的一个服务器实例。</span><span class="sxs-lookup"><span data-stu-id="207ee-109">Creates a server instance of a COM object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public object CreateObject (string progID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateObject(string progID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject (progID As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObject(System::String ^ progID);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string -&gt; obj" Usage="httpServerUtility.CreateObject progID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="progID"><span data-ttu-id="207ee-110">要创建其实例的对象的类或类型。</span><span class="sxs-lookup"><span data-stu-id="207ee-110">The class or type of object to create an instance of.</span></span></param>
        <summary><span data-ttu-id="207ee-111">创建 COM 对象的服务器实例，该 COM 对象由对象的程序标识符 (ProgID) 标识。</span><span class="sxs-lookup"><span data-stu-id="207ee-111">Creates a server instance of a COM object identified by the object's programmatic identifier (ProgID).</span></span></summary>
        <returns><span data-ttu-id="207ee-112">新对象。</span><span class="sxs-lookup"><span data-stu-id="207ee-112">The new object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="207ee-113">下面的示例创建一个对象使用对象的 ProgID。</span><span class="sxs-lookup"><span data-stu-id="207ee-113">The following example creates an object by using the object's ProgID.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.CreateObject Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObject Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.CreateObject Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObject Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="207ee-114">无法创建对象的实例。</span><span class="sxs-lookup"><span data-stu-id="207ee-114">An instance of the object could not be created.</span></span></exception>
        <altmember cref="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public object CreateObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.CreateObject(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObject(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : Type -&gt; obj" Usage="httpServerUtility.CreateObject type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="207ee-115"><see cref="T:System.Type" /> 表示要创建的对象。</span><span class="sxs-lookup"><span data-stu-id="207ee-115">A <see cref="T:System.Type" /> representing the object to create.</span></span></param>
        <summary><span data-ttu-id="207ee-116">创建由对象类型标识的 COM 对象的一个服务器实例。</span><span class="sxs-lookup"><span data-stu-id="207ee-116">Creates a server instance of a COM object identified by the object's type.</span></span></summary>
        <returns><span data-ttu-id="207ee-117">新对象。</span><span class="sxs-lookup"><span data-stu-id="207ee-117">The new object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObjectFromClsid">
      <MemberSignature Language="C#" Value="public object CreateObjectFromClsid (string clsid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateObjectFromClsid(string clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObjectFromClsid (clsid As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObjectFromClsid(System::String ^ clsid);" />
      <MemberSignature Language="F#" Value="member this.CreateObjectFromClsid : string -&gt; obj" Usage="httpServerUtility.CreateObjectFromClsid clsid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clsid"><span data-ttu-id="207ee-118">要创建其实例的对象的类标识符。</span><span class="sxs-lookup"><span data-stu-id="207ee-118">The class identifier of the object to create an instance of.</span></span></param>
        <summary><span data-ttu-id="207ee-119">创建 COM 对象的服务器实例，该对象由对象的类标识符 (CLSID) 标识。</span><span class="sxs-lookup"><span data-stu-id="207ee-119">Creates a server instance of a COM object identified by the object's class identifier (CLSID).</span></span></summary>
        <returns><span data-ttu-id="207ee-120">新对象。</span><span class="sxs-lookup"><span data-stu-id="207ee-120">The new object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="207ee-121">下面的示例演示如何使用<xref:System.Web.HttpServerUtility.CreateObjectFromClsid%2A>方法来创建 COM 对象的服务器实例。</span><span class="sxs-lookup"><span data-stu-id="207ee-121">The following example demonstrates how to use the <xref:System.Web.HttpServerUtility.CreateObjectFromClsid%2A> method to create a server instance of a COM object.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObjectFromClsid Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObjectFromClsid Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="207ee-122">无法创建对象的实例。</span><span class="sxs-lookup"><span data-stu-id="207ee-122">An instance of the object could not be created.</span></span></exception>
        <altmember cref="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Execute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="207ee-123">在当前请求的上下文中执行指定资源的处理程序，然后将执行返回给调用它的页。</span><span class="sxs-lookup"><span data-stu-id="207ee-123">Executes the handler for a specified resource in the context of the current request and returns execution to the page that invoked it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Execute : string -&gt; unit" Usage="httpServerUtility.Execute path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="207ee-124">要执行的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-124">The URL path to execute.</span></span></param>
        <summary><span data-ttu-id="207ee-125">在当前请求的上下文中执行指定虚拟路径的处理程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-125">Executes the handler for the specified virtual path in the context of the current request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-126"><xref:System.Web.HttpServerUtility.Execute%2A>方法的新页的执行完成后继续执行原始页。</span><span class="sxs-lookup"><span data-stu-id="207ee-126">The <xref:System.Web.HttpServerUtility.Execute%2A> method continues execution of the original page after execution of the new page is completed.</span></span> <span data-ttu-id="207ee-127"><xref:System.Web.HttpServerUtility.Transfer%2A>方法无条件地将执行转移到另一个处理程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-127">The <xref:System.Web.HttpServerUtility.Transfer%2A> method unconditionally transfers execution to another handler.</span></span>  
  
 <span data-ttu-id="207ee-128">ASP.NET 不会验证当前用户有权查看由提供的资源<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-128">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="207ee-129">尽管 ASP.NET 授权和身份验证逻辑运行于调用原始资源处理程序之前，ASP.NET 将直接调用所指示的处理程序<xref:System.Web.HttpServerUtility.Execute%2A>方法并不重新身份验证和授权逻辑运行的新资源。</span><span class="sxs-lookup"><span data-stu-id="207ee-129">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="207ee-130">如果应用程序的安全策略要求客户端具有适当的授权才能访问资源，应用程序应强制重新授权，或提供自定义访问控制机制。</span><span class="sxs-lookup"><span data-stu-id="207ee-130">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="207ee-131">可以使用强制重新授权<xref:System.Web.HttpResponse.Redirect%2A>方法而不是<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-131">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="207ee-132"><xref:System.Web.HttpResponse.Redirect%2A> 执行在其中浏览器请求新的资源的客户端的重定向。</span><span class="sxs-lookup"><span data-stu-id="207ee-132"><xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="207ee-133">由于此重定向是新的请求进入系统，它被受制于 Internet 信息服务 (IIS) 和 ASP.NET 安全策略的所有身份验证和授权逻辑。</span><span class="sxs-lookup"><span data-stu-id="207ee-133">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="207ee-134">你可以验证用户有权通过结合使用的自定义授权方法查看资源<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法之前的应用程序调用<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-134">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="207ee-135">下面的示例显示当前目录中的.aspx 页""。</span><span class="sxs-lookup"><span data-stu-id="207ee-135">The following example displays the .aspx page "Updateinfo.aspx" in the current directory.</span></span> <span data-ttu-id="207ee-136">显示 Updateinfo.aspx 页后，程序执行将返回到起始页。</span><span class="sxs-lookup"><span data-stu-id="207ee-136">Program execution returns to the starting page after the Updateinfo.aspx page is displayed.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.Execute Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.Execute Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.Execute Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.Execute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="207ee-137">当前 <see cref="T:System.Web.HttpContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-137">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="207ee-138">- 或 -</span><span class="sxs-lookup"><span data-stu-id="207ee-138">-or-</span></span> 
<span data-ttu-id="207ee-139">执行由 <paramref name="path" /> 指定的处理程序时发生错误。</span><span class="sxs-lookup"><span data-stu-id="207ee-139">An error occurred while executing the handler specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="207ee-140"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-140"><paramref name="path" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="207ee-141">- 或 -</span><span class="sxs-lookup"><span data-stu-id="207ee-141">-or-</span></span> 
 <span data-ttu-id="207ee-142"><paramref name="path" /> 并非虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-142"><paramref name="path" /> is not a virtual path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Execute : string * bool -&gt; unit" Usage="httpServerUtility.Execute (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveForm" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="207ee-143">要执行的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-143">The URL path to execute.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="207ee-144">为 <see langword="true" />，则保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；为 <see langword="false" />，则清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="207ee-144"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="207ee-145">在当前请求的上下文中执行指定虚拟路径的处理器，并指定是否清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="207ee-145">Executes the handler for the specified virtual path in the context of the current request and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="207ee-146">下面的示例演示如何执行.aspx 页`Updateinfo.aspx`中的当前请求和 preserve<xref:System.Web.HttpRequest.QueryString%2A>和<xref:System.Web.HttpRequest.Form%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="207ee-146">The following example shows how to execute the .aspx page `Updateinfo.aspx` in the current request and preserve the <xref:System.Web.HttpRequest.QueryString%2A> and <xref:System.Web.HttpRequest.Form%2A> collections.</span></span> <span data-ttu-id="207ee-147">程序执行将返回到起始页后`Updateinfo.aspx`显示。</span><span class="sxs-lookup"><span data-stu-id="207ee-147">Program execution returns to the starting page after `Updateinfo.aspx` is displayed.</span></span>  
  
 [!code-csharp[HttpServerUtility.Execute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpServerUtility.Execute/CS/httpserverutility.execute_cs.aspx#1)]
 [!code-vb[HttpServerUtility.Execute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpServerUtility.Execute/VB/httpserverutility.execute_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="207ee-148">当前 <see cref="T:System.Web.HttpContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-148">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="207ee-149">- 或 -</span><span class="sxs-lookup"><span data-stu-id="207ee-149">-or-</span></span> 
<span data-ttu-id="207ee-150">执行由 <paramref name="path" /> 指定的处理程序时发生错误。</span><span class="sxs-lookup"><span data-stu-id="207ee-150">An error occurred while executing the handler specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="207ee-151"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-151"><paramref name="path" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="207ee-152">- 或 -</span><span class="sxs-lookup"><span data-stu-id="207ee-152">-or-</span></span> 
 <span data-ttu-id="207ee-153"><paramref name="path" /> 并非虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-153"><paramref name="path" /> is not a virtual path.</span></span></exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path, System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path, class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String, writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path, System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Execute : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.Execute (path, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="207ee-154">要执行的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-154">The URL path to execute.</span></span></param>
        <param name="writer"><span data-ttu-id="207ee-155">要捕获输出的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-155">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span></span></param>
        <summary><span data-ttu-id="207ee-156">在当前请求的上下文中执行指定虚拟路径的处理程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-156">Executes the handler for the specified virtual path in the context of the current request.</span></span> <span data-ttu-id="207ee-157"><see cref="T:System.IO.TextWriter" /> 捕获执行的处理程序的输出。</span><span class="sxs-lookup"><span data-stu-id="207ee-157">A <see cref="T:System.IO.TextWriter" /> captures output from the executed handler.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-158"><xref:System.Web.HttpServerUtility.Execute%2A>方法指定的虚拟路径执行完成后继续执行原始请求。</span><span class="sxs-lookup"><span data-stu-id="207ee-158">The <xref:System.Web.HttpServerUtility.Execute%2A> method continues execution of the original request after execution of the virtual path specified is completed.</span></span> <span data-ttu-id="207ee-159"><xref:System.Web.HttpServerUtility.Transfer%2A>方法无条件地将执行转移到另一个处理程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-159">The <xref:System.Web.HttpServerUtility.Transfer%2A> method unconditionally transfers execution to another handler.</span></span>  
  
 <span data-ttu-id="207ee-160">ASP.NET 不会验证当前用户有权查看由提供的资源<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-160">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="207ee-161">尽管 ASP.NET 授权和身份验证逻辑运行于调用原始资源处理程序之前，ASP.NET 将直接调用所指示的处理程序<xref:System.Web.HttpServerUtility.Execute%2A>方法并不重新身份验证和授权逻辑运行的新资源。</span><span class="sxs-lookup"><span data-stu-id="207ee-161">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="207ee-162">如果应用程序的安全策略要求客户端具有适当的授权才能访问资源，应用程序应强制重新授权，或提供自定义访问控制机制。</span><span class="sxs-lookup"><span data-stu-id="207ee-162">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="207ee-163">可以使用强制重新授权<xref:System.Web.HttpResponse.Redirect%2A>方法而不是<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-163">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="207ee-164"><xref:System.Web.HttpResponse.Redirect%2A> 执行在其中浏览器请求新的资源的客户端的重定向。</span><span class="sxs-lookup"><span data-stu-id="207ee-164"><xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="207ee-165">由于此重定向是新的请求进入系统，它被受制于 Internet 信息服务 (IIS) 和 ASP.NET 安全策略的所有身份验证和授权逻辑。</span><span class="sxs-lookup"><span data-stu-id="207ee-165">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="207ee-166">你可以验证用户有权通过结合使用的自定义授权方法查看资源<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法之前的应用程序调用<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-166">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="207ee-167">以下示例执行`Login.aspx`页上的当前目录中的服务器上并接收来自该网页通过输出<xref:System.IO.StringWriter>对象`writer`。</span><span class="sxs-lookup"><span data-stu-id="207ee-167">The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`.</span></span> <span data-ttu-id="207ee-168">它将写入从收到的 HTML 流`writer`到 HTTP 输出流。</span><span class="sxs-lookup"><span data-stu-id="207ee-168">It writes the HTML stream received from `writer` to the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.Execute1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.Execute1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.Execute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.Execute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="207ee-169">当前 <see cref="T:System.Web.HttpContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-169">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="207ee-170">- 或 -</span><span class="sxs-lookup"><span data-stu-id="207ee-170">-or-</span></span> 
<span data-ttu-id="207ee-171">执行由 <paramref name="path" /> 指定的处理程序时发生错误。</span><span class="sxs-lookup"><span data-stu-id="207ee-171">An error occurred while executing the handler specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="207ee-172"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-172"><paramref name="path" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="207ee-173">- 或 -</span><span class="sxs-lookup"><span data-stu-id="207ee-173">-or-</span></span> 
 <span data-ttu-id="207ee-174"><paramref name="path" /> 并非虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-174"><paramref name="path" /> is not a virtual path.</span></span></exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path, System.IO.TextWriter writer, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path, class System.IO.TextWriter writer, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String, writer As TextWriter, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path, System::IO::TextWriter ^ writer, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Execute : string * System.IO.TextWriter * bool -&gt; unit" Usage="httpServerUtility.Execute (path, writer, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveForm" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="207ee-175">要执行的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-175">The URL path to execute.</span></span></param>
        <param name="writer"><span data-ttu-id="207ee-176">要捕获输出的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-176">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="207ee-177">为 <see langword="true" />，则保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；为 <see langword="false" />，则清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="207ee-177"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="207ee-178">在当前请求的上下文中执行指定虚拟路径的处理程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-178">Executes the handler for the specified virtual path in the context of the current request.</span></span> <span data-ttu-id="207ee-179"><see cref="T:System.IO.TextWriter" /> 捕获页面输出，布尔参数则指定是否清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="207ee-179">A <see cref="T:System.IO.TextWriter" /> captures output from the page and a Boolean parameter specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-180"><xref:System.Web.HttpServerUtility.Execute%2A>方法指定的虚拟路径执行完成后继续执行原始请求。</span><span class="sxs-lookup"><span data-stu-id="207ee-180">The <xref:System.Web.HttpServerUtility.Execute%2A> method continues execution of the original request after execution of the specified virtual path is completed.</span></span> <span data-ttu-id="207ee-181"><xref:System.Web.HttpServerUtility.Transfer%2A>方法无条件地将执行转移到另一个处理程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-181">The <xref:System.Web.HttpServerUtility.Transfer%2A> method unconditionally transfers execution to another handler.</span></span>  
  
 <span data-ttu-id="207ee-182">ASP.NET 不会验证当前用户有权查看由提供的资源<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-182">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="207ee-183">尽管 ASP.NET 授权和身份验证逻辑运行于调用原始资源处理程序之前，ASP.NET 将直接调用所指示的处理程序<xref:System.Web.HttpServerUtility.Execute%2A>方法并不重新身份验证和授权逻辑运行的新资源。</span><span class="sxs-lookup"><span data-stu-id="207ee-183">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="207ee-184">如果应用程序的安全策略要求客户端具有适当的授权才能访问资源，应用程序应强制重新授权，或提供自定义访问控制机制。</span><span class="sxs-lookup"><span data-stu-id="207ee-184">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="207ee-185">可以使用强制重新授权<xref:System.Web.HttpResponse.Redirect%2A>方法而不是<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-185">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="207ee-186"><xref:System.Web.HttpResponse.Redirect%2A> 执行在其中浏览器请求新的资源的客户端的重定向。</span><span class="sxs-lookup"><span data-stu-id="207ee-186"><xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="207ee-187">由于此重定向是新的请求进入系统，它被受制于 Internet 信息服务 (IIS) 和 ASP.NET 安全策略的所有身份验证和授权逻辑。</span><span class="sxs-lookup"><span data-stu-id="207ee-187">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="207ee-188">你可以验证用户有权通过结合使用的自定义授权方法查看资源<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法之前的应用程序调用<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-188">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="207ee-189">以下示例执行`Login.aspx`页上的当前目录中的服务器上并接收来自该网页通过输出<xref:System.IO.StringWriter>对象`writer`。</span><span class="sxs-lookup"><span data-stu-id="207ee-189">The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`.</span></span> <span data-ttu-id="207ee-190">它将写入从收到的 HTML 流`writer`到 HTTP 输出流。</span><span class="sxs-lookup"><span data-stu-id="207ee-190">It writes the HTML stream received from `writer` to the HTTP output stream.</span></span> <span data-ttu-id="207ee-191">内容<xref:System.Web.HttpRequest.Form%2A>和<xref:System.Web.HttpRequest.QueryString%2A>保留集合。</span><span class="sxs-lookup"><span data-stu-id="207ee-191">The contents of the <xref:System.Web.HttpRequest.Form%2A> and <xref:System.Web.HttpRequest.QueryString%2A> collections are preserved.</span></span>  
  
 [!code-csharp[HttpServerUtility.Execute02#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpServerUtility.Execute02/CS/httpserverutility.execute02_cs.aspx#1)]
 [!code-vb[HttpServerUtility.Execute02#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpServerUtility.Execute02/VB/httpserverutility.execute02_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="207ee-192">当前 <see cref="T:System.Web.HttpContext" /> 为 NULL 引用（Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="207ee-192">The current <see cref="T:System.Web.HttpContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span>  
  
<span data-ttu-id="207ee-193">- 或 -</span><span class="sxs-lookup"><span data-stu-id="207ee-193">-or-</span></span> 
 <span data-ttu-id="207ee-194"><paramref name="path" /> 以句点 (.) 结尾。</span><span class="sxs-lookup"><span data-stu-id="207ee-194"><paramref name="path" /> ends with a period (.).</span></span>  
  
<span data-ttu-id="207ee-195">- 或 -</span><span class="sxs-lookup"><span data-stu-id="207ee-195">-or-</span></span> 
<span data-ttu-id="207ee-196">执行由 <paramref name="path" /> 指定的处理程序时发生错误。</span><span class="sxs-lookup"><span data-stu-id="207ee-196">An error occurred while executing the handler specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="207ee-197"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-197"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="207ee-198"><paramref name="path" /> 并非虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-198"><paramref name="path" /> is not a virtual path.</span></span></exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (System.Web.IHttpHandler handler, System.IO.TextWriter writer, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(class System.Web.IHttpHandler handler, class System.IO.TextWriter writer, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (handler As IHttpHandler, writer As TextWriter, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Web::IHttpHandler ^ handler, System::IO::TextWriter ^ writer, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Web.IHttpHandler * System.IO.TextWriter * bool -&gt; unit" Usage="httpServerUtility.Execute (handler, writer, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveForm" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="207ee-199">实现 <see cref="T:System.Web.IHttpHandler" /> 以便向其传输当前请求的 HTTP 处理程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-199">The HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> to transfer the current request to.</span></span></param>
        <param name="writer"><span data-ttu-id="207ee-200">要捕获输出的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-200">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="207ee-201">为 <see langword="true" />，则保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；为 <see langword="false" />，则清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="207ee-201"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="207ee-202">在当前请求的上下文中执行指定虚拟路径的处理程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-202">Executes the handler for the specified virtual path in the context of the current request.</span></span> <span data-ttu-id="207ee-203"><see cref="T:System.IO.TextWriter" /> 捕获执行的处理程序的输出，布尔参数则指定是否清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="207ee-203">A <see cref="T:System.IO.TextWriter" /> captures output from the executed handler and a Boolean parameter specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-204">您可以编写自定义 HTTP 处理程序来处理特定的预定义任何的类型语言都是符合公共语言规范 (CLS) 中的 HTTP 请求。</span><span class="sxs-lookup"><span data-stu-id="207ee-204">You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</span></span> <span data-ttu-id="207ee-205">而不是传统的 ASP (也称为经典 ASP) 页或 ASP.NET 页的 HTTP 处理程序类中定义的可执行代码对这些特定请求做出响应。</span><span class="sxs-lookup"><span data-stu-id="207ee-205">Executable code that is defined in the HTTP handler classes instead of  conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</span></span> <span data-ttu-id="207ee-206">HTTP 处理程序允许与的低级别的请求和响应服务正在运行 Internet 信息服务 (IIS) Web 服务器进行交互和它们提供类似的功能于 ISAPI 扩展，但有一个更简单的编程模型。</span><span class="sxs-lookup"><span data-stu-id="207ee-206">HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</span></span>  
  
 <span data-ttu-id="207ee-207">ASP.NET 不会验证当前用户有权查看的资源，则由传送<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-207">ASP.NET does not verify that the current user is authorized to view the resource that is delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="207ee-208">尽管 ASP.NET 授权和身份验证逻辑运行于调用原始资源处理程序之前，ASP.NET 将直接调用的处理程序将由<xref:System.Web.HttpServerUtility.Execute%2A>方法并不重新运行用于身份验证和授权逻辑新资源。</span><span class="sxs-lookup"><span data-stu-id="207ee-208">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler that is indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="207ee-209">如果你的应用程序的安全策略要求客户端具有适当的授权才能获得访问资源的权限，应用程序应强制重新授权或提供自定义访问控制机制。</span><span class="sxs-lookup"><span data-stu-id="207ee-209">If the security policy for your application requires clients to have appropriate authorization to gain access to the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="207ee-210">可以使用强制重新授权<xref:System.Web.HttpResponse.Redirect%2A>方法而不是<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-210">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="207ee-211"><xref:System.Web.HttpResponse.Redirect%2A>执行在其中浏览器请求新的资源的客户端的重定向。</span><span class="sxs-lookup"><span data-stu-id="207ee-211">The <xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="207ee-212">由于此重定向是新的请求进入系统，它会对进行了 IIS 和 ASP.NET 的安全策略的所有身份验证和授权逻辑。</span><span class="sxs-lookup"><span data-stu-id="207ee-212">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="207ee-213">你可以验证用户有权通过结合使用的自定义授权方法查看资源<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法之前的应用程序调用<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-213">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="207ee-214">执行由 <paramref name="handler" /> 指定的处理程序时发生错误。</span><span class="sxs-lookup"><span data-stu-id="207ee-214">An error occurred while executing the handler specified by <paramref name="handler" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="207ee-215"><paramref name="handler" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-215">The <paramref name="handler" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="GetLastError">
      <MemberSignature Language="C#" Value="public Exception GetLastError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Exception GetLastError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.GetLastError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastError () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetLastError();" />
      <MemberSignature Language="F#" Value="member this.GetLastError : unit -&gt; Exception" Usage="httpServerUtility.GetLastError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="207ee-216">返回前一个异常。</span><span class="sxs-lookup"><span data-stu-id="207ee-216">Returns the previous exception.</span></span></summary>
        <returns><span data-ttu-id="207ee-217">引发的前一个异常。</span><span class="sxs-lookup"><span data-stu-id="207ee-217">The previous exception that was thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="207ee-218">下面的示例将打印到 HTTP 输出流的应用程序的最后一个错误的说明。</span><span class="sxs-lookup"><span data-stu-id="207ee-218">The following example prints a description of the application's last error to the HTTP output stream.</span></span> <span data-ttu-id="207ee-219">如果在不遇到任何错误，会输出"无错误"。</span><span class="sxs-lookup"><span data-stu-id="207ee-219">It prints "No Errors" if no errors have been encountered.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.GetLastError Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.GetLastError Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.GetLastError Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.GetLastError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpServerUtility.ClearError" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="207ee-220">对已被编码以消除无效 HTML 字符的字符串进行解码。</span><span class="sxs-lookup"><span data-stu-id="207ee-220">Decodes a string that has been encoded to eliminate invalid HTML characters.</span></span>  
  
<span data-ttu-id="207ee-221">若要对 Web 应用程序之外的值进行编码或解码，请使用 <see cref="T:System.Net.WebUtility" /> 类。</span><span class="sxs-lookup"><span data-stu-id="207ee-221">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public string HtmlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string HtmlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HtmlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ HtmlDecode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.HtmlDecode : string -&gt; string" Usage="httpServerUtility.HtmlDecode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="207ee-222">要解码的 HTML 字符串。</span><span class="sxs-lookup"><span data-stu-id="207ee-222">The HTML string to decode.</span></span></param>
        <summary><span data-ttu-id="207ee-223">对 HTML 编码的字符串进行解码，并返回已解码的字符串。</span><span class="sxs-lookup"><span data-stu-id="207ee-223">Decodes an HTML-encoded string and returns the decoded string.</span></span></summary>
        <returns><span data-ttu-id="207ee-224">已解码的文本。</span><span class="sxs-lookup"><span data-stu-id="207ee-224">The decoded text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-225">HTML 编码可确保文本是在浏览器中正确显示，不会被解释为 html 格式浏览器。</span><span class="sxs-lookup"><span data-stu-id="207ee-225">HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</span></span> <span data-ttu-id="207ee-226">例如，如果文本字符串包含小于号 (\<) 或更高版本浏览器不是号 (>)，会将这些字符解释为左或右括号之间的 HTML 标记。</span><span class="sxs-lookup"><span data-stu-id="207ee-226">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="207ee-227">HTML 编码的字符时，它们将转换为字符串`&lt;`和`&gt;`，这会导致浏览器显示小于号和大于号正确。</span><span class="sxs-lookup"><span data-stu-id="207ee-227">When the characters are HTML encoded, they are converted to the strings `&lt;` and `&gt;`, which causes the browser to display the less than sign and greater than sign correctly.</span></span> <span data-ttu-id="207ee-228"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> 解码已传输到服务器的文本。</span><span class="sxs-lookup"><span data-stu-id="207ee-228"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> decodes text that has been transmitted to the server.</span></span>  
  
 <span data-ttu-id="207ee-229">此方法是方便地访问<xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType>方法在运行时从 ASP.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-229">This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="207ee-230">在内部，此方法使用<xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType>来对字符串进行解码。</span><span class="sxs-lookup"><span data-stu-id="207ee-230">Internally, this method uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="207ee-231">在代码隐藏文件中的 ASP.NET web 页，访问的实例<xref:System.Web.HttpServerUtility>类通过`Server`属性。</span><span class="sxs-lookup"><span data-stu-id="207ee-231">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="207ee-232">在不是代码隐藏文件中的类，使用`HttpContext.Current.Server`若要访问的实例<xref:System.Web.HttpServerUtility>类。</span><span class="sxs-lookup"><span data-stu-id="207ee-232">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="207ee-233">在 web 应用程序，外部使用<xref:System.Net.WebUtility>类进行编码或解码的值。</span><span class="sxs-lookup"><span data-stu-id="207ee-233">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="207ee-234">下面的示例包含的函数`LoadDecodedFile`，这对文件中的数据进行解码并将其复制到一个字符串。</span><span class="sxs-lookup"><span data-stu-id="207ee-234">The following example contains the function `LoadDecodedFile`, which decodes the data from a file and copies it into one string.</span></span>  
  
 [!code-aspx-csharp[Classic HttpServerUtility.HtmlDecode Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpServerUtility.HtmlDecode Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public void HtmlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void HtmlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HtmlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void HtmlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.HtmlDecode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="207ee-235">要解码的 HTML 字符串。</span><span class="sxs-lookup"><span data-stu-id="207ee-235">The HTML string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="207ee-236"><see cref="T:System.IO.TextWriter" /> 输出包含已解码字符串的流。</span><span class="sxs-lookup"><span data-stu-id="207ee-236">The <see cref="T:System.IO.TextWriter" /> output stream that contains the decoded string.</span></span></param>
        <summary><span data-ttu-id="207ee-237">对 HTML 编码的字符串进行解码，并将结果输出发送到 <see cref="T:System.IO.TextWriter" /> 输出流。</span><span class="sxs-lookup"><span data-stu-id="207ee-237">Decodes an HTML-encoded string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-238">HTML 编码可确保文本是在浏览器中正确显示，不会被解释为 html 格式浏览器。</span><span class="sxs-lookup"><span data-stu-id="207ee-238">HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</span></span> <span data-ttu-id="207ee-239">例如，如果文本字符串包含小于号 (\<) 或更高版本浏览器不是号 (>)，会将这些字符解释为左或右括号之间的 HTML 标记。</span><span class="sxs-lookup"><span data-stu-id="207ee-239">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="207ee-240">HTML 编码的字符时，它们将转换为字符串`&lt;`和`&gt;`，这会导致浏览器显示小于号和大于号正确。</span><span class="sxs-lookup"><span data-stu-id="207ee-240">When the characters are HTML encoded, they are converted to the strings `&lt;` and `&gt;`, which causes the browser to display the less than sign and greater than sign correctly.</span></span>  
  
 <span data-ttu-id="207ee-241"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> 解码已传输到服务器的文本。</span><span class="sxs-lookup"><span data-stu-id="207ee-241"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> decodes text that has been transmitted to the server.</span></span>  
  
 <span data-ttu-id="207ee-242"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> 为方便地访问<xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType>方法在运行时从 ASP.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-242"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="207ee-243">在内部，<xref:System.Web.HttpServerUtility.HtmlDecode%2A>使用<xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType>来对字符串进行解码。</span><span class="sxs-lookup"><span data-stu-id="207ee-243">Internally, <xref:System.Web.HttpServerUtility.HtmlDecode%2A> uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="207ee-244">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="207ee-244">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="207ee-245">下面的示例将对已被 HTML 编码以便传输通过 HTTP 的字符串进行解码。</span><span class="sxs-lookup"><span data-stu-id="207ee-245">The following example decodes a string that has been HTML-encoded for transmission over HTTP.</span></span> <span data-ttu-id="207ee-246">它对名为所提供的字符串进行解码`EncodedString`其中包含文本"这是&lt;测试字符串&gt;。"，并将其复制到名为字符串`DecodedString`作为"这是\<测试字符串 >。"。</span><span class="sxs-lookup"><span data-stu-id="207ee-246">It decodes the supplied string named `EncodedString` which contains the text "This is a &lt;Test String&gt;.", and copies it into the string named `DecodedString` as "This is a \<Test String>.".</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.HtmlDecode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.HtmlDecode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="207ee-247">对要在浏览器中显示的字符串进行编码。</span><span class="sxs-lookup"><span data-stu-id="207ee-247">Encodes a string to be displayed in a browser.</span></span>  
  
<span data-ttu-id="207ee-248">若要对 Web 应用程序之外的值进行编码或解码，请使用 <see cref="T:System.Net.WebUtility" /> 类。</span><span class="sxs-lookup"><span data-stu-id="207ee-248">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public string HtmlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string HtmlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HtmlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ HtmlEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : string -&gt; string" Usage="httpServerUtility.HtmlEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="207ee-249">要编码的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="207ee-249">The text string to encode.</span></span></param>
        <summary><span data-ttu-id="207ee-250">对字符串进行 HTML 编码并返回已编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="207ee-250">HTML-encodes a string and returns the encoded string.</span></span></summary>
        <returns><span data-ttu-id="207ee-251">HTML 编码的文本。</span><span class="sxs-lookup"><span data-stu-id="207ee-251">The HTML-encoded text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-252">HTML 编码可确保文本是在浏览器中正确显示，不会被解释为 html 格式浏览器。</span><span class="sxs-lookup"><span data-stu-id="207ee-252">HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</span></span> <span data-ttu-id="207ee-253">例如，如果文本字符串包含小于号 (\<) 或更高版本浏览器不是号 (>)，会将这些字符解释为左或右括号之间的 HTML 标记。</span><span class="sxs-lookup"><span data-stu-id="207ee-253">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="207ee-254">HTML 编码的字符时，它们将转换为字符串`&lt;`和`&gt;`，这会导致浏览器显示小于号和大于号正确。</span><span class="sxs-lookup"><span data-stu-id="207ee-254">When the characters are HTML encoded, they are converted to the strings `&lt;` and `&gt;`, which causes the browser to display the less than sign and greater than sign correctly.</span></span>  
  
 <span data-ttu-id="207ee-255">此方法是方便地访问<xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType>方法在运行时从 ASP.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-255">This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="207ee-256">在内部，此方法使用<xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType>对字符串进行编码。</span><span class="sxs-lookup"><span data-stu-id="207ee-256">Internally, this method uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="207ee-257">在代码隐藏文件中的 ASP.NET web 页，访问的实例<xref:System.Web.HttpServerUtility>类通过`Server`属性。</span><span class="sxs-lookup"><span data-stu-id="207ee-257">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="207ee-258">在不是代码隐藏文件中的类，使用`HttpContext.Current.Server`若要访问的实例<xref:System.Web.HttpServerUtility>类。</span><span class="sxs-lookup"><span data-stu-id="207ee-258">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="207ee-259">在 web 应用程序，外部使用<xref:System.Net.WebUtility>类进行编码或解码的值。</span><span class="sxs-lookup"><span data-stu-id="207ee-259">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="207ee-260">下面的示例演示如何为一个值进行 HTML 编码的潜在代码不安全代码。</span><span class="sxs-lookup"><span data-stu-id="207ee-260">The following example shows how to HTML-encode a value that potentially codes unsafe code.</span></span> <span data-ttu-id="207ee-261">代码驻留在 web 页的代码隐藏文件。</span><span class="sxs-lookup"><span data-stu-id="207ee-261">The code resides in the code-behind file for a web page.</span></span> <span data-ttu-id="207ee-262">要编码的值是硬编码在此示例中仅以简化该示例并显示值的类型可能进行 HTML 编码。</span><span class="sxs-lookup"><span data-stu-id="207ee-262">The value to encode is hard-coded in this example only to simplify the example and show the type of value you might HTML-encode.</span></span> <span data-ttu-id="207ee-263">通常情况下，你将进行 HTML 编码一个值，从用户或请求接收该值。</span><span class="sxs-lookup"><span data-stu-id="207ee-263">Typically, you would HTML-encode a value that you received from the user or the request.</span></span> <span data-ttu-id="207ee-264">`Result` 是指`Literal`控件。</span><span class="sxs-lookup"><span data-stu-id="207ee-264">`Result` refers to a `Literal` control.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.HtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.HtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="207ee-265">下一个示例是上一个示例类似，但它显示的是如何进行 HTML 编码类中的值不在代码隐藏文件。</span><span class="sxs-lookup"><span data-stu-id="207ee-265">The next example is similar to the previous example except it shows how to HTML-encode a value from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.HtmlEncode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.HtmlEncode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public void HtmlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void HtmlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HtmlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void HtmlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.HtmlEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="207ee-266">要编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="207ee-266">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="207ee-267"><see cref="T:System.IO.TextWriter" /> 输出包含已编码字符串的流。</span><span class="sxs-lookup"><span data-stu-id="207ee-267">The <see cref="T:System.IO.TextWriter" /> output stream that contains the encoded string.</span></span></param>
        <summary><span data-ttu-id="207ee-268">对字符串进行 HTML 解码，并将结果输出发送到 <see cref="T:System.IO.TextWriter" /> 输出流。</span><span class="sxs-lookup"><span data-stu-id="207ee-268">HTML-encodes a string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-269">HTML 编码可确保将在浏览器中，不会被解释为 html 格式浏览器中正确显示文本。</span><span class="sxs-lookup"><span data-stu-id="207ee-269">HTML encoding ensures that text will be correctly displayed in the browser, not interpreted by the browser as HTML.</span></span> <span data-ttu-id="207ee-270">例如，如果文本字符串包含小于号 (\<) 或更高版本浏览器不是号 (>)，会将这些字符解释为一个开始标记或右括号之间的 HTML 标记。</span><span class="sxs-lookup"><span data-stu-id="207ee-270">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as an opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="207ee-271">这两个字符的 HTML 编码`&lt;`和`&gt;`分别，这会导致浏览器显示小于号和大于号正确。</span><span class="sxs-lookup"><span data-stu-id="207ee-271">The HTML encoding of these two characters is `&lt;` and `&gt;`, respectively, which causes the browser to display the less than sign and greater than sign correctly.</span></span>  
  
 <span data-ttu-id="207ee-272"><xref:System.Web.HttpServerUtility.HtmlEncode%2A> 为方便地访问<xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType>方法在运行时从 ASP.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-272"><xref:System.Web.HttpServerUtility.HtmlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="207ee-273">在内部，<xref:System.Web.HttpServerUtility.HtmlEncode%2A>使用<xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType>对字符串进行编码。</span><span class="sxs-lookup"><span data-stu-id="207ee-273">Internally, <xref:System.Web.HttpServerUtility.HtmlEncode%2A> uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="207ee-274">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="207ee-274">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="207ee-275">下面的示例将编码用于通过 HTTP 传输的字符串。</span><span class="sxs-lookup"><span data-stu-id="207ee-275">The following example encodes a string for transmission by HTTP.</span></span> <span data-ttu-id="207ee-276">它对名为的字符串进行编码`TestString`，其中包含文本"这是\<测试字符串 >。"，并将其复制到名为的字符串`EncodedString`作为"这是&lt;测试字符串&gt;。"。</span><span class="sxs-lookup"><span data-stu-id="207ee-276">It encodes the string named `TestString`, which contains the text "This is a \<Test String>.", and copies it into the string named `EncodedString` as "This is a &lt;Test String&gt;.".</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.HtmlEncode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlEncode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.HtmlEncode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlEncode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpServerUtility.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string" Usage="System.Web.HttpServerUtility.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="207ee-277">获取服务器的计算机名称。</span><span class="sxs-lookup"><span data-stu-id="207ee-277">Gets the server's computer name.</span></span></summary>
        <value><span data-ttu-id="207ee-278">本地计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="207ee-278">The name of the local computer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="207ee-279">下面的示例将服务器的计算机名称存储为字符串变量。</span><span class="sxs-lookup"><span data-stu-id="207ee-279">The following example stores the server's computer name as a string variable.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.MachineName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.MachineName Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.MachineName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.MachineName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="207ee-280">无法找到该计算机名称。</span><span class="sxs-lookup"><span data-stu-id="207ee-280">The computer name cannot be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string -&gt; string" Usage="httpServerUtility.MapPath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="207ee-281">Web 应用程序中的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-281">The virtual path in the Web application.</span></span></param>
        <summary><span data-ttu-id="207ee-282">返回与指定虚拟路径相对应的物理文件路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-282">Returns the physical file path that corresponds to the specified virtual path.</span></span></summary>
        <returns><span data-ttu-id="207ee-283">对应于 <paramref name="path" /> 的 Web 服务器上的物理文件路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-283">The physical file path on the Web server that corresponds to <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-284">如果`path`是`null`，则<xref:System.Web.HttpServerUtility.MapPath%2A>方法返回包含当前请求路径的目录的完整物理路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-284">If `path` is `null`, the <xref:System.Web.HttpServerUtility.MapPath%2A> method returns the full physical path of the directory that contains the current request for the path.</span></span> <span data-ttu-id="207ee-285">相对路径不需要指定现有的文件或文件夹的此方法以返回一个值。</span><span class="sxs-lookup"><span data-stu-id="207ee-285">The relative path does not need to specify an existing file or folder for this method to return a value.</span></span> <span data-ttu-id="207ee-286">但是，不能指定 Web 应用程序之外的路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-286">However, you cannot specify a path outside of the Web application.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="207ee-287"><xref:System.Web.HttpServerUtility.MapPath%2A>方法可能包含敏感信息的宿主环境。</span><span class="sxs-lookup"><span data-stu-id="207ee-287">The <xref:System.Web.HttpServerUtility.MapPath%2A> method potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="207ee-288">返回值不应显示给用户。</span><span class="sxs-lookup"><span data-stu-id="207ee-288">The return value should not be displayed to users.</span></span>  
  
 <span data-ttu-id="207ee-289">Web 应用程序驻留在`C:\ExampleSites\TestMapPath`将返回以下结果：</span><span class="sxs-lookup"><span data-stu-id="207ee-289">A Web application that resides at `C:\ExampleSites\TestMapPath` would return the following results:</span></span>  
  
|<span data-ttu-id="207ee-290">从请求</span><span class="sxs-lookup"><span data-stu-id="207ee-290">Request from</span></span>|`path`|<span data-ttu-id="207ee-291">返回值</span><span class="sxs-lookup"><span data-stu-id="207ee-291">Returned value</span></span>|  
|------------------|------------|--------------------|  
|<span data-ttu-id="207ee-292">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="207ee-292">RootLevelPage.aspx</span></span>|`null`|<span data-ttu-id="207ee-293">C:\ExampleSites\TestMapPath</span><span class="sxs-lookup"><span data-stu-id="207ee-293">C:\ExampleSites\TestMapPath</span></span>|  
|<span data-ttu-id="207ee-294">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="207ee-294">RootLevelPage.aspx</span></span>|<span data-ttu-id="207ee-295">"/DownOneLevel/DownLevelPage.aspx"</span><span class="sxs-lookup"><span data-stu-id="207ee-295">"/DownOneLevel/DownLevelPage.aspx"</span></span>|<span data-ttu-id="207ee-296">C:\ExampleSites\TestMapPath\DownOneLevel\DownLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="207ee-296">C:\ExampleSites\TestMapPath\DownOneLevel\DownLevelPage.aspx</span></span>|  
|<span data-ttu-id="207ee-297">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="207ee-297">RootLevelPage.aspx</span></span>|<span data-ttu-id="207ee-298">"/NotRealFolder"</span><span class="sxs-lookup"><span data-stu-id="207ee-298">"/NotRealFolder"</span></span>|<span data-ttu-id="207ee-299">C:\ExampleSites\TestMapPath\NotRealFolder</span><span class="sxs-lookup"><span data-stu-id="207ee-299">C:\ExampleSites\TestMapPath\NotRealFolder</span></span>|  
|<span data-ttu-id="207ee-300">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="207ee-300">RootLevelPage.aspx</span></span>|<span data-ttu-id="207ee-301">"../ OutsideApplication"</span><span class="sxs-lookup"><span data-stu-id="207ee-301">"../OutsideApplication"</span></span>|<xref:System.Web.HttpException>|  
|<span data-ttu-id="207ee-302">/DownOneLevel/DownLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="207ee-302">/DownOneLevel/DownLevelPage.aspx</span></span>|`null`|<span data-ttu-id="207ee-303">C:\ExampleSites\TestMapPath\DownOneLevel</span><span class="sxs-lookup"><span data-stu-id="207ee-303">C:\ExampleSites\TestMapPath\DownOneLevel</span></span>|  
|<span data-ttu-id="207ee-304">/DownOneLevel/DownLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="207ee-304">/DownOneLevel/DownLevelPage.aspx</span></span>|<span data-ttu-id="207ee-305">"../RootLevelPage.aspx"</span><span class="sxs-lookup"><span data-stu-id="207ee-305">"../RootLevelPage.aspx"</span></span>|<span data-ttu-id="207ee-306">C:\ExampleSites\TestMapPath\RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="207ee-306">C:\ExampleSites\TestMapPath\RootLevelPage.aspx</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="207ee-307">下面的示例演示如何检索的物理文件的相对虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-307">The following example shows how to retrieve the physical file of a relative virtual path.</span></span> <span data-ttu-id="207ee-308">代码驻留在 web 页的代码隐藏文件，并利用默认`Server`对象。</span><span class="sxs-lookup"><span data-stu-id="207ee-308">The code resides in the code-behind file for a web page and utilizes the default `Server` object.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.MapPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.mappath/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.MapPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.mappath/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="207ee-309">下一个示例非常相似与前面的示例，但它演示如何检索中的类中不是代码隐藏文件中的物理路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-309">The next example is similar to the previous example except it shows how to retrieve a physical path from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.MapPath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.mappath/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.MapPath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.mappath/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="207ee-310">当前 <see cref="T:System.Web.HttpContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-310">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span></span>
        
<span data-ttu-id="207ee-311">- 或 -</span><span class="sxs-lookup"><span data-stu-id="207ee-311">-or-</span></span> 
<span data-ttu-id="207ee-312"><paramref name="path" /> 是物理路径，但应为虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-312"><paramref name="path" /> is a physical path, but a virtual path was expected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScriptTimeout">
      <MemberSignature Language="C#" Value="public int ScriptTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScriptTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpServerUtility.ScriptTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScriptTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptTimeout : int with get, set" Usage="System.Web.HttpServerUtility.ScriptTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="207ee-313">获取或设置请求超时值（以秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="207ee-313">Gets or sets the request time-out value in seconds.</span></span></summary>
        <value><span data-ttu-id="207ee-314">请求的超时值设置。</span><span class="sxs-lookup"><span data-stu-id="207ee-314">The time-out value setting for requests.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-315"><xref:System.Web.HttpServerUtility.ScriptTimeout%2A>属性可以通过设置 Web.config 文件中设置`executionTimeout`的属性[httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)元素。</span><span class="sxs-lookup"><span data-stu-id="207ee-315">The <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> property can be set in the Web.config file by setting the `executionTimeout` attribute of the [httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element.</span></span> <span data-ttu-id="207ee-316">以编程方式使用超时值设置<xref:System.Web.HttpServerUtility.ScriptTimeout%2A>属性优先于 Web.config 设置。</span><span class="sxs-lookup"><span data-stu-id="207ee-316">Setting the time-out programmatically with the <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> property takes precedence over the Web.config setting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="207ee-317">如果您设置`debug`的属性[httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)元素`true`在 Web.config 文件中，值<xref:System.Web.HttpServerUtility.ScriptTimeout%2A>将被忽略。</span><span class="sxs-lookup"><span data-stu-id="207ee-317">If you set the `debug` attribute of the [httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element to `true` in the Web.config file, the value of <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> will be ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="207ee-318">下面的示例将请求超时期限设置为 60 秒。</span><span class="sxs-lookup"><span data-stu-id="207ee-318">The following example sets the request time-out period to 60 seconds.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.ScriptTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.ScriptTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.ScriptTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.ScriptTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="207ee-319">当前 <see cref="T:System.Web.HttpContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-319">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="207ee-320">超时期限为 <see langword="null" /> 或未能设置。</span><span class="sxs-lookup"><span data-stu-id="207ee-320">The time-out period is <see langword="null" /> or otherwise could not be set.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transfer">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="207ee-321">终止当前页的执行，并为当前请求开始执行新页。</span><span class="sxs-lookup"><span data-stu-id="207ee-321">Terminates execution of the current page and starts execution of a new page for the current request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transfer(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Transfer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transfer (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transfer(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Transfer : string -&gt; unit" Usage="httpServerUtility.Transfer path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="207ee-322">服务器上要执行的新页的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-322">The URL path of the new page on the server to execute.</span></span></param>
        <summary><span data-ttu-id="207ee-323">对于当前请求，终止当前页的执行，并使用指定的页 URL 路径来开始执行一个新页。</span><span class="sxs-lookup"><span data-stu-id="207ee-323">For the current request, terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-324">传输到的页面应为另一个.aspx 页面。</span><span class="sxs-lookup"><span data-stu-id="207ee-324">The page transferred to should be another .aspx page.</span></span> <span data-ttu-id="207ee-325">例如，传输到相应的.asp 或.asmx 页不是有效的。</span><span class="sxs-lookup"><span data-stu-id="207ee-325">For instance, a transfer to an .asp or .asmx page is not valid.</span></span> <span data-ttu-id="207ee-326"><xref:System.Web.HttpServerUtility.Transfer%2A>方法会保留<xref:System.Web.HttpRequest.QueryString%2A>和<xref:System.Web.HttpRequest.Form%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="207ee-326">The <xref:System.Web.HttpServerUtility.Transfer%2A> method preserves the <xref:System.Web.HttpRequest.QueryString%2A> and <xref:System.Web.HttpRequest.Form%2A> collections.</span></span>  
  
 <span data-ttu-id="207ee-327"><xref:System.Web.HttpServerUtility.Transfer%2A> 调用<xref:System.Web.HttpResponse.End%2A>，该类会引发<xref:System.Threading.ThreadAbortException>完成后的异常。</span><span class="sxs-lookup"><span data-stu-id="207ee-327"><xref:System.Web.HttpServerUtility.Transfer%2A> calls <xref:System.Web.HttpResponse.End%2A>, which throws a <xref:System.Threading.ThreadAbortException> exception upon completion.</span></span>  
  
 <span data-ttu-id="207ee-328">ASP.NET 不会验证当前用户有权查看由提供的资源<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-328">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="207ee-329">尽管 ASP.NET 授权和身份验证逻辑运行于调用原始资源处理程序之前，ASP.NET 将直接调用所指示的处理程序<xref:System.Web.HttpServerUtility.Transfer%2A>方法并不重新身份验证和授权逻辑运行的新资源。</span><span class="sxs-lookup"><span data-stu-id="207ee-329">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Transfer%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="207ee-330">如果应用程序的安全策略要求客户端具有适当的授权才能访问资源，应用程序应强制重新授权，或提供自定义访问控制机制。</span><span class="sxs-lookup"><span data-stu-id="207ee-330">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="207ee-331">可以使用强制重新授权<xref:System.Web.HttpResponse.Redirect%2A>方法而不是<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-331">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="207ee-332"><xref:System.Web.HttpResponse.Redirect%2A>方法执行在其中浏览器请求新的资源的客户端的重定向。</span><span class="sxs-lookup"><span data-stu-id="207ee-332">The <xref:System.Web.HttpResponse.Redirect%2A> method performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="207ee-333">由于此重定向是新的请求进入系统，它被受制于 Internet 信息服务 (IIS) 和 ASP.NET 安全策略的所有身份验证和授权逻辑。</span><span class="sxs-lookup"><span data-stu-id="207ee-333">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="207ee-334">你可以验证用户有权通过结合使用的自定义授权方法查看资源<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法之前的应用程序调用<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-334">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transfer(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transfer (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transfer(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Transfer : string * bool -&gt; unit" Usage="httpServerUtility.Transfer (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="207ee-335">服务器上要执行的新页的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-335">The URL path of the new page on the server to execute.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="207ee-336">为 <see langword="true" />，则保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；为 <see langword="false" />，则清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="207ee-336"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="207ee-337">终止当前页的执行，并使用指定的页 URL 路径来开始执行一个新页。</span><span class="sxs-lookup"><span data-stu-id="207ee-337">Terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</span></span> <span data-ttu-id="207ee-338">指定是否清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="207ee-338">Specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-339">传输到的页面应为另一个.aspx 页面。</span><span class="sxs-lookup"><span data-stu-id="207ee-339">The page transferred to should be another .aspx page.</span></span> <span data-ttu-id="207ee-340">例如，传输到相应的.asp 或.asmx 页不是有效的。</span><span class="sxs-lookup"><span data-stu-id="207ee-340">For instance, a transfer to an .asp or .asmx page is not valid.</span></span>  
  
 <span data-ttu-id="207ee-341"><xref:System.Web.HttpServerUtility.Transfer%2A> 调用<xref:System.Web.HttpResponse.End%2A>，该类会引发<xref:System.Threading.ThreadAbortException>完成后的异常。</span><span class="sxs-lookup"><span data-stu-id="207ee-341"><xref:System.Web.HttpServerUtility.Transfer%2A> calls <xref:System.Web.HttpResponse.End%2A>, which throws a <xref:System.Threading.ThreadAbortException> exception upon completion.</span></span>  
  
 <span data-ttu-id="207ee-342">如果您设置`preserveForm`参数`true`，目标页将能够通过使用访问前一页的视图状态<xref:System.Web.UI.Page.PreviousPage%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="207ee-342">If you set the `preserveForm` parameter to `true`, the target page will be able to access the view state of the previous page by using the <xref:System.Web.UI.Page.PreviousPage%2A> property.</span></span>  
  
 <span data-ttu-id="207ee-343">出于安全目的，您应保留`enableViewStateMac`属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="207ee-343">For security purposes, you should keep the `enableViewStateMac` attribute set to `true`.</span></span> <span data-ttu-id="207ee-344">ASP.NET 不会验证当前用户有权查看由提供的资源<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-344">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="207ee-345">尽管 ASP.NET 授权和身份验证逻辑运行于调用原始资源处理程序之前，ASP.NET 将直接调用所指示的处理程序<xref:System.Web.HttpServerUtility.Transfer%2A>方法并不重新身份验证和授权逻辑运行的新资源。</span><span class="sxs-lookup"><span data-stu-id="207ee-345">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Transfer%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="207ee-346">如果应用程序的安全策略要求客户端具有适当的授权才能访问资源，应用程序应强制重新授权，或提供自定义访问控制机制。</span><span class="sxs-lookup"><span data-stu-id="207ee-346">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="207ee-347">可以使用强制重新授权<xref:System.Web.HttpResponse.Redirect%2A>方法而不是<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-347">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="207ee-348"><xref:System.Web.HttpResponse.Redirect%2A>方法执行在其中浏览器请求新的资源的客户端的重定向。</span><span class="sxs-lookup"><span data-stu-id="207ee-348">The <xref:System.Web.HttpResponse.Redirect%2A> method performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="207ee-349">由于此重定向是新的请求进入系统，它被受制于 Internet 信息服务 (IIS) 和 ASP.NET 安全策略的所有身份验证和授权逻辑。</span><span class="sxs-lookup"><span data-stu-id="207ee-349">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="207ee-350">你可以验证用户有权通过结合使用的自定义授权方法查看资源<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法之前的应用程序调用<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-350">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="207ee-351">下面的示例执行一个新页作为当前页的相同目录中。</span><span class="sxs-lookup"><span data-stu-id="207ee-351">The following example executes a new page in the same directory as the current page.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.Transfer Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.Transfer Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.Transfer Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.Transfer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="207ee-352">当前页请求为回调。</span><span class="sxs-lookup"><span data-stu-id="207ee-352">The current page request is a callback.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (System.Web.IHttpHandler handler, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transfer(class System.Web.IHttpHandler handler, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transfer (handler As IHttpHandler, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transfer(System::Web::IHttpHandler ^ handler, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Transfer : System.Web.IHttpHandler * bool -&gt; unit" Usage="httpServerUtility.Transfer (handler, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveForm" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="207ee-353">实现 <see cref="T:System.Web.IHttpHandler" /> 以便向其传输当前请求的 HTTP 处理程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-353">The HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> to transfer the current request to.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="207ee-354">为 <see langword="true" />，则保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；为 <see langword="false" />，则清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="207ee-354"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="207ee-355">终止当前页的执行，然后使用实现 <see cref="T:System.Web.IHttpHandler" /> 接口的自定义 HTTP 处理程序开始新请求的执行，并指定是否清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="207ee-355">Terminates execution of the current page and starts execution of a new request by using a custom HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> interface and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-356">您可以编写自定义 HTTP 处理程序来处理特定的预定义任何的类型语言都是符合公共语言规范 (CLS) 中的 HTTP 请求。</span><span class="sxs-lookup"><span data-stu-id="207ee-356">You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</span></span> <span data-ttu-id="207ee-357">而不是传统的 ASP (也称为经典 ASP) 页或 ASP.NET 页的 HTTP 处理程序类中定义的可执行代码对这些特定请求做出响应。</span><span class="sxs-lookup"><span data-stu-id="207ee-357">Executable code that is defined in the HTTP handler classes instead of conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</span></span> <span data-ttu-id="207ee-358">HTTP 处理程序允许与的低级别的请求和响应服务正在运行 Internet 信息服务 (IIS) Web 服务器进行交互和它们提供类似的功能于 ISAPI 扩展，但有一个更简单的编程模型。</span><span class="sxs-lookup"><span data-stu-id="207ee-358">HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</span></span>  
  
 <span data-ttu-id="207ee-359">如果您设置`preserveForm`参数`true`，目标页将能够通过使用访问前一页的视图状态<xref:System.Web.UI.Page.PreviousPage%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="207ee-359">If you set the `preserveForm` parameter to `true`, the target page will be able to access the view state of the previous page by using the <xref:System.Web.UI.Page.PreviousPage%2A> property.</span></span>  
  
 <span data-ttu-id="207ee-360">出于安全目的，您应保留`enableViewStateMac`属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="207ee-360">For security purposes, you should keep the `enableViewStateMac` attribute set to `true`.</span></span> <span data-ttu-id="207ee-361">ASP.NET 不会验证当前用户有权查看由提供的资源<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-361">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="207ee-362">尽管 ASP.NET 授权和身份验证逻辑运行于调用原始资源处理程序之前，ASP.NET 将直接调用所指示的处理程序<xref:System.Web.HttpServerUtility.Transfer%2A>方法，并为新的重新运行任务序列执行身份验证和授权逻辑资源。</span><span class="sxs-lookup"><span data-stu-id="207ee-362">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Transfer%2A> method, and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="207ee-363">如果你的应用程序的安全策略要求客户端具有适当的授权才能访问资源，应用程序应强制重新授权或提供自定义访问控制机制。</span><span class="sxs-lookup"><span data-stu-id="207ee-363">If the security policy for your application requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="207ee-364">可以使用强制重新授权<xref:System.Web.HttpResponse.Redirect%2A>方法而不是<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-364">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="207ee-365"><xref:System.Web.HttpResponse.Redirect%2A>方法执行在其中浏览器请求新的资源的客户端的重定向。</span><span class="sxs-lookup"><span data-stu-id="207ee-365">The <xref:System.Web.HttpResponse.Redirect%2A> method performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="207ee-366">由于此重定向是新的请求进入系统，它会对进行了 IIS 和 ASP.NET 的安全策略的所有身份验证和授权逻辑。</span><span class="sxs-lookup"><span data-stu-id="207ee-366">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="207ee-367">你可以验证用户有权通过结合使用的自定义授权方法查看资源<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法之前的应用程序调用<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-367">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="207ee-368">当前页请求为回调。</span><span class="sxs-lookup"><span data-stu-id="207ee-368">The current page request is a callback.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransferRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="207ee-369">异步执行指定的 URL。</span><span class="sxs-lookup"><span data-stu-id="207ee-369">Performs an asynchronous execution of the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-370"><xref:System.Web.HttpServerUtility.TransferRequest%2A> 在.NET Framework 版本 3.5 中引入。</span><span class="sxs-lookup"><span data-stu-id="207ee-370"><xref:System.Web.HttpServerUtility.TransferRequest%2A> was introduced in the .NET Framework version 3.5.</span></span> <span data-ttu-id="207ee-371">有关.NET Framework 的摘要信息，请参阅[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="207ee-371">For summary information about the .NET Framework, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.TransferRequest : string -&gt; unit" Usage="httpServerUtility.TransferRequest path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="207ee-372">服务器上要执行的新页的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-372">The URL path of the new page on the server to execute.</span></span></param>
        <summary><span data-ttu-id="207ee-373">异步执行指定的 URL。</span><span class="sxs-lookup"><span data-stu-id="207ee-373">Performs an asynchronous execution of the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-374">调用此方法的重载<xref:System.Web.HttpServerUtility.TransferRequest%2A>重载，并`preserveForm`参数设置为`false`，则`method`参数设置为`null`，则`headers`参数设置为`null`，和`preserveUser`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="207ee-374">This method overload calls the <xref:System.Web.HttpServerUtility.TransferRequest%2A> overload with the `preserveForm` parameter set to `false`, the `method` parameter set to `null`, the `headers` parameter set to `null`, and the `preserveUser` parameter set to `true`.</span></span> <span data-ttu-id="207ee-375">有关详细信息，请参阅中的"备注"部分<xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>重载。</span><span class="sxs-lookup"><span data-stu-id="207ee-375">For more information, see the "Remarks" section in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="207ee-376">该请求需要 [!INCLUDE[iisver](~/includes/iisver-md.md)] 的集成管道模式。</span><span class="sxs-lookup"><span data-stu-id="207ee-376">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="207ee-377">服务器无法用于处理请求。</span><span class="sxs-lookup"><span data-stu-id="207ee-377">The server is not available to handle the request.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="207ee-378"><paramref name="path" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-378">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="207ee-379"><paramref name="path" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="207ee-379">The <paramref name="path" /> parameter is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.TransferRequest : string * bool -&gt; unit" Usage="httpServerUtility.TransferRequest (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveForm" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="207ee-380">服务器上要执行的新页的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-380">The URL path of the new page on the server to execute.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="207ee-381">若要保留 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；若要清除 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-381"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span></span></param>
        <summary><span data-ttu-id="207ee-382">异步执行指定的 URL 并保留查询字符串参数。</span><span class="sxs-lookup"><span data-stu-id="207ee-382">Performs an asynchronous execution of the specified URL and preserves query string parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-383">此重载将调用<xref:System.Web.HttpServerUtility.TransferRequest%2A>重载，并`preserveForm`参数设置中，传递的值为`method`参数设置为`null`，则`headers`参数设置为`null`，和`preserveUser`参数集到`true`。</span><span class="sxs-lookup"><span data-stu-id="207ee-383">This overload calls the <xref:System.Web.HttpServerUtility.TransferRequest%2A> overload with the `preserveForm` parameter set to the value passed in, the `method` parameter set to `null`, the `headers` parameter set to `null`, and the `preserveUser` parameter set to `true`.</span></span> <span data-ttu-id="207ee-384">有关详细信息，请参阅中的"备注"部分<xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>。</span><span class="sxs-lookup"><span data-stu-id="207ee-384">For more information, see the "Remarks" section in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</span></span>  
  
 <span data-ttu-id="207ee-385"><xref:System.Web.HttpServerUtility.TransferRequest%2A> 是.NET Framework 3.5 版中引入的。</span><span class="sxs-lookup"><span data-stu-id="207ee-385"><xref:System.Web.HttpServerUtility.TransferRequest%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="207ee-386">有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="207ee-386">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="207ee-387">该请求需要 [!INCLUDE[iisver](~/includes/iisver-md.md)] 的集成管道模式。</span><span class="sxs-lookup"><span data-stu-id="207ee-387">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="207ee-388">服务器无法用于处理请求。</span><span class="sxs-lookup"><span data-stu-id="207ee-388">The server is not available to handle the request.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="207ee-389"><paramref name="path" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-389">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="207ee-390"><paramref name="path" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="207ee-390">The <paramref name="path" /> parameter is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path, bool preserveForm, string method, class System.Collections.Specialized.NameValueCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String, preserveForm As Boolean, method As String, headers As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path, bool preserveForm, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers);" />
      <MemberSignature Language="F#" Value="member this.TransferRequest : string * bool * string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="httpServerUtility.TransferRequest (path, preserveForm, method, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveForm" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="207ee-391">服务器上要执行的新页的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-391">The URL path of the new page on the server to execute.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="207ee-392">若要保留 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；若要清除 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-392"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span></span></param>
        <param name="method"><span data-ttu-id="207ee-393">在执行新请求时使用的 HTTP 方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-393">The HTTP method to use in the execution of the new request.</span></span></param>
        <param name="headers"><span data-ttu-id="207ee-394">用于新请求的请求标头的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-394">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of request headers for the new request.</span></span></param>
        <summary><span data-ttu-id="207ee-395">使用指定的 HTTP 方法和标头异步执行指定的 URL。</span><span class="sxs-lookup"><span data-stu-id="207ee-395">Performs an asynchronous execution of the specified URL using the specified HTTP method and headers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-396">使用中的集成的管道模式运行时使用此方法[!INCLUDE[iisver](~/includes/iisver-md.md)]以允许请求处理，以从一个资源类型传输到另一个执行目标请求与正确的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="207ee-396">This method is used when running with the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] to allow request processing to be transferred from one resource type to another while executing the target request with the correct request context.</span></span> <span data-ttu-id="207ee-397">例如，可以使用<xref:System.Web.HttpServerUtility.TransferRequest%2A>方法传输到 XML 页的请求的 ASPX 页的请求。</span><span class="sxs-lookup"><span data-stu-id="207ee-397">For example, you can use the <xref:System.Web.HttpServerUtility.TransferRequest%2A> method to transfer a request for an ASPX page to a request for an XML page.</span></span>  
  
 <span data-ttu-id="207ee-398"><xref:System.Web.HttpServerUtility.TransferRequest%2A>方法执行异步子执行指定的 url 与以下条件：</span><span class="sxs-lookup"><span data-stu-id="207ee-398">The <xref:System.Web.HttpServerUtility.TransferRequest%2A> method performs an asynchronous child execution of the specified URL with the following conditions:</span></span>  
  
-   <span data-ttu-id="207ee-399">如果`path`参数指定的查询字符串，它将用作新的查询字符串。</span><span class="sxs-lookup"><span data-stu-id="207ee-399">If the `path` parameter specifies a query string, it will be used as the new query string.</span></span> <span data-ttu-id="207ee-400">如果包括任何查询字符串，不则该请求的查询字符串将重新使用。</span><span class="sxs-lookup"><span data-stu-id="207ee-400">If no query string is included, the query string of the request will be re-used.</span></span>  
  
-   <span data-ttu-id="207ee-401">如果`method`指定参数，将使用它。</span><span class="sxs-lookup"><span data-stu-id="207ee-401">If the `method` parameter is specified, it will be used.</span></span> <span data-ttu-id="207ee-402">如果它是`null`，将使用原始请求的 HTTP 方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-402">If it is `null`, the HTTP method of the original request will be used.</span></span>  
  
-   <span data-ttu-id="207ee-403">如果`preserveForm`参数是`true`，当前的实体正文的请求将可供目标请求。</span><span class="sxs-lookup"><span data-stu-id="207ee-403">If the `preserveForm` parameter is `true`, the current entity body of the request will be available to the target request.</span></span> <span data-ttu-id="207ee-404">这使窗体发布，并将上传要在传输。</span><span class="sxs-lookup"><span data-stu-id="207ee-404">This allows form posts and uploads to be transferred.</span></span>  
  
-   <span data-ttu-id="207ee-405">如果对原始请求当前设置的用户标识，标识将传输到新的请求。</span><span class="sxs-lookup"><span data-stu-id="207ee-405">If the user identity is currently set on the original request, the identity will be transferred to the new request.</span></span> <span data-ttu-id="207ee-406">这样，经过身份验证的请求重复使用的身份验证的新请求的结果。</span><span class="sxs-lookup"><span data-stu-id="207ee-406">This allows authenticated requests to re-use the result of the authentication for the new request.</span></span> <span data-ttu-id="207ee-407">如果不希望要传输的用户，将用户设置为`null`传输之前对原始请求。</span><span class="sxs-lookup"><span data-stu-id="207ee-407">If you do not want the user to be transferred, set the user to `null` on the original request before transferring.</span></span>  
  
-   <span data-ttu-id="207ee-408">如果`headers`指定参数时，新的请求将执行的指定标头。</span><span class="sxs-lookup"><span data-stu-id="207ee-408">If the `headers` parameter is specified, the new request will execute with the specified headers.</span></span> <span data-ttu-id="207ee-409">这可用于修改请求标头和 cookie 用于新请求，或添加特殊的标头，指定原始请求的接收位置。</span><span class="sxs-lookup"><span data-stu-id="207ee-409">This can be used to modify the request headers and cookies for the new request, or add a special header that specifies where the original request was received.</span></span>  
  
     <span data-ttu-id="207ee-410">此方法调用<xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29>方法的重载`preserveUser`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="207ee-410">This method calls the <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29> method overload with the `preserveUser` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="207ee-411">该请求要求在集成模式下运行的 [!INCLUDE[iisver](~/includes/iisver-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="207ee-411">The request requires [!INCLUDE[iisver](~/includes/iisver-md.md)] running in integrated mode.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="207ee-412">服务器无法用于处理请求。</span><span class="sxs-lookup"><span data-stu-id="207ee-412">The server is not available to handle the request.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="207ee-413"><paramref name="path" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-413">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="207ee-414"><paramref name="path" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="207ee-414">The <paramref name="path" /> parameter is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers, bool preserveUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path, bool preserveForm, string method, class System.Collections.Specialized.NameValueCollection headers, bool preserveUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String, preserveForm As Boolean, method As String, headers As NameValueCollection, preserveUser As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path, bool preserveForm, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers, bool preserveUser);" />
      <MemberSignature Language="F#" Value="member this.TransferRequest : string * bool * string * System.Collections.Specialized.NameValueCollection * bool -&gt; unit" Usage="httpServerUtility.TransferRequest (path, preserveForm, method, headers, preserveUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveForm" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveUser" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="207ee-415">路径。</span><span class="sxs-lookup"><span data-stu-id="207ee-415">The path.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="207ee-416">若要保留 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；若要清除 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-416"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span></span></param>
        <param name="method"><span data-ttu-id="207ee-417">要在新请求中使用的 HTTP 方法。</span><span class="sxs-lookup"><span data-stu-id="207ee-417">The HTTP method to use in the new request.</span></span></param>
        <param name="headers"><span data-ttu-id="207ee-418">一个包含用于新请求的请求标头的 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="207ee-418">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains request headers for the new request.</span></span></param>
        <param name="preserveUser"><span data-ttu-id="207ee-419">若要保存用户标识，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-419"><see langword="true" /> to preserve the user identity; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="207ee-420">此方法的另一个方法重载调用此重载且将此参数设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-420">The other method overloads of this method call this overload with this parameter set to <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="207ee-421">用指定的 HTTP 方法、标头和路径，执行指定的 URL 上的异步执行和选择保留格式值和用户标识。</span><span class="sxs-lookup"><span data-stu-id="207ee-421">Performs an asynchronous execution of the specified URL using the specified HTTP method, headers, and path, and optionally preserves form values and the user identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-422">有关详细信息，请参阅中的"备注"部分<xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>。</span><span class="sxs-lookup"><span data-stu-id="207ee-422">For more information, see the "Remarks" section in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="207ee-423">该请求需要 [!INCLUDE[iisver](~/includes/iisver-md.md)] 的集成管道模式。</span><span class="sxs-lookup"><span data-stu-id="207ee-423">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="207ee-424">服务器无法用于处理请求。</span><span class="sxs-lookup"><span data-stu-id="207ee-424">The server is not available to handle the request.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="207ee-425"><paramref name="path" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-425">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="207ee-426"><paramref name="path" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="207ee-426">The <paramref name="path" /> parameter is invalid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="207ee-427">对字符串进行解码，该字符串针对 HTTP 传输进行了编码并在 URL 中发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="207ee-427">Decodes a string that was encoded for HTTP transmission and then sent to the server in a URL.</span></span>  
  
<span data-ttu-id="207ee-428">若要对 Web 应用程序之外的值进行编码或解码，请使用 <see cref="T:System.Net.WebUtility" /> 类。</span><span class="sxs-lookup"><span data-stu-id="207ee-428">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public string UrlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UrlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UrlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UrlDecode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.UrlDecode : string -&gt; string" Usage="httpServerUtility.UrlDecode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="207ee-429">要解码的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="207ee-429">The text string to decode.</span></span></param>
        <summary><span data-ttu-id="207ee-430">对字符串进行 URL 解码并返回已解码的字符串。</span><span class="sxs-lookup"><span data-stu-id="207ee-430">URL-decodes a string and returns the decoded string.</span></span></summary>
        <returns><span data-ttu-id="207ee-431">已解码的文本。</span><span class="sxs-lookup"><span data-stu-id="207ee-431">The decoded text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-432">URL 编码可确保所有浏览器会将 URL 字符串中的文本正确传输。</span><span class="sxs-lookup"><span data-stu-id="207ee-432">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="207ee-433">字符，如问题标记 （？）、 & 号 (&)、 斜杠标记 （/） 和空格可能会截断或某些浏览器已损坏。</span><span class="sxs-lookup"><span data-stu-id="207ee-433">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="207ee-434">因此，这些字符必须以编码`<a>`标记或在查询字符串的字符串可以重新发送请求字符串中的浏览器。</span><span class="sxs-lookup"><span data-stu-id="207ee-434">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="207ee-435">此方法是方便地访问<xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType>方法在运行时从 ASP.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-435">This method is a convenient way to access the <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="207ee-436">在内部，此方法使用<xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType>来对字符串进行解码。</span><span class="sxs-lookup"><span data-stu-id="207ee-436">Internally, this method uses <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="207ee-437">在代码隐藏文件中的 ASP.NET web 页，访问的实例<xref:System.Web.HttpServerUtility>类通过`Server`属性。</span><span class="sxs-lookup"><span data-stu-id="207ee-437">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="207ee-438">在不是代码隐藏文件中的类，使用`HttpContext.Current.Server`若要访问的实例<xref:System.Web.HttpServerUtility>类。</span><span class="sxs-lookup"><span data-stu-id="207ee-438">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="207ee-439">在 web 应用程序，外部使用<xref:System.Net.WebUtility>类进行编码或解码的值。</span><span class="sxs-lookup"><span data-stu-id="207ee-439">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="207ee-440">下面的示例演示如何对值进行 URL 解码，从查询字符串检索。</span><span class="sxs-lookup"><span data-stu-id="207ee-440">The following example shows how to URL-decode a value that is retrieved from the query string.</span></span> <span data-ttu-id="207ee-441">代码驻留在 web 页的代码隐藏文件。</span><span class="sxs-lookup"><span data-stu-id="207ee-441">The code resides in the code-behind file for a web page.</span></span> <span data-ttu-id="207ee-442">`ReturnPage` 是指`HyperLink`控件。</span><span class="sxs-lookup"><span data-stu-id="207ee-442">`ReturnPage` refers to a `HyperLink` control.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlDecode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.UrlDecode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="207ee-443">下一个示例是上一个示例类似，但它显示的是如何到进行 URL 解码值从类中的不是在代码隐藏文件中。</span><span class="sxs-lookup"><span data-stu-id="207ee-443">The next example is similar to the previous example except it shows how to URL-decode a value from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlDecode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.UrlDecode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public void UrlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UrlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UrlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UrlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.UrlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.UrlDecode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="207ee-444">要解码的 HTML 字符串。</span><span class="sxs-lookup"><span data-stu-id="207ee-444">The HTML string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="207ee-445"><see cref="T:System.IO.TextWriter" /> 输出包含已解码字符串的流。</span><span class="sxs-lookup"><span data-stu-id="207ee-445">The <see cref="T:System.IO.TextWriter" /> output stream that contains the decoded string.</span></span></param>
        <summary><span data-ttu-id="207ee-446">对在 URL 中接收的 HTML 字符串进行解码，并将结果输出发送到 <see cref="T:System.IO.TextWriter" /> 输出流。</span><span class="sxs-lookup"><span data-stu-id="207ee-446">Decodes an HTML string received in a URL and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-447">URL 编码可确保所有浏览器会将 URL 字符串中的文本正确传输。</span><span class="sxs-lookup"><span data-stu-id="207ee-447">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="207ee-448">字符，如问题标记 （？）、 & 号 (&)、 斜杠标记 （/） 和空格可能会截断或某些浏览器已损坏。</span><span class="sxs-lookup"><span data-stu-id="207ee-448">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="207ee-449">因此，这些字符必须以编码`<a>`标记或在查询字符串的字符串可以重新发送请求字符串中的浏览器。</span><span class="sxs-lookup"><span data-stu-id="207ee-449">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="207ee-450"><xref:System.Web.HttpServerUtility.UrlDecode%2A> 为方便地访问<xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType>方法在运行时从 ASP.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-450"><xref:System.Web.HttpServerUtility.UrlDecode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="207ee-451">在内部，<xref:System.Web.HttpServerUtility.UrlDecode%2A>使用<xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType>来对字符串进行解码。</span><span class="sxs-lookup"><span data-stu-id="207ee-451">Internally, <xref:System.Web.HttpServerUtility.UrlDecode%2A> uses <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="207ee-452">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="207ee-452">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="207ee-453">下面的示例对名为的字符串进行解码`EncodedString`（在 URL 中接收） 到名为的字符串`DecodedString`。</span><span class="sxs-lookup"><span data-stu-id="207ee-453">The following example decodes the string named `EncodedString` (received in a URL) into the string named `DecodedString`.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.UrlDecode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.UrlDecode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.UrlDecode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.UrlDecode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="207ee-454">编码字符串，以便通过 URL 从 Web 服务器到客户端进行可靠的 HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="207ee-454">Encodes a string for reliable HTTP transmission from the Web server to a client through the URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-455"><xref:System.Web.HttpServerUtility.UrlEncode%2A> 为方便地访问<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>方法在运行时从 ASP.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-455"><xref:System.Web.HttpServerUtility.UrlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="207ee-456">在内部，<xref:System.Web.HttpServerUtility.UrlEncode%2A>使用<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>对字符串进行编码。</span><span class="sxs-lookup"><span data-stu-id="207ee-456">Internally, <xref:System.Web.HttpServerUtility.UrlEncode%2A> uses <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="207ee-457">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="207ee-457">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public string UrlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UrlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UrlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UrlEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.UrlEncode : string -&gt; string" Usage="httpServerUtility.UrlEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="207ee-458">要进行 URL 编码的文本。</span><span class="sxs-lookup"><span data-stu-id="207ee-458">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="207ee-459">对字符串进行 URL 编码，并返回已编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="207ee-459">URL-encodes a string and returns the encoded string.</span></span></summary>
        <returns><span data-ttu-id="207ee-460">URL 编码的文本。</span><span class="sxs-lookup"><span data-stu-id="207ee-460">The URL-encoded text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-461">URL 编码可确保所有浏览器会将 URL 字符串中的文本正确传输。</span><span class="sxs-lookup"><span data-stu-id="207ee-461">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="207ee-462">字符，如问题标记 （？）、 & 号 (&)、 斜杠标记 （/） 和空格可能会截断或某些浏览器已损坏。</span><span class="sxs-lookup"><span data-stu-id="207ee-462">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="207ee-463">因此，这些字符必须以编码`<a>`标记或在查询字符串的字符串可以重新发送请求字符串中的浏览器。</span><span class="sxs-lookup"><span data-stu-id="207ee-463">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="207ee-464">此方法是方便地访问<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>方法在运行时从 ASP.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-464">This method is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="207ee-465">在内部，此方法使用<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>对字符串进行编码。</span><span class="sxs-lookup"><span data-stu-id="207ee-465">Internally, this method uses <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="207ee-466">在代码隐藏文件中的 ASP.NET web 页，访问的实例<xref:System.Web.HttpServerUtility>类通过`Server`属性。</span><span class="sxs-lookup"><span data-stu-id="207ee-466">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="207ee-467">在不是代码隐藏文件中的类，使用`HttpContext.Current.Server`若要访问的实例<xref:System.Web.HttpServerUtility>类。</span><span class="sxs-lookup"><span data-stu-id="207ee-467">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="207ee-468">在 web 应用程序，外部使用<xref:System.Net.WebUtility>类进行编码或解码的值。</span><span class="sxs-lookup"><span data-stu-id="207ee-468">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="207ee-469">下面的示例演示如何为一个值进行 URL 编码，可作为超链接的查询字符串值。</span><span class="sxs-lookup"><span data-stu-id="207ee-469">The following example shows how to URL-encode a value that is used as a query string value of a hyperlink.</span></span> <span data-ttu-id="207ee-470">代码驻留在 web 页的代码隐藏文件。</span><span class="sxs-lookup"><span data-stu-id="207ee-470">The code resides in the code-behind file for a web page.</span></span> <span data-ttu-id="207ee-471">要编码的值是硬编码在此示例中仅以简化该示例并显示值的类型可能进行 URL 编码。</span><span class="sxs-lookup"><span data-stu-id="207ee-471">The value to encode is hard-coded in this example only to simplify the example and show the type of value you might URL-encode.</span></span> <span data-ttu-id="207ee-472">通常情况下，你将进行 URL 编码值，你收到了从用户或请求。</span><span class="sxs-lookup"><span data-stu-id="207ee-472">Typically, you would URL-encode a value that you received from the user or the request.</span></span> <span data-ttu-id="207ee-473">`NextPage` 是指`HyperLink`控件。</span><span class="sxs-lookup"><span data-stu-id="207ee-473">`NextPage` refers to a `HyperLink` control.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.UrlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="207ee-474">下一个示例是上一个示例类似，但它显示的是如何进行 URL 编码值从类中的不是在代码隐藏文件中。</span><span class="sxs-lookup"><span data-stu-id="207ee-474">The next example is similar to the previous example except it shows how to URL-encode a value from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlEncode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.UrlEncode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public void UrlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UrlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UrlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UrlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.UrlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.UrlEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="207ee-475">要编码的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="207ee-475">The text string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="207ee-476"><see cref="T:System.IO.TextWriter" /> 输出包含已编码字符串的流。</span><span class="sxs-lookup"><span data-stu-id="207ee-476">The <see cref="T:System.IO.TextWriter" /> output stream that contains the encoded string.</span></span></param>
        <summary><span data-ttu-id="207ee-477">对字符串进行 URL 编码，并将结果输出发送到 <see cref="T:System.IO.TextWriter" /> 输出流。</span><span class="sxs-lookup"><span data-stu-id="207ee-477">URL-encodes a string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-478">URL 编码可确保所有浏览器会将 URL 字符串中的文本正确传输。</span><span class="sxs-lookup"><span data-stu-id="207ee-478">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="207ee-479">字符，如问题标记 （？）、 & 号 (&)、 斜杠标记 （/） 和空格可能会截断或某些浏览器已损坏。</span><span class="sxs-lookup"><span data-stu-id="207ee-479">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="207ee-480">因此，这些字符必须以编码`<a>`标记或在查询字符串的字符串可以重新发送请求字符串中的浏览器。</span><span class="sxs-lookup"><span data-stu-id="207ee-480">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="207ee-481"><xref:System.Web.HttpServerUtility.UrlEncode%2A> 为方便地访问<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>方法在运行时从 ASP.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="207ee-481"><xref:System.Web.HttpServerUtility.UrlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="207ee-482">在内部，<xref:System.Web.HttpServerUtility.UrlEncode%2A>使用<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>对字符串进行编码。</span><span class="sxs-lookup"><span data-stu-id="207ee-482">Internally, <xref:System.Web.HttpServerUtility.UrlEncode%2A> uses <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="207ee-483">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="207ee-483">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="207ee-484">下面的示例将编码用于通过 HTTP 传输的字符串。</span><span class="sxs-lookup"><span data-stu-id="207ee-484">The following example encodes a string for transmission by HTTP.</span></span> <span data-ttu-id="207ee-485">它对名为的字符串进行编码`TestString`，其中包含文本"这是\<测试字符串 >。"，并将其复制到名为的字符串`EncodedString`为"此 + 是 + + %3ctest + 字符串 %3e。"。</span><span class="sxs-lookup"><span data-stu-id="207ee-485">It encodes the string named `TestString`, which contains the text "This is a \<Test String>.", and copies it into the string named `EncodedString` as "This+is+a+%3cTest+String%3e.".</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.UrlEncode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.UrlEncode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.UrlEncode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.UrlEncode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="public string UrlPathEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UrlPathEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UrlPathEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UrlPathEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.UrlPathEncode : string -&gt; string" Usage="httpServerUtility.UrlPathEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="207ee-486">要进行 URL 编码的文本。</span><span class="sxs-lookup"><span data-stu-id="207ee-486">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="207ee-487">请勿使用；仅适用于浏览器兼容性。</span><span class="sxs-lookup"><span data-stu-id="207ee-487">Do not use; intended only for browser compatibility.</span></span> <span data-ttu-id="207ee-488">请使用 <see cref="M:System.Web.HttpServerUtility.UrlEncode(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-488">Use <see cref="M:System.Web.HttpServerUtility.UrlEncode(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="207ee-489">URL 已编码的文本。</span><span class="sxs-lookup"><span data-stu-id="207ee-489">The URL encoded text.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlTokenDecode">
      <MemberSignature Language="C#" Value="public static byte[] UrlTokenDecode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlTokenDecode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlTokenDecode (input As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlTokenDecode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member UrlTokenDecode : string -&gt; byte[]" Usage="System.Web.HttpServerUtility.UrlTokenDecode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="207ee-490">要解码的 URL 字符串标记。</span><span class="sxs-lookup"><span data-stu-id="207ee-490">The URL string token to decode.</span></span></param>
        <summary><span data-ttu-id="207ee-491">将 URL 字符串标记解码为使用 64 进制数字的等效字节数组。</span><span class="sxs-lookup"><span data-stu-id="207ee-491">Decodes a URL string token to its equivalent byte array using base 64 digits.</span></span></summary>
        <returns><span data-ttu-id="207ee-492">包含解码后的 URL 字符串标记的字节数组。</span><span class="sxs-lookup"><span data-stu-id="207ee-492">The byte array containing the decoded URL string token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-493"><xref:System.Web.HttpServerUtility.UrlTokenDecode%2A>方法将 URL 字符串标记，它将二进制数据编码为 base 64 数字，转换为其等效的字节数组表示形式。</span><span class="sxs-lookup"><span data-stu-id="207ee-493">The <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> method converts a URL string token, which encodes binary data as base 64 digits, to its equivalent byte array representation.</span></span> <span data-ttu-id="207ee-494">使用<xref:System.Web.HttpServerUtility.UrlTokenDecode%2A>方法以解码令牌在 URL 中传输和编码使用<xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>。</span><span class="sxs-lookup"><span data-stu-id="207ee-494">Use the <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> method to decode tokens transmitted on the URL and encoded by using the <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>.</span></span>  
  
 <span data-ttu-id="207ee-495"><xref:System.Web.HttpServerUtility.UrlTokenDecode%2A>方法将返回一个空字节数组，如果`input`参数的长度为小于一。</span><span class="sxs-lookup"><span data-stu-id="207ee-495">The <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> method will return an empty byte array if the `input` parameter has a length of less than one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="207ee-496"><paramref name="input" /> 参数的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-496">The value of the <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="UrlTokenEncode">
      <MemberSignature Language="C#" Value="public static string UrlTokenEncode (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlTokenEncode(unsigned int8[] input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlTokenEncode (input As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlTokenEncode(cli::array &lt;System::Byte&gt; ^ input);" />
      <MemberSignature Language="F#" Value="static member UrlTokenEncode : byte[] -&gt; string" Usage="System.Web.HttpServerUtility.UrlTokenEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="207ee-497">要编码的字节数组。</span><span class="sxs-lookup"><span data-stu-id="207ee-497">The byte array to encode.</span></span></param>
        <summary><span data-ttu-id="207ee-498">将一个字节数组编码为使用 Base 64 编码方案的等效字符串表示形式，Base 64 是一种适于通过 URL 传输数据的编码方案。</span><span class="sxs-lookup"><span data-stu-id="207ee-498">Encodes a byte array into its equivalent string representation using base 64 digits, which is usable for transmission on the URL.</span></span></summary>
        <returns><span data-ttu-id="207ee-499">如果字节数组的长度大于 1，则为包含编码后的标记的字符串；否则为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="207ee-499">The string containing the encoded token if the byte array *length* is greater than one; otherwise, an empty string ("").</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="207ee-500"><xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>方法将使用 base 64 数字编码的等效字符串表示形式转换为字节数组。</span><span class="sxs-lookup"><span data-stu-id="207ee-500">The <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A> method converts a byte array into an equivalent string representation encoded with base 64 digits.</span></span> <span data-ttu-id="207ee-501">可以在 URL 中传输生成的字符串标记。</span><span class="sxs-lookup"><span data-stu-id="207ee-501">The resulting string token can be transmitted on the URL.</span></span>  
  
 <span data-ttu-id="207ee-502"><xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>将返回空字符串，如果`input`参数的长度为小于一。</span><span class="sxs-lookup"><span data-stu-id="207ee-502">The <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A> will return an empty string if the `input` parameter has a length of less than one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="207ee-503"><paramref name="input" /> 参数的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="207ee-503">The value of the <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Convert.ToBase64String(System.Byte[])" />
        <altmember cref="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>