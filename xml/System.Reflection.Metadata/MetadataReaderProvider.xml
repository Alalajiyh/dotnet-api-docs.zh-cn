<Type Name="MetadataReaderProvider" FullName="System.Reflection.Metadata.MetadataReaderProvider">
  <TypeSignature Language="C#" Value="public sealed class MetadataReaderProvider : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataReaderProvider extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.MetadataReaderProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataReaderProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataReaderProvider sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type MetadataReaderProvider = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="metadataReaderProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放所有内存分配的读取器。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMetadataImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage (System.Collections.Immutable.ImmutableArray&lt;byte&gt; image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMetadataImage (image As ImmutableArray(Of Byte)) As MetadataReaderProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromMetadataImage(System::Collections::Immutable::ImmutableArray&lt;System::Byte&gt; image);" />
      <MemberSignature Language="F#" Value="static member FromMetadataImage : System.Collections.Immutable.ImmutableArray&lt;byte&gt; -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="image">元数据的图像。</param>
        <summary>创建一个提供程序对字节数组。</summary>
        <returns>新的提供程序。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="image" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="FromMetadataImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage (byte* start, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage(unsigned int8* start, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromMetadataImage(System::Byte* start, int size);" />
      <MemberSignature Language="F#" Value="static member FromMetadataImage : nativeptr&lt;byte&gt; * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage (start, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Byte*" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">到元数据 blob 的起始位置的指针。</param>
        <param name="size">元数据 blob 的大小。</param>
        <summary>创建元数据提供程序对内存中存储的图像。</summary>
        <returns>新的元数据提供程序。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="start" /> 为 <see cref="F:System.IntPtr.Zero" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="size" /> 为负数。</exception>
      </Docs>
    </Member>
    <Member MemberName="FromMetadataStream">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromMetadataStream (System.IO.Stream stream, System.Reflection.Metadata.MetadataStreamOptions options = System.Reflection.Metadata.MetadataStreamOptions.Default, int size = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromMetadataStream(class System.IO.Stream stream, valuetype System.Reflection.Metadata.MetadataStreamOptions options, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataStream(System.IO.Stream,System.Reflection.Metadata.MetadataStreamOptions,System.Int32)" />
      <MemberSignature Language="F#" Value="static member FromMetadataStream : System.IO.Stream * System.Reflection.Metadata.MetadataStreamOptions * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromMetadataStream (stream, options, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataStreamOptions" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">一个 <see cref="T:System.IO.Stream" /> 实例。</param>
        <param name="options">指定如何从流中读取图像的部分的选项。</param>
        <param name="size">在流中的元数据 blob 的大小。 如果未指定，则假定元数据 blob 跨越到流的末尾。</param>
        <summary>在当前位置创建指定的大小开始的流的提供程序。</summary>
        <returns>新的提供程序。</returns>
        <remarks>
          <format type="text/markdown">
        

除非<xref:F:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen>未指定，流的所有权转让给<xref:T:System.Reflection.Metadata.MetadataReaderProvider>成功参数进行验证时。 它将释放通过<xref:T:System.Reflection.Metadata.MetadataReaderProvider>和调用方不必须对其进行操作。
            
除非<xref:F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata>指定在构造期间从流读取任何数据<xref:T:System.Reflection.Metadata.MetadataReaderProvider>。 此外，该流不都必须由调用方时操作<xref:T:System.Reflection.Metadata.MetadataReaderProvider>正在工作并在未释放。
            
如果<xref:F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata>，则<xref:T:System.Reflection.Metadata.MetadataReaderProvider>会有读取所有在构造期间请求的数据。 在这种情况下，如果<xref:F:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen>还指定，则调用方保留的流的完全的所有权和有保证的它将不会由操作<xref:T:System.Reflection.Metadata.MetadataReaderProvider>后构造。

               </format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="stream" /> 不支持读取和查找操作。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">大小为负或流的末尾。</exception>
        <exception cref="T:System.IO.IOException">从流读取时出错 (仅当<see cref="F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata" />指定)。</exception>
      </Docs>
    </Member>
    <Member MemberName="FromPortablePdbImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage (System.Collections.Immutable.ImmutableArray&lt;byte&gt; image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromPortablePdbImage (image As ImmutableArray(Of Byte)) As MetadataReaderProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromPortablePdbImage(System::Collections::Immutable::ImmutableArray&lt;System::Byte&gt; image);" />
      <MemberSignature Language="F#" Value="static member FromPortablePdbImage : System.Collections.Immutable.ImmutableArray&lt;byte&gt; -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="image">可移植 PDB 映像。</param>
        <summary>创建可移植 PDB 元数据提供程序对字节数组。</summary>
        <returns>新可移植 PDB 元数据提供程序。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="image" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="FromPortablePdbImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage (byte* start, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage(unsigned int8* start, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromPortablePdbImage(System::Byte* start, int size);" />
      <MemberSignature Language="F#" Value="static member FromPortablePdbImage : nativeptr&lt;byte&gt; * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage (start, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Byte*" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">可移植 PDB blob 开头的指针。</param>
        <param name="size">可移植 PDB blob 的大小。</param>
        <summary>创建基于存储在内存中的 blob 的可移植 PDB 元数据提供程序。</summary>
        <returns>新可移植 PDB 元数据提供程序。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="start" /> 为 <see cref="F:System.IntPtr.Zero" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="size" /> 为负数。</exception>
      </Docs>
    </Member>
    <Member MemberName="FromPortablePdbStream">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbStream (System.IO.Stream stream, System.Reflection.Metadata.MetadataStreamOptions options = System.Reflection.Metadata.MetadataStreamOptions.Default, int size = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbStream(class System.IO.Stream stream, valuetype System.Reflection.Metadata.MetadataStreamOptions options, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbStream(System.IO.Stream,System.Reflection.Metadata.MetadataStreamOptions,System.Int32)" />
      <MemberSignature Language="F#" Value="static member FromPortablePdbStream : System.IO.Stream * System.Reflection.Metadata.MetadataStreamOptions * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbStream (stream, options, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataStreamOptions" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">流。</param>
        <param name="options">指定如何从流中读取图像的部分的选项。</param>
        <param name="size">在流中的元数据 blob 的大小。 如果未指定，则假定元数据 blob 跨越到流的末尾。</param>
        <summary>在当前位置创建指定的大小开始的流的提供程序。</summary>
        <returns>一个 <see cref="T:System.Reflection.Metadata.MetadataReaderProvider" /> 实例。</returns>
        <remarks>
          <format type="text/markdown">
        
            
除非<xref:F:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen>未指定，流的所有权转让给<xref:T:System.Reflection.Metadata.MetadataReaderProvider>成功参数进行验证时。 它将释放通过<xref:T:System.Reflection.Metadata.MetadataReaderProvider>和调用方不必须对其进行操作。
            
除非<xref:F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata>指定在构造期间从流读取任何数据<xref:T:System.Reflection.Metadata.MetadataReaderProvider>。 此外，该流不都必须由调用方时操作<xref:T:System.Reflection.Metadata.MetadataReaderProvider>正在工作并在未释放。
            
如果<xref:F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata>，则<xref:T:System.Reflection.Metadata.MetadataReaderProvider>会有读取所有在构造期间请求的数据。 在这种情况下，如果<xref:F:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen>还指定，则调用方保留的流的完全的所有权和有保证的它将不会由操作<xref:T:System.Reflection.Metadata.MetadataReaderProvider>后构造。

               </format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="stream" /> 不支持读取和查找操作。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">大小为负或流的末尾。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataReader">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MetadataReader GetMetadataReader (System.Reflection.Metadata.MetadataReaderOptions options = System.Reflection.Metadata.MetadataReaderOptions.Default, System.Reflection.Metadata.MetadataStringDecoder utf8Decoder = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Metadata.MetadataReader GetMetadataReader(valuetype System.Reflection.Metadata.MetadataReaderOptions options, class System.Reflection.Metadata.MetadataStringDecoder utf8Decoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.GetMetadataReader(System.Reflection.Metadata.MetadataReaderOptions,System.Reflection.Metadata.MetadataStringDecoder)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataReader (Optional options As MetadataReaderOptions = System.Reflection.Metadata.MetadataReaderOptions.Default, Optional utf8Decoder As MetadataStringDecoder = null) As MetadataReader" />
      <MemberSignature Language="F#" Value="member this.GetMetadataReader : System.Reflection.Metadata.MetadataReaderOptions * System.Reflection.Metadata.MetadataStringDecoder -&gt; System.Reflection.Metadata.MetadataReader" Usage="metadataReaderProvider.GetMetadataReader (options, utf8Decoder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataReaderOptions" />
        <Parameter Name="utf8Decoder" Type="System.Reflection.Metadata.MetadataStringDecoder" />
      </Parameters>
      <Docs>
        <param name="options">读取元数据时代表的配置的枚举值的按位组合。</param>
        <param name="utf8Decoder">要使用的编码。</param>
        <summary>获取<see cref="T:System.Reflection.Metadata.MetadataReader" />从<see cref="T:System.Reflection.Metadata.MetadataReaderProvider" />。</summary>
        <returns>一个<see cref="T:System.Reflection.Metadata.MetadataReader" />实例...</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">编码<paramref name="utf8Decoder" />不是<see cref="T:System.Text.UTF8Encoding" />。</exception>
        <exception cref="T:System.PlatformNotSupportedException">当前平台是 big endian。</exception>
        <exception cref="T:System.IO.IOException">从基础流进行读取时出现 IO 错误。</exception>
        <exception cref="T:System.ObjectDisposedException">提供程序已被释放。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
