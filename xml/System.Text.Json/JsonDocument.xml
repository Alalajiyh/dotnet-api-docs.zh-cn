<Type Name="JsonDocument" FullName="System.Text.Json.JsonDocument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7cb6573dc8ebcc99bc57891401b7523f4130c8d6" /><Meta Name="ms.sourcegitcommit" Value="75eca440f8f4d595506405f48961f38649e160d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/01/2019" /><Meta Name="ms.locfileid" Value="66457994" /></Metadata><TypeSignature Language="C#" Value="public sealed class JsonDocument : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit JsonDocument extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonDocument" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JsonDocument&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonDocument sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type JsonDocument = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="ee1f7-101">提供用于检查 JSON 值的结构内容，而不自动实例化数据值的机制。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-101">Provides a mechanism for examining the structural content of a JSON value without automatically instantiating data values.</span></span></summary>
    <remarks>
      <format><![CDATA[
      
<span data-ttu-id="ee1f7-102">此类利用垃圾回收 (GC) 在高使用方案中的影响降至最低的共用内存中的资源。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-102">This class utilizes resources from pooled memory to minimize the impact of the garbage collector (GC) in high-usage scenarios.</span></span> <span data-ttu-id="ee1f7-103">未能正确释放此对象将导致不返回到池，这会增加跨框架的各个部分的 GC 影响的内存。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-103">Failure to properly dispose this object will result in the memory not being returned to the pool, which will increase GC impact across various parts of the framework.</span></span>
              
      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="jsonDocument.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (System.Buffers.ReadOnlySequence&lt;byte&gt; utf8Json, System.Text.Json.JsonReaderOptions readerOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(valuetype System.Buffers.ReadOnlySequence`1&lt;unsigned int8&gt; utf8Json, valuetype System.Text.Json.JsonReaderOptions readerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.Buffers.ReadOnlySequence{System.Byte},System.Text.Json.JsonReaderOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (utf8Json As ReadOnlySequence(Of Byte), Optional readerOptions As JsonReaderOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : System.Buffers.ReadOnlySequence&lt;byte&gt; * System.Text.Json.JsonReaderOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (utf8Json, readerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.Buffers.ReadOnlySequence&lt;System.Byte&gt;" />
        <Parameter Name="readerOptions" Type="System.Text.Json.JsonReaderOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="ee1f7-104">要分析的 JSON 文本。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-104">The JSON text to parse.</span></span></param>
        <param name="readerOptions"><span data-ttu-id="ee1f7-105">分析期间用于控制读取器行为的选项。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-105">Options to control the reader behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="ee1f7-106">将表示单个 JSON 字节值的 UTF-8 编码文本形式的序列分析为 JsonDocument。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-106">Parses a sequence as UTF-8-encoded text representing a single JSON byte value into a JsonDocument.</span></span></summary>
        <returns><span data-ttu-id="ee1f7-107">JSON 值的 JsonDocument 表示。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-107">A JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="ee1f7-108"><xref:System.Buffers.ReadOnlySequence%601>可能 JsonDocument 对象的整个生存期内使用，且调用方必须确保，数据就不会更改的对象生存期内。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-108">The <xref:System.Buffers.ReadOnlySequence%601> may be used for the entire lifetime of the JsonDocument object, and the caller must ensure that the data therein does not change during the object lifetime.</span></span>
               
<span data-ttu-id="ee1f7-109">输入被视为文本，因为 utf-8 字节顺序标记 (BOM) 不能存在。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-109">Because the input is considered to be text, a UTF-8 Byte-Order-Mark (BOM) must not be present.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="ee1f7-110"><paramref name="utf8Json" /> 不表示有效的单个 JSON 值。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-110"><paramref name="utf8Json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ee1f7-111"><paramref name="readerOptions" /> 包含不受支持的选项。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-111"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (System.IO.Stream utf8Json, System.Text.Json.JsonReaderOptions readerOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(class System.IO.Stream utf8Json, valuetype System.Text.Json.JsonReaderOptions readerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.IO.Stream,System.Text.Json.JsonReaderOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (utf8Json As Stream, Optional readerOptions As JsonReaderOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : System.IO.Stream * System.Text.Json.JsonReaderOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (utf8Json, readerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="readerOptions" Type="System.Text.Json.JsonReaderOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="ee1f7-112">要分析的 JSON 数据。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-112">The JSON data to parse.</span></span></param>
        <param name="readerOptions"><span data-ttu-id="ee1f7-113">分析期间用于控制读取器行为的选项。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-113">Options to control the reader behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="ee1f7-114">将表示单个 JSON 值的 UTF-8 编码数据形式的 <see cref="T:System.IO.Stream" /> 分析为 JsonDocument。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-114">Parses a <see cref="T:System.IO.Stream" /> as UTF-8-encoded data representing a single JSON value into a JsonDocument.</span></span> <span data-ttu-id="ee1f7-115">数据流将被完整读取。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-115">The stream is read to completion.</span></span></summary>
        <returns><span data-ttu-id="ee1f7-116">JSON 值的 JsonDocument 表示。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-116">A JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="ee1f7-117"><paramref name="utf8Json" /> 不表示有效的单个 JSON 值。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-117"><paramref name="utf8Json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ee1f7-118"><paramref name="readerOptions" /> 包含不受支持的选项。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-118"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (ReadOnlyMemory&lt;byte&gt; utf8Json, System.Text.Json.JsonReaderOptions readerOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; utf8Json, valuetype System.Text.Json.JsonReaderOptions readerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.ReadOnlyMemory{System.Byte},System.Text.Json.JsonReaderOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (utf8Json As ReadOnlyMemory(Of Byte), Optional readerOptions As JsonReaderOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlyMemory&lt;byte&gt; * System.Text.Json.JsonReaderOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (utf8Json, readerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="readerOptions" Type="System.Text.Json.JsonReaderOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="ee1f7-119">要分析的 JSON 文本。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-119">The JSON text to parse.</span></span></param>
        <param name="readerOptions"><span data-ttu-id="ee1f7-120">分析期间用于控制读取器行为的选项。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-120">Options to control the reader behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="ee1f7-121">将表示单个 JSON 字节值的 UTF-8 编码文本形式的内存分析为 JsonDocument。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-121">Parses memory as UTF-8-encoded text representing a single JSON byte value into a JsonDocument.</span></span></summary>
        <returns><span data-ttu-id="ee1f7-122">JSON 值的 JsonDocument 表示。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-122">A JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="ee1f7-123"><xref:System.ReadOnlyMemory%601> JsonDocument 对象的整个生存期内将使用值和调用方必须确保，数据就不会更改的对象生存期内。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-123">The <xref:System.ReadOnlyMemory%601> value will be used for the entire lifetime of the JsonDocument object, and the caller must ensure that the data therein does not change during the object lifetime.</span></span>

<span data-ttu-id="ee1f7-124">输入被视为文本，因为 utf-8 字节顺序标记 (BOM) 不能存在。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-124">Because the input is considered to be text, a UTF-8 Byte-Order-Mark (BOM) must not be present.</span></span>
                 
          ]]></format>
        </remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="ee1f7-125"><paramref name="utf8Json" /> 不表示有效的单个 JSON 值。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-125"><paramref name="utf8Json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ee1f7-126"><paramref name="readerOptions" /> 包含不受支持的选项。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-126"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (ReadOnlyMemory&lt;char&gt; json, System.Text.Json.JsonReaderOptions readerOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(valuetype System.ReadOnlyMemory`1&lt;char&gt; json, valuetype System.Text.Json.JsonReaderOptions readerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.ReadOnlyMemory{System.Char},System.Text.Json.JsonReaderOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (json As ReadOnlyMemory(Of Char), Optional readerOptions As JsonReaderOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlyMemory&lt;char&gt; * System.Text.Json.JsonReaderOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (json, readerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="json" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="readerOptions" Type="System.Text.Json.JsonReaderOptions" />
      </Parameters>
      <Docs>
        <param name="json"><span data-ttu-id="ee1f7-127">要分析的 JSON 文本。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-127">The JSON text to parse.</span></span></param>
        <param name="readerOptions"><span data-ttu-id="ee1f7-128">分析期间用于控制读取器行为的选项。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-128">Options to control the reader behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="ee1f7-129">将表示单个 JSON 字符值的文本分析为 JsonDocument。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-129">Parses text representing a single JSON character value into a JsonDocument.</span></span></summary>
        <returns><span data-ttu-id="ee1f7-130">JSON 值的 JsonDocument 表示。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-130">A JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="ee1f7-131"><xref:System.ReadOnlyMemory%601> JsonDocument 对象的整个生存期内可能会使用值和调用方必须确保，数据就不会更改的对象生存期内。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-131">The <xref:System.ReadOnlyMemory%601> value may be used for the entire lifetime of the JsonDocument object, and the caller must ensure that the data therein does not change during the object lifetime.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="ee1f7-132"><paramref name="json" /> 不表示有效的单个 JSON 值。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-132"><paramref name="json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ee1f7-133"><paramref name="readerOptions" /> 包含不受支持的选项。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-133"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (string json, System.Text.Json.JsonReaderOptions readerOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(string json, valuetype System.Text.Json.JsonReaderOptions readerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.String,System.Text.Json.JsonReaderOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (json As String, Optional readerOptions As JsonReaderOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Text.Json.JsonReaderOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (json, readerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="json" Type="System.String" />
        <Parameter Name="readerOptions" Type="System.Text.Json.JsonReaderOptions" />
      </Parameters>
      <Docs>
        <param name="json"><span data-ttu-id="ee1f7-134">要分析的 JSON 文本。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-134">The JSON text to parse.</span></span></param>
        <param name="readerOptions"><span data-ttu-id="ee1f7-135">分析期间用于控制读取器行为的选项。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-135">Options to control the reader behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="ee1f7-136">将表示单个 JSON 字符串值的文本分析为 JsonDocument。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-136">Parses text representing a single JSON string value into a JsonDocument.</span></span></summary>
        <returns><span data-ttu-id="ee1f7-137">JSON 值的 JsonDocument 表示。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-137">A JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="ee1f7-138"><paramref name="json" /> 不表示有效的单个 JSON 值。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-138"><paramref name="json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ee1f7-139"><paramref name="readerOptions" /> 包含不受支持的选项。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-139"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Text.Json.JsonDocument&gt; ParseAsync (System.IO.Stream utf8Json, System.Text.Json.JsonReaderOptions readerOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Text.Json.JsonDocument&gt; ParseAsync(class System.IO.Stream utf8Json, valuetype System.Text.Json.JsonReaderOptions readerOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.ParseAsync(System.IO.Stream,System.Text.Json.JsonReaderOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ParseAsync : System.IO.Stream * System.Text.Json.JsonReaderOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Text.Json.JsonDocument&gt;" Usage="System.Text.Json.JsonDocument.ParseAsync (utf8Json, readerOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Text.Json.JsonDocument&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="readerOptions" Type="System.Text.Json.JsonReaderOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="ee1f7-140">要分析的 JSON 数据。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-140">The JSON data to parse.</span></span></param>
        <param name="readerOptions"><span data-ttu-id="ee1f7-141">分析期间用于控制读取器行为的选项。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-141">Options to control the reader behavior during parsing.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="ee1f7-142">要监视取消请求的标记。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-142">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="ee1f7-143">将表示单个 JSON 值的 UTF-8 编码数据形式的 <see cref="T:System.IO.Stream" /> 分析为 JsonDocument。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-143">Parses a <see cref="T:System.IO.Stream" /> as UTF-8-encoded data representing a single JSON value into a JsonDocument.</span></span> <span data-ttu-id="ee1f7-144">数据流将被完整读取。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-144">The stream is read to completion.</span></span></summary>
        <returns><span data-ttu-id="ee1f7-145">用于生成 JSON 值的 JsonDocument 表示的任务。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-145">A task to produce a JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="ee1f7-146"><paramref name="utf8Json" /> 不表示有效的单个 JSON 值。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-146"><paramref name="utf8Json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ee1f7-147"><paramref name="readerOptions" /> 包含不受支持的选项。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-147"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument ParseValue (ref System.Text.Json.Utf8JsonReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument ParseValue(valuetype System.Text.Json.Utf8JsonReader&amp; reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.ParseValue(System.Text.Json.Utf8JsonReader@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseValue (ByRef reader As Utf8JsonReader) As JsonDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Json::JsonDocument ^ ParseValue(System::Text::Json::Utf8JsonReader % reader);" />
      <MemberSignature Language="F#" Value="static member ParseValue :  -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.ParseValue reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ee1f7-148">要用于读取的读取器。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-148">The reader to read.</span></span></param>
        <summary><span data-ttu-id="ee1f7-149">通过提供的读取器分析一个 JSON 值（包括对象或数组）。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-149">Parses one JSON value (including objects or arrays) from the provided reader.</span></span></summary>
        <returns><span data-ttu-id="ee1f7-150">表示从读取器中读取的值（和嵌套值）的 JsonDocument。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-150">A JsonDocument representing the value (and nested values) read from the reader.</span></span></returns>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="ee1f7-151">如果<xref:System.Text.Json.Utf8JsonReader.TokenType>的属性`reader`是<xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType>或<xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>，读取器将通过调用一次前进<xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType>来确定值的开头。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-151">If the <xref:System.Text.Json.Utf8JsonReader.TokenType> property of `reader` is <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> or <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>, the reader will advance by one call to <xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> to determine the start of the value.</span></span>
               
<span data-ttu-id="ee1f7-152">此方法完成后`reader`位于 JSON 值中的最后一个令牌。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-152">Upon completion of this method, `reader` is positioned at the final token in the JSON value.</span></span> <span data-ttu-id="ee1f7-153">如果引发异常，读取器将重置为调用该方法时的状态。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-153">If an exception is thrown, the reader is reset to the state it was in when the method was called.</span></span>
               
<span data-ttu-id="ee1f7-154">此方法会一份数据读取器操作，这样无调用方以保持超出此方法返回的数据完整性。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-154">This method makes a copy of the data the reader acted on, so there is no caller requirement to maintain data integrity beyond the return of this method.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ee1f7-155"><paramref name="reader" /> 包含不受支持的选项。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-155"><paramref name="reader" /> contains unsupported options.</span></span></exception>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="ee1f7-156">无法从读取器中读取值。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-156">A value could not be read from the reader.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RootElement">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement RootElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonElement RootElement" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonDocument.RootElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElement As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonElement RootElement { System::Text::Json::JsonElement get(); };" />
      <MemberSignature Language="F#" Value="member this.RootElement : System.Text.Json.JsonElement" Usage="System.Text.Json.JsonDocument.RootElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee1f7-157">获取此 JSON 文档的根元素。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-157">Gets the root element of this JSON document.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseValue">
      <MemberSignature Language="C#" Value="public static bool TryParseValue (ref System.Text.Json.Utf8JsonReader reader, out System.Text.Json.JsonDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseValue(valuetype System.Text.Json.Utf8JsonReader&amp; reader, [out] class System.Text.Json.JsonDocument&amp; document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.TryParseValue(System.Text.Json.Utf8JsonReader@,System.Text.Json.JsonDocument@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseValue (ByRef reader As Utf8JsonReader, ByRef document As JsonDocument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseValue(System::Text::Json::Utf8JsonReader % reader, [Runtime::InteropServices::Out] System::Text::Json::JsonDocument ^ % document);" />
      <MemberSignature Language="F#" Value="static member TryParseValue :  *  -&gt; bool" Usage="System.Text.Json.JsonDocument.TryParseValue (reader, document)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="document" Type="System.Text.Json.JsonDocument" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ee1f7-158">要用于读取的读取器。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-158">The reader to read.</span></span></param>
        <param name="document"><span data-ttu-id="ee1f7-159">方法返回时，包含已分析的文档。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-159">When the method returns, contains the parsed document.</span></span></param>
        <summary><span data-ttu-id="ee1f7-160">尝试通过提供的读取器分析一个 JSON 值（包括对象或数组）。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-160">Attempts to parse one JSON value (including objects or arrays) from the provided reader.</span></span></summary>
        <returns><span data-ttu-id="ee1f7-161">如果读取了值并将其分析为 JsonDocument，则为 <see langword="true" />；如果读取器在分析时耗尽了数据，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-161"><see langword="true" /> if a value was read and parsed into a JsonDocument; <see langword="false" /> if the reader ran out of data while parsing.</span></span> <span data-ttu-id="ee1f7-162">所有其他情况都会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-162">All other situations result in an exception being thrown.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="ee1f7-163">如果<xref:System.Text.Json.Utf8JsonReader.TokenType>的属性`reader`是<xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType>或<xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>，读取器将通过调用一次前进<xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType>来确定值的开头。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-163">If the <xref:System.Text.Json.Utf8JsonReader.TokenType> property of `reader` is <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> or <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>, the reader will advance by one call to <xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> to determine the start of the value.</span></span>
               
<span data-ttu-id="ee1f7-164">此方法完成后`reader`位于 JSON 值中的最后一个令牌。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-164">Upon completion of this method, `reader` is positioned at the final token in the JSON value.</span></span> <span data-ttu-id="ee1f7-165">如果引发异常或`false`返回，则读取器将重置为调用该方法时的状态。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-165">If an exception is thrown or `false` is returned, the reader is reset to the state it was in when the method was called.</span></span>
               
<span data-ttu-id="ee1f7-166">此方法会一份数据读取器操作，这样无调用方以保持超出此方法返回的数据完整性。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-166">This method makes a copy of the data the reader acted on, so there is no caller requirement to maintain data integrity beyond the return of this method.</span></span>
                 
               ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ee1f7-167"><paramref name="reader" /> 包含不受支持的选项。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-167"><paramref name="reader" /> contains unsupported options.</span></span></exception>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="ee1f7-168">无法从读取器中读取值。</span><span class="sxs-lookup"><span data-stu-id="ee1f7-168">A value could not be read from the reader.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>