<Type Name="FileUpload" FullName="System.Web.UI.WebControls.FileUpload">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b34526078954ce8a27eb4f014ca28ff482e69f99" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66005951" /></Metadata><TypeSignature Language="C#" Value="public class FileUpload : System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileUpload extends System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FileUpload" />
  <TypeSignature Language="VB.NET" Value="Public Class FileUpload&#xA;Inherits WebControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileUpload : System::Web::UI::WebControls::WebControl" />
  <TypeSignature Language="F#" Value="type FileUpload = class&#xA;    inherit WebControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("FileBytes")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("FileName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>显示一个文本框控件和一个浏览按钮，使用户可以选择要上载到服务器的文件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主题内容：  
  
-   [介绍](#introduction)  
  
-   [正在保存已上载的文件](#saving_uploaded_files)  
  
-   [安全注意事项](#security_considerations)  
  
-   [内存限制](#memory_limitations)  
  
-   [使用 UpdatePanel 控件使用 FileUpload 控件](#using_the_FileUpload_Control_with_the_UpdatePanel_control)  
  
-   [声明性语法](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>介绍  
 <xref:System.Web.UI.WebControls.FileUpload>类显示的文本框控件和一个浏览按钮，使用户能够选择客户端上的文件并将其上载到 Web 服务器。 用户指定要通过输入本地计算机上的文件的完整路径上传的文件 (例如， **C:\MyFiles\TestFile.txt**) 中的文本框的控件。 或者，用户可以通过单击选择的文件**浏览**按钮，并将然后将其在定位**选择文件**对话框。  
  
 使用<xref:System.Web.UI.WebControls.FileUpload.FileName%2A>属性获取在客户端使用来上传文件的名称<xref:System.Web.UI.WebControls.FileUpload>控件。 此属性返回的文件名称不包括在客户端上文件的路径。  
  
 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>属性获取<xref:System.IO.Stream>指向要上载的文件的对象。 使用此属性来访问文件的内容作为字节。 例如，可以使用<xref:System.IO.Stream>返回的对象<xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>属性读取的文件的内容作为字节并将其存储在字节数组中。 或者，可以使用<xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A>属性来检索该文件中的所有字节。  
  
 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>属性获取基础<xref:System.Web.HttpPostedFile>要上载的文件的对象。 此属性可用于访问该文件上的其他属性。 <xref:System.Web.HttpPostedFile.ContentLength%2A>属性获取文件的长度。 <xref:System.Web.HttpPostedFile.ContentType%2A>属性获取该文件的 MIME 内容类型。 此外，还可以使用<xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>属性来访问<xref:System.Web.HttpPostedFile.FileName%2A>属性，<xref:System.Web.HttpPostedFile.InputStream%2A>属性，并<xref:System.Web.HttpPostedFile.SaveAs%2A>方法。 但是，通过提供相同的功能<xref:System.Web.UI.WebControls.FileUpload.FileName%2A>属性，<xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>属性，并<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>方法。  
  
<a name="saving_uploaded_files"></a>   
## <a name="saving-uploaded-files"></a>正在保存已上载的文件  
 <xref:System.Web.UI.WebControls.FileUpload>控件不会不会自动将文件保存到服务器后用户选择要上载的文件。 您必须显式提供的控件或机制以允许用户提交指定的文件。 例如，可以提供一个按钮，用户单击以将文件上传。 为保存指定的文件而编写的代码应调用<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>方法，在服务器的文件内容保存到指定的路径。 通常情况下，<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>引发回发到服务器的事件的事件处理方法中调用方法。 例如，如果提供一个用于将文件提交按钮，可能包括用于保存该文件内的 click 事件的事件处理方法的代码。  
  
 然后再调用<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>方法以保存到服务器的文件，使用<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>属性来验证<xref:System.Web.UI.WebControls.FileUpload>控件包含一个文件。 如果<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>将返回`true`，调用<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>方法。 如果它返回`false`，指示该控件不包含文件的用户显示一条消息。 不会检查<xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>属性来确定是否要上载的文件存在，因为默认情况下，此属性包含 0 字节。 因此，即使<xref:System.Web.UI.WebControls.FileUpload>控件为空，<xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>属性返回非 null 值。  
  
<a name="security_considerations"></a>   
## <a name="security-considerations"></a>安全注意事项  
 当您调用<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>方法，必须指定要在其中保存已上传的文件的目录的完整路径。 如果你没有在应用程序代码中显式指定路径，当用户尝试上传文件时将引发异常。 此行为有助于保护服务器上的文件安全通过阻止用户能够将写入到应用程序的目录结构中的任意位置，以及阻止对敏感的根目录访问。  
  
 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>方法将上传的文件写入到指定的目录。 因此，ASP.NET 应用程序必须在服务器上具有写访问权限的目录。 有两种方法，该应用程序可以获取写访问权限。 您可以将显式授予写入访问权限的帐户用于运行应用程序，要在其中保存已上载的文件的目录中。 或者，可以增加到 ASP.NET 应用程序授予的信任级别。 若要获取应用程序对正在执行目录的写访问权限，必须授予应用程序<xref:System.Web.AspNetHostingPermission>信任级别设置为对象<xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType>值。 增加的信任级别会增加服务器上的资源的应用程序的访问。 请注意，这不是安全的方式，因为获得的应用程序控制的恶意用户还将能够在这种更高的信任级别下运行。 它是用户的具有所需的应用程序运行的最小特权的上下文中运行 ASP.NET 应用程序的最佳做法。 ASP.NET 应用程序中安全性的详细信息，请参阅[Web 应用程序的基本安全实践](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)并[ASP.NET Trust Levels and Policy Files](https://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1)。  
  
<a name="memory_limitations"></a>   
## <a name="memory-limitations"></a>内存限制  
 一种方法来防止拒绝服务攻击是将可以通过使用上传的文件的大小限制<xref:System.Web.UI.WebControls.FileUpload>控件。 应设置适合于您希望上传的文件的类型的大小限制。 默认大小限制为 4096 千字节 (KB) 或 4 兆字节 (MB)。 您可以允许更大的文件上传设置`maxRequestLength`的属性[httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)元素。 若要增加整个应用程序的允许的最大文件大小，设置`maxRequestLength`Web.config 文件中的属性。 若要增加允许的最大文件大小为指定的页，设置`maxRequestLength`属性内`location`在 Web.config 中的元素。有关示例，请参阅[location 元素 （ASP.NET 设置架构）](https://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5)。  
  
 上载大型文件时，用户还可能会收到以下错误消息：  
  
 `aspnet_wp.exe (PID: 1520) was recycled because memory consumption exceeded 460 MB (60 percent of available RAM).`  
  
 如果你的用户遇到此错误消息，增加的价值`memoryLimit`中的属性[processModel](https://msdn.microsoft.com/library/4b8fe20e-74c8-4566-b72c-ce5f83c8e32d)的元素在 Web.config 文件的应用程序。 `memoryLimit`属性指定的最大工作进程可使用的内存量。 如果工作进程超过`memoryLimit`量，创建一个新的进程来替换它，并且所有当前请求重新分配给新进程。  
  
 若要控制是否要上载的文件是临时存储在内存中或在服务器上处理请求时，设置`requestLengthDiskThreshold`的属性[httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)元素。 此属性，可管理的输入的流缓冲区的大小。 默认值为 256 个字节。 您指定的值不应超过指定的值`maxRequestLength`属性。  
  
<a name="using_the_FileUpload_Control_with_the_UpdatePanel_control"></a>   
## <a name="using-the-fileupload-control-with-the-updatepanel-control"></a>使用 UpdatePanel 控件使用 FileUpload 控件  
 <xref:System.Web.UI.WebControls.FileUpload>控件旨在使用仅在回发的情况下，不在异步回发的情况下在局部页面呈现期间。 当你使用<xref:System.Web.UI.WebControls.FileUpload>控件内部<xref:System.Web.UI.UpdatePanel>控件，必须上载该文件，通过使用控件是<xref:System.Web.UI.PostBackTrigger>面板对象。 <xref:System.Web.UI.UpdatePanel> 控制用于更新选定的区域，而不是使用回发中更新整个页面的页面。 有关详细信息，请参阅[UpdatePanel 控件概述](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)并[部分页呈现概述](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)。  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>声明性语法  
  
```  
<asp:FileUpload  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 包含源代码的 Visual Studio Web 站点项目是可随附于本主题：[下载](https://go.microsoft.com/fwlink/?LinkId=191897)。  
  
 本部分包含以下四个示例：  
  
-   第一个示例演示如何创建<xref:System.Web.UI.WebControls.FileUpload>控件，将文件保存到代码中指定的路径。  
  
-   第二个示例演示如何创建<xref:System.Web.UI.WebControls.FileUpload>将文件保存到指定的目录，该应用程序在文件系统中的控件。  
  
-   第三个示例演示如何创建<xref:System.Web.UI.WebControls.FileUpload>控件将文件保存到指定的路径，可以上传的文件的大小限制。  
  
-   第四个示例演示如何创建<xref:System.Web.UI.WebControls.FileUpload>控件，将文件保存到指定的路径并允许仅具有.doc 或.xls 文件名称扩展要上传的文件。  
  
> [!CAUTION]
>  这些示例演示的基本语法为<xref:System.Web.UI.WebControls.FileUpload>控件，但它们确实展示所有必要的错误检查应保存该文件之前完成的。 有关更完整的示例，请参见 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>。  
  
 下面的示例演示如何创建<xref:System.Web.UI.WebControls.FileUpload>控件，将文件保存到代码中指定的路径。 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>调用方法以在服务器上将该文件保存到指定的路径。  
  
 [!code-aspx-csharp[FileUploadClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass1/cs/fileuploadclass1cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass1/VB/fileuploadclass1vb.aspx#1)]  
  
 下面的示例演示如何创建<xref:System.Web.UI.WebControls.FileUpload>将文件保存到指定的目录，该应用程序在文件系统中的控件。 <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A?displayProperty=nameWithType>属性用于获取当前正在执行服务器应用程序的根目录的物理文件系统路径。 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>调用方法以在服务器上将该文件保存到指定的路径。  
  
 [!code-aspx-csharp[FileUploadClass2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass2/cs/fileuploadclass2cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass2/VB/fileuploadclass2vb.aspx#1)]  
  
 下面的示例演示如何创建<xref:System.Web.UI.WebControls.FileUpload>控件，将文件保存到代码中指定的路径。 控件可上传到 5 MB 的文件的大小限制。 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>属性用于访问基础<xref:System.Web.HttpPostedFile.ContentLength%2A>属性，并返回文件的大小。 如果要上传的文件的大小小于 2 MB，<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>调用方法以在服务器上将该文件保存到指定的路径。 除了检查应用程序代码中设置的最大文件大小，还可设置`maxRequestLength`的属性[httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)到你的应用程序的配置文件中的最大允许大小的元素。  
  
 [!code-aspx-csharp[FileUploadClass3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass3/cs/fileuploadclass3cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass3/VB/fileuploadclass3vb.aspx#1)]  
  
 下面的示例演示如何创建<xref:System.Web.UI.WebControls.FileUpload>控件，将文件保存到代码中指定的路径。 此示例允许仅具有.doc 或.xls 文件名称扩展要上传的文件。 <xref:System.IO.Path.GetExtension%2A?displayProperty=nameWithType>调用方法以返回要上载的文件的扩展名。 如果该文件扩展名为.doc 或.xls 文件，<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>调用方法以在服务器上将该文件保存到指定的路径。  
  
 [!code-aspx-csharp[FileUploadClass4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass4/cs/fileuploadclass4cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass4/VB/fileuploadclass4vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileUpload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileUpload();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FileUpload.%23ctor%2A>构造函数来初始化的新实例<xref:System.Web.UI.WebControls.FileUpload>类。 <xref:System.Web.UI.WebControls.FileUpload>控件不会不会自动将文件保存到服务器后用户选择要上载的文件。 您必须显式提供的控件或机制以允许用户提交指定的文件。 例如，可以提供一个按钮，用户单击以将文件上传。  
  
   
  
## Examples  
 下面的示例演示如何初始化的新实例<xref:System.Web.UI.WebControls.FileUpload>类。 请注意，此示例演示如何构造函数语法，但在创建后不会将功能添加到控件。  
  
 此示例摘自一个更大的示例为提供<xref:System.Web.UI.WebControls.FileUpload>类。  
  
 [!code-aspx-vb[FileUploadCstr#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadCstr/VB/fileuploadcstrvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="fileUpload.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>为指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象添加 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 控件的 HTML 特性和样式，以在呈现内容时使用它们。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A>方法主要由控件开发人员用来将适当的特性和样式<xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType>输出流<xref:System.Web.UI.WebControls.FileUpload>控件。 <xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A>方法重写<xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public virtual bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultiple : bool with get, set" Usage="System.Web.UI.WebControls.FileUpload.AllowMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指定是否可选择多个文件用于上载的值。</summary>
        <value>如果可以选定多个文件，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileBytes">
      <MemberSignature Language="C#" Value="public byte[] FileBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] FileBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ FileBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileBytes : byte[]" Usage="System.Web.UI.WebControls.FileUpload.FileBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>从使用 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 控件指定的文件中获取一个字节数组。</summary>
        <value><see cref="T:System.Byte" /> 数组，包含指定文件的内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload>控件不会自动从客户端读取的文件。 您必须显式提供的控件或机制以允许用户提交指定的文件。 例如，可以提供一个按钮，用户可以单击上传的文件。 为保存指定的文件而编写的代码可以调用<xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A>属性，它返回文件的内容。  
  
 然后再调用<xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A>属性，则应使用<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>属性来验证<xref:System.Web.UI.WebControls.FileUpload>控件包含要上载的文件。 如果<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>将返回`true`，调用<xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A>属性。 如果它返回`false`，指示该控件不包含文件的用户显示一条消息。 如果未提供错误处理代码，以验证文件是否存在，尝试保存不存在的文件会引发<xref:System.Web.HttpException>异常。  
  
   
  
## Examples  
 下面的示例演示如何创建<xref:System.Web.UI.WebControls.FileUpload>控件。 当用户单击**上传文件**按钮，该文件的内容显示为页上的文本框中的字节。 此示例使用<xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A>属性将整个文件上传。  
  
 [!code-aspx-csharp[FileUploadFileBytes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadFileBytes/CS/FileUploadFileBytesCS.aspx#1)]
 [!code-aspx-vb[FileUploadFileBytes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadFileBytes/VB/FileUploadFileBytesVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">未读取整个文件。</exception>
        <altmember cref="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      </Docs>
    </Member>
    <Member MemberName="FileContent">
      <MemberSignature Language="C#" Value="public System.IO.Stream FileContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream FileContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileContent As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ FileContent { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileContent : System.IO.Stream" Usage="System.Web.UI.WebControls.FileUpload.FileContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.IO.Stream" /> 对象，它指向要使用 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 控件上载的文件。</summary>
        <value><see cref="T:System.IO.Stream" />，指向使用 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 上载的文件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>属性获取<xref:System.IO.Stream>指向使用来上传的文件的对象<xref:System.Web.UI.WebControls.FileUpload>控件。 使用<xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>属性来访问该文件的内容。 例如，可以使用<xref:System.IO.Stream>读取文件的内容作为字节并将其存储在字节数组中此属性返回的对象。  
  
   
  
## Examples  
 下面的示例演示如何创建<xref:System.Web.UI.WebControls.FileUpload>控件。 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>属性用于文件的内容读取到字节数组。 当用户单击**上传文件**按钮，该文件的内容显示为页上的文本框中的字节。  
  
 [!code-aspx-csharp[FileUpload.FileContent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.FileContent/cs/fileupload.filecontentcs.aspx#1)]
 [!code-aspx-vb[FileUpload.FileContent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.FileContent/VB/fileupload.filecontentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Web.UI.WebControls.FileUpload.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取客户端上使用 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 控件上载的文件的名称。</summary>
        <value>该字符串指定客户端上使用 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 上载的文件的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 获取客户端上使用 <xref:System.Web.UI.WebControls.FileUpload> 控件上载的文件的名称。 文件的名称，<xref:System.Web.UI.WebControls.FileUpload.FileName%2A>属性返回不包含在客户端上文件的路径。  
  
   
  
## Examples  
 下面的示例演示如何创建<xref:System.Web.UI.WebControls.FileUpload>控件，将文件保存到代码中指定的路径。 <xref:System.Web.UI.WebControls.FileUpload.FileName%2A>属性用于获取要上传的文件的名称。 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>方法调用以在服务器上将该文件保存到指定的路径，在客户端上使用相同的名称的文件有。 请注意，此示例演示了此控件的基本语法，但并不演示保存该文件之前应完成的所有必要的错误检查。 有关更完整的示例，请参见 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>。  
  
 [!code-aspx-csharp[FileUploadClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass1/cs/fileuploadclass1cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass1/VB/fileuploadclass1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFile">
      <MemberSignature Language="C#" Value="public bool HasFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFile { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFile : bool" Usage="System.Web.UI.WebControls.FileUpload.HasFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 控件是否包含文件。</summary>
        <value>如果 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 包含文件，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>属性获取一个值，该值指示是否<xref:System.Web.UI.WebControls.FileUpload>控件包含要上载的文件。 使用此属性以验证要上载的文件存在对该文件执行操作之前。 例如，之前调用<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>方法来保存文件的磁盘，请使用<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>属性以验证该文件存在。 如果<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>将返回`true`，调用<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>方法。 如果它返回`false`，指示该控件不包含文件的用户显示一条消息。  
  
   
  
## Examples  
 下面的示例演示如何创建<xref:System.Web.UI.WebControls.FileUpload>执行错误检查的控件。 然后保存文件，<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>调用方法来验证控件包含要上载的文件。 此外，<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>方法调用以检查是否具有相同名称的文件已存在的路径中。 如果是这样，要上传的文件的名称以下划线字符之前<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>调用方法。 这可防止覆盖现有文件。  
  
 [!code-aspx-csharp[FileUpload.SaveAs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.SaveAs/cs/fileupload.saveascs.aspx#1)]
 [!code-aspx-vb[FileUpload.SaveAs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.SaveAs/VB/fileupload.saveasvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFiles">
      <MemberSignature Language="C#" Value="public bool HasFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.HasFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFiles { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFiles : bool" Usage="System.Web.UI.WebControls.FileUpload.HasFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示所有未见是否已经被上传的值。</summary>
        <value>如果上载任何文件中，则为<see langword="true" />；否则，为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法也返回`false`如果上传的空文件 （零个字节为单位）。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="fileUpload.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
        <summary>为 <see cref="E:System.Web.UI.Control.PreRender" /> 控件引发 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.OnPreRender%2A>方法通知<xref:System.Web.UI.WebControls.FileUpload>控件保存的视图状态和呈现内容之前执行任何必要的预呈现步骤。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostedFile">
      <MemberSignature Language="C#" Value="public System.Web.HttpPostedFile PostedFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpPostedFile PostedFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.PostedFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFile As HttpPostedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpPostedFile ^ PostedFile { System::Web::HttpPostedFile ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PostedFile : System.Web.HttpPostedFile" Usage="System.Web.UI.WebControls.FileUpload.PostedFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpPostedFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取使用 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 控件上载的文件的基础 <see cref="T:System.Web.HttpPostedFile" /> 对象。</summary>
        <value>使用 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 上载的文件的 <see cref="T:System.Web.HttpPostedFile" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>属性获取基础<xref:System.Web.HttpPostedFile>对象使用上载的文件，<xref:System.Web.UI.WebControls.FileUpload>控件。 此属性用于访问上传的文件上的其他属性。  
  
 可以使用<xref:System.Web.HttpPostedFile.ContentLength%2A>属性来获取文件的长度。 可以使用<xref:System.Web.HttpPostedFile.ContentType%2A>属性来获取 MIME 内容类型的文件。 此外，还可以使用<xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>属性来访问<xref:System.Web.HttpPostedFile.FileName%2A>属性，<xref:System.Web.HttpPostedFile.InputStream%2A>属性，并<xref:System.Web.HttpPostedFile.SaveAs%2A>方法。 但是，通过提供相同的功能<xref:System.Web.UI.WebControls.FileUpload.FileName%2A>属性，<xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>属性，并<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>方法。  
  
   
  
## Examples  
 下面的示例演示如何创建<xref:System.Web.UI.WebControls.FileUpload>控件。 当用户单击**上传文件**按钮，该文件的内容显示为页上的文本框中的字节。 此示例使用<xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>属性来访问<xref:System.Web.HttpPostedFile.ContentLength%2A?displayProperty=nameWithType>属性。 <xref:System.Web.HttpPostedFile.ContentLength%2A>属性用于确定文件的长度，然后再将该文件的内容复制到字节数组。  
  
 [!code-aspx-csharp[FileUpload.FileContent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.FileContent/cs/fileupload.filecontentcs.aspx#1)]
 [!code-aspx-vb[FileUpload.FileContent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.FileContent/VB/fileupload.filecontentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpPostedFile" />
      </Docs>
    </Member>
    <Member MemberName="PostedFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt; PostedFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Web.HttpPostedFile&gt; PostedFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.PostedFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFiles As IList(Of HttpPostedFile)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Web::HttpPostedFile ^&gt; ^ PostedFiles { System::Collections::Generic::IList&lt;System::Web::HttpPostedFile ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PostedFiles : System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt;" Usage="System.Web.UI.WebControls.FileUpload.PostedFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取已上载文件的集合。</summary>
        <value>上载的文件集合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="fileUpload.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 控件内容的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</param>
        <summary>将 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 控件内容发送到指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象，该对象编写相应内容以便呈现在客户端。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.Render%2A>方法发送<xref:System.Web.UI.WebControls.FileUpload>控件内容写入指定<xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType>对象，该编写要呈现的内容在客户端对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string -&gt; unit" Usage="fileUpload.SaveAs filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">一个字符串，指定服务器上用于保存上载文件的位置的完整路径。</param>
        <summary>将上载文件的内容保存到 Web 服务器上的指定路径。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>方法在 Web 服务器上将已上传文件的内容保存到指定的路径。  
  
 <xref:System.Web.UI.WebControls.FileUpload>控件不会不会自动将文件保存到服务器后用户选择要上载的文件。 您必须显式提供的控件或机制以允许用户提交指定的文件。 例如，可以提供一个按钮，用户单击以将文件上传。 为保存指定的文件而编写的代码应调用<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>方法，在服务器的文件内容保存到指定的路径。 通常情况下，<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>引发回发到服务器的事件的事件处理方法中调用方法。 例如，如果提供一个用于将文件提交按钮，可能则 click 事件的事件处理方法包括用于将文件保存到服务器的代码。  
  
 当您调用<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>方法，您必须要在其中保存已上传的文件服务器上指定的目录的完整路径。 如果未显式指定路径在应用程序代码中，<xref:System.Web.HttpException>用户尝试上传文件时将引发异常。 此行为有助于保护服务器上的文件的安全，通过不允许用户指定要在其中保存它们上传的文件的路径。  
  
 然后再调用<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>方法，则应使用<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>属性来验证<xref:System.Web.UI.WebControls.FileUpload>控件包含要上载的文件。 如果<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>将返回`true`，调用<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>方法。 如果它返回`false`，指示该控件不包含文件的用户显示一条消息。 如果未提供错误处理代码，以验证文件是否存在，尝试保存不存在的文件会引发<xref:System.Web.HttpException>异常。  
  
 调用<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>工作，ASP.NET 应用程序必须具有写访问权限的目录服务器上。 有两种方法，该应用程序可以获取写访问权限。 您可以将显式授予写入访问权限的帐户用于运行应用程序，要在其中保存已上载的文件的目录中。 或者，可以增加到 ASP.NET 应用程序授予的信任级别。 若要获取应用程序对正在执行目录的写访问权限，必须授予应用程序<xref:System.Web.AspNetHostingPermission>信任级别设置为对象<xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType>值。 增加的信任级别会增加服务器上的资源的应用程序的访问。 请注意，这不是安全的方式，因为获得的应用程序控制的恶意用户还将能够在这种更高的信任级别下运行。 它是用户的具有所需的应用程序运行的最小特权的上下文中运行 ASP.NET 应用程序的最佳做法。 ASP.NET 应用程序中安全性的详细信息，请参阅[Web 应用程序的基本安全实践](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)并[ASP.NET Trust Levels and Policy Files](https://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1)。  
  
   
  
## Examples  
 下面的示例演示如何创建<xref:System.Web.UI.WebControls.FileUpload>执行错误检查的控件。 保存该文件之前，<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>调用方法来验证要上载的文件是否存在。 此外，<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>方法调用以检查是否已具有相同名称的文件路径中存在。 如果是这样，要上传的文件的名称前缀数之前<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>调用方法。 这可防止覆盖现有文件。  
  
 [!code-aspx-csharp[FileUpload.SaveAs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.SaveAs/cs/fileupload.saveascs.aspx#1)]
 [!code-aspx-vb[FileUpload.SaveAs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.SaveAs/VB/fileupload.saveasvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="filename" /> 不是完整路径。</exception>
        <altmember cref="P:System.Web.UI.WebControls.FileUpload.HasFile" />
        <related type="Article" href="https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad">Web 应用程序的基本安全实践</related>
      </Docs>
    </Member>
  </Members>
</Type>