<Type Name="NegotiateStream" FullName="System.Net.Security.NegotiateStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9576497d90ed0f9e90d734cedc9957a2d7d66942" /><Meta Name="ms.sourcegitcommit" Value="5ebd9691c6f7d50c4730e997fba69e54bdd7cc0c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/17/2019" /><Meta Name="ms.locfileid" Value="65829969" /></Metadata><TypeSignature Language="C#" Value="public class NegotiateStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateStream extends System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type NegotiateStream = class&#xA;    inherit AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9a282-101">提供一个使用协商安全协议的流，以便对客户端-服务器通信中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-102">使用<xref:System.Net.Security.NegotiateStream>客户端和服务器之间传输进行身份验证和协助保护信息的类。</span><span class="sxs-lookup"><span data-stu-id="9a282-102">Use the <xref:System.Net.Security.NegotiateStream> class for authentication and to help secure information transmitted between a client and a server.</span></span> <span data-ttu-id="9a282-103">使用<xref:System.Net.Security.NegotiateStream>，您可以执行以下操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-103">Using <xref:System.Net.Security.NegotiateStream>, you can do the following.</span></span>  
  
-   <span data-ttu-id="9a282-104">客户端的凭据向服务器发送的模拟或委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-104">Send the client's credentials to the server for Impersonation or Delegation.</span></span>  
  
-   <span data-ttu-id="9a282-105">请求服务器身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-105">Request server authentication.</span></span>  
  
-   <span data-ttu-id="9a282-106">加密和/或将其传输之前对数据签名。</span><span class="sxs-lookup"><span data-stu-id="9a282-106">Encrypt and/or sign data before transmitting it.</span></span>  
  
 <span data-ttu-id="9a282-107">传输的信息之前，必须执行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-107">Authentication must be performed before transmitting information.</span></span> <span data-ttu-id="9a282-108">客户端请求进行身份验证使用同步<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法，阻止，直到完成身份验证，或异步<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>方法，不会阻止等待进行身份验证完成时。</span><span class="sxs-lookup"><span data-stu-id="9a282-108">Clients request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods, which do not block while waiting for the authentication to complete.</span></span> <span data-ttu-id="9a282-109">服务器请求进行身份验证使用同步<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或异步<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-109">Servers request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="9a282-110">客户端和服务器，（可选） 进行身份验证使用 Negotiate 安全协议。</span><span class="sxs-lookup"><span data-stu-id="9a282-110">The client, and optionally the server, is authenticated using the Negotiate security protocol.</span></span> <span data-ttu-id="9a282-111">在 Windows 95/98 系统中，Windows NT LAN Manager (NTLM) 是用于身份验证的协议。</span><span class="sxs-lookup"><span data-stu-id="9a282-111">On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</span></span> <span data-ttu-id="9a282-112">在其他平台 Kerberos 协议来进行身份验证客户端和服务器支持它;否则使用 NTLM。</span><span class="sxs-lookup"><span data-stu-id="9a282-112">On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</span></span> <span data-ttu-id="9a282-113">这些协议的详细说明，请参阅平台 SDK 文档 MSDN 上，在 msdn.microsoft.com/library/。</span><span class="sxs-lookup"><span data-stu-id="9a282-113">For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</span></span> <span data-ttu-id="9a282-114"><xref:System.Net.Security.NegotiateStream>类执行使用安全支持提供程序接口 (SSPI) 身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-114">The <xref:System.Net.Security.NegotiateStream> class performs the authentication using the Security Support Provider Interface (SSPI).</span></span>  
  
 <span data-ttu-id="9a282-115">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定哪些安全服务将由<xref:System.Net.Security.NegotiateStream>来帮助保护你的数据在传输过程。</span><span class="sxs-lookup"><span data-stu-id="9a282-115">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services will be used by the <xref:System.Net.Security.NegotiateStream> to help secure your data during transmission.</span></span> <span data-ttu-id="9a282-116">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-116">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span> <span data-ttu-id="9a282-117">可以获取有关远程客户端或服务器使用信息<xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9a282-117">You can get information about the remote client or server using the <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> property.</span></span>  
  
 <span data-ttu-id="9a282-118">如果身份验证失败，则会收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-118">If the authentication fails, you will receive an <xref:System.Security.Authentication.AuthenticationException> or a <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-119">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-119">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="9a282-120">发送使用同步数据<xref:System.Net.Security.NegotiateStream.Write%2A>或异步<xref:System.Net.Security.NegotiateStream.BeginWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-120">You send data using the synchronous <xref:System.Net.Security.NegotiateStream.Write%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="9a282-121">接收数据使用同步<xref:System.Net.Security.NegotiateStream.Read%2A>或异步<xref:System.Net.Security.NegotiateStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-121">You receive data using the synchronous <xref:System.Net.Security.NegotiateStream.Read%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="9a282-122">如果安全服务，如启用了加密或签名，这些会自动应用于您的数据<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-122">If security services such as encryption or signing are enabled, these are automatically applied to your data by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="9a282-123"><xref:System.Net.Security.NegotiateStream>将使用在创建时提供的流的数据传输<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-123">The <xref:System.Net.Security.NegotiateStream> transmits data using a stream that you supply when creating the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-124">时提供此基础流，可以选择指定是否关闭<xref:System.Net.Security.NegotiateStream>也会关闭基础流。</span><span class="sxs-lookup"><span data-stu-id="9a282-124">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.NegotiateStream> also closes the underlying stream.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="9a282-125">下面的示例演示使用的客户端-服务器连接的客户端<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-125">The following example demonstrates the client side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-126">客户端进行身份验证，并以异步方式向服务器发送一条消息。</span><span class="sxs-lookup"><span data-stu-id="9a282-126">The client authenticates and sends a message to the server asynchronously.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#0)]
[!code-csharp[NclNegoAsyncClient#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#0)]  
[!code-vb[NclNegoAsyncClient#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#0)] 

<span data-ttu-id="9a282-127">下面的代码示例演示如何使用的客户端-服务器连接的服务器端<xref:System.Net.Security.NegotiateStream>进行身份验证客户端和读取客户端发送一条消息。</span><span class="sxs-lookup"><span data-stu-id="9a282-127">The following code example demonstrates the server side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream> to authenticate the client and read a message sent by the client.</span></span>  
  
[!code-cpp[NclNegoAsyncServer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#0)]
[!code-csharp[NclNegoAsyncServer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#0)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a"><span data-ttu-id="9a282-128">版本 3.5 SP1 中对 HTTPWebRequest 的 NTLM 身份验证的更改</span><span class="sxs-lookup"><span data-stu-id="9a282-128">Changes to NTLM authentication for HTTPWebRequest in Version 3.5 SP1</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a282-129">初始化 <see cref="T:System.Net.Security.NegotiateStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9a282-129">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-130">若要防止<xref:System.Net.Security.NegotiateStream>关闭你提供的流，使用<xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="9a282-130">To prevent the <xref:System.Net.Security.NegotiateStream> from closing the stream that you supply, use the <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="9a282-131">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.NegotiateStream" /> 使用此对象发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="9a282-131">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span></span></param>
        <summary><span data-ttu-id="9a282-132">使用指定的 <see cref="T:System.Net.Security.NegotiateStream" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9a282-132">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9a282-133">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="9a282-133">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#3)]
 [!code-csharp[NclNegoSyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream * bool -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="9a282-134">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.NegotiateStream" /> 使用此对象发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="9a282-134">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="9a282-135"><see langword="true" /> 表示关闭这<see cref="T:System.Net.Security.NegotiateStream" />不起任何作用<paramref name="innerStream" />;<see langword="false" /> ，表示关闭这<see cref="T:System.Net.Security.NegotiateStream" />也会关闭<paramref name="innerStream" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-135"><see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <paramref name="innerStream" />; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <paramref name="innerStream" />.</span></span></param>
        <summary><span data-ttu-id="9a282-136">使用指定的 <see cref="T:System.Net.Security.NegotiateStream" /> 和流封闭行为初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9a282-136">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-137">当指定`true`有关`leaveStreamOpen`参数，关闭<xref:System.Net.Security.NegotiateStream>不起任何作用`innerStream`流; 必须显式关闭`innerStream`时不再需要它。</span><span class="sxs-lookup"><span data-stu-id="9a282-137">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.NegotiateStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="9a282-138">下面的示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="9a282-138">The following example demonstrates calling this constructor.</span></span> <span data-ttu-id="9a282-139">此代码示例是为提供一个更大示例的一部分<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="9a282-139">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#1)]
[!code-csharp[NclNegoAsyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#1)]  
[!code-vb[NclNegoAsyncClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#1)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-140"><paramref name="innerStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-140"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9a282-141">或</span><span class="sxs-lookup"><span data-stu-id="9a282-141">-or-</span></span> 
 <span data-ttu-id="9a282-142"><paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-142"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a282-143">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-143">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : unit -&gt; unit&#xA;override this.AuthenticateAsClient : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a282-144">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-144">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-145">身份验证使用客户端的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="9a282-145">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="9a282-146">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-146">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="9a282-147">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，和相互身份验证请求。</span><span class="sxs-lookup"><span data-stu-id="9a282-147">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="9a282-148"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="9a282-148">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="9a282-149">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-149">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-150">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-150">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="9a282-151">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-151">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-152">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-152">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-153">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-153">The authentication failed.</span></span> <span data-ttu-id="9a282-154">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-154">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-155">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-155">The authentication failed.</span></span> <span data-ttu-id="9a282-156">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-156">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-157">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-157">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-158">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-158">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-159">或</span><span class="sxs-lookup"><span data-stu-id="9a282-159">-or-</span></span> 
<span data-ttu-id="9a282-160">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-160">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="9a282-161">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-161">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a282-162">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-162">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="9a282-163">关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-163">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-164">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-164">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="9a282-165">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-165">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="9a282-166">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-166">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="9a282-167">身份验证过程使用指定的客户端凭据。</span><span class="sxs-lookup"><span data-stu-id="9a282-167">The authentication process uses the specified client credential.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-168">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，和相互身份验证请求。</span><span class="sxs-lookup"><span data-stu-id="9a282-168">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="9a282-169"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="9a282-169">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="9a282-170">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-170">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-171">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-171">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-172">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-172">The authentication failed.</span></span> <span data-ttu-id="9a282-173">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-173">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-174">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-174">The authentication failed.</span></span> <span data-ttu-id="9a282-175">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-175">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-176">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-176">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-177">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-177">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-178">或</span><span class="sxs-lookup"><span data-stu-id="9a282-178">-or-</span></span> 
<span data-ttu-id="9a282-179">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-179">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="9a282-180">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-180">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-181"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-181"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a282-182">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-182">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="9a282-183">关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-183">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-184">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-184">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="9a282-185">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-185">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="9a282-186">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-186">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="9a282-187">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-187">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="9a282-188">身份验证过程使用指定的客户端凭据和通道绑定。</span><span class="sxs-lookup"><span data-stu-id="9a282-188">The authentication process uses the specified client credential and the channel binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-189">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，和相互身份验证请求。</span><span class="sxs-lookup"><span data-stu-id="9a282-189">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="9a282-190"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="9a282-190">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="9a282-191"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用于传递给此方法的扩展保护`binding`参数将由从应用程序检索<xref:System.Net.Security.SslStream.TransportContext%2A>关联的属性<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-191">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="9a282-192">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-192">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-193">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-193">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-194"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-194"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9a282-195">或</span><span class="sxs-lookup"><span data-stu-id="9a282-195">-or-</span></span> 
 <span data-ttu-id="9a282-196"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-196"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-197">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-197">The authentication failed.</span></span> <span data-ttu-id="9a282-198">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-198">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-199">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-199">The authentication failed.</span></span> <span data-ttu-id="9a282-200">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-200">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-201">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-201">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-202">或</span><span class="sxs-lookup"><span data-stu-id="9a282-202">-or-</span></span> 
<span data-ttu-id="9a282-203">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-203">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="9a282-204">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-204">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-205">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-205">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="9a282-206">带有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="9a282-206">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-207">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-207">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="9a282-208">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-208">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="9a282-209"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="9a282-209">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="9a282-210"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="9a282-210">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="9a282-211">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-211">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="9a282-212">身份验证过程使用指定的凭据和身份验证选项。</span><span class="sxs-lookup"><span data-stu-id="9a282-212">The authentication process uses the specified credentials and authentication options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-213">使用`requiredProtectionLevel`参数的请求安全服务的使用经过身份验证的流传输的数据。</span><span class="sxs-lookup"><span data-stu-id="9a282-213">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="9a282-214">例如，如果希望数据加密和签名，请指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="9a282-214">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="9a282-215">成功进行身份验证并不保证请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="9a282-215">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="9a282-216">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-216">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="9a282-217">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-217">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-218">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-218">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9a282-219"><paramref name="allowedImpersonationLevel" /> 不是有效值。</span><span class="sxs-lookup"><span data-stu-id="9a282-219"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-220"><paramref name="targetName" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="9a282-220"><paramref name="targetName" /> is null.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-221">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-221">The authentication failed.</span></span> <span data-ttu-id="9a282-222">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-222">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-223">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-223">The authentication failed.</span></span> <span data-ttu-id="9a282-224">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-224">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-225">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-225">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-226">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-226">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-227">或</span><span class="sxs-lookup"><span data-stu-id="9a282-227">-or-</span></span> 
<span data-ttu-id="9a282-228">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-228">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="9a282-229">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-229">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a282-230">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-230">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="9a282-231">关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-231">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-232">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-232">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="9a282-233">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-233">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="9a282-234">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-234">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="9a282-235"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="9a282-235">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="9a282-236"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="9a282-236">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="9a282-237">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-237">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="9a282-238">身份验证过程使用指定的凭据、身份验证选项和通道绑定。</span><span class="sxs-lookup"><span data-stu-id="9a282-238">The authentication process uses the specified credential, authentication options, and channel binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-239">使用`requiredProtectionLevel`参数的请求安全服务的使用经过身份验证的流传输的数据。</span><span class="sxs-lookup"><span data-stu-id="9a282-239">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="9a282-240">例如，如果希望数据加密和签名，请指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="9a282-240">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="9a282-241">成功进行身份验证并不保证请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="9a282-241">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="9a282-242">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-242">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="9a282-243"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用于传递给此方法的扩展保护`binding`参数将由从应用程序检索<xref:System.Net.Security.SslStream.TransportContext%2A>关联的属性<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-243">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="9a282-244">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-244">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-245">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-245">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-246"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-246"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9a282-247">或</span><span class="sxs-lookup"><span data-stu-id="9a282-247">-or-</span></span> 
 <span data-ttu-id="9a282-248"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-248"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9a282-249"><paramref name="allowedImpersonationLevel" /> 不是有效值。</span><span class="sxs-lookup"><span data-stu-id="9a282-249"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-250">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-250">The authentication failed.</span></span> <span data-ttu-id="9a282-251">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-251">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-252">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-252">The authentication failed.</span></span> <span data-ttu-id="9a282-253">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-253">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-254">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-254">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-255">或</span><span class="sxs-lookup"><span data-stu-id="9a282-255">-or-</span></span> 
<span data-ttu-id="9a282-256">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-256">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="9a282-257">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-257">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-258">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-258">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="9a282-259">带有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="9a282-259">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a282-260">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-260">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a282-261">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-261">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="9a282-262">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-262">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-263">身份验证使用客户端的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="9a282-263">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="9a282-264">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-264">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="9a282-265">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，和相互身份验证请求。</span><span class="sxs-lookup"><span data-stu-id="9a282-265">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="9a282-266"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="9a282-266">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="9a282-267">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-267">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-268">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-268">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="9a282-269">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-269">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-270">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-270">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-271">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-271">The authentication failed.</span></span> <span data-ttu-id="9a282-272">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-272">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-273">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-273">The authentication failed.</span></span> <span data-ttu-id="9a282-274">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-274">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-275">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-275">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-276">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-276">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-277">或</span><span class="sxs-lookup"><span data-stu-id="9a282-277">-or-</span></span> 
<span data-ttu-id="9a282-278">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-278">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="9a282-279">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-279">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a282-280">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-280">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="9a282-281">关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-281">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-282">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-282">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="9a282-283">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-283">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="9a282-284">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-284">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="9a282-285">身份验证过程使用指定的客户端凭据。</span><span class="sxs-lookup"><span data-stu-id="9a282-285">The authentication process uses the specified client credential.</span></span></summary>
        <returns><span data-ttu-id="9a282-286">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-286">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-287">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，和相互身份验证请求。</span><span class="sxs-lookup"><span data-stu-id="9a282-287">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="9a282-288"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="9a282-288">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="9a282-289">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-289">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-290">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-290">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-291">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-291">The authentication failed.</span></span> <span data-ttu-id="9a282-292">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-292">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-293">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-293">The authentication failed.</span></span> <span data-ttu-id="9a282-294">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-294">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-295">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-295">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-296">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-296">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-297">或</span><span class="sxs-lookup"><span data-stu-id="9a282-297">-or-</span></span> 
<span data-ttu-id="9a282-298">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-298">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="9a282-299">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-299">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-300"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-300"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a282-301">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-301">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="9a282-302">关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-303">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-303">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="9a282-304">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-304">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="9a282-305">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-305">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="9a282-306">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-306">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="9a282-307">身份验证过程使用指定的客户端凭据和通道绑定。</span><span class="sxs-lookup"><span data-stu-id="9a282-307">The authentication process uses the specified client credential and the channel binding.</span></span></summary>
        <returns><span data-ttu-id="9a282-308">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-308">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-309">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，和相互身份验证请求。</span><span class="sxs-lookup"><span data-stu-id="9a282-309">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="9a282-310"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="9a282-310">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="9a282-311"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用于传递给此方法的扩展保护`binding`参数将由从应用程序检索<xref:System.Net.Security.SslStream.TransportContext%2A>关联的属性<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-311">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="9a282-312">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-312">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-313">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-313">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-314"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-314"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9a282-315">或</span><span class="sxs-lookup"><span data-stu-id="9a282-315">-or-</span></span> 
 <span data-ttu-id="9a282-316"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-316"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-317">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-317">The authentication failed.</span></span> <span data-ttu-id="9a282-318">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-318">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-319">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-319">The authentication failed.</span></span> <span data-ttu-id="9a282-320">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-320">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-321">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-321">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-322">或</span><span class="sxs-lookup"><span data-stu-id="9a282-322">-or-</span></span> 
<span data-ttu-id="9a282-323">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-323">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="9a282-324">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-324">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-325">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-325">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="9a282-326">带有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="9a282-326">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-327">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-327">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="9a282-328">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-328">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="9a282-329"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="9a282-329">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="9a282-330"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="9a282-330">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="9a282-331">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-331">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="9a282-332">身份验证过程使用指定的凭据和身份验证选项。</span><span class="sxs-lookup"><span data-stu-id="9a282-332">The authentication process uses the specified credentials and authentication options.</span></span></summary>
        <returns><span data-ttu-id="9a282-333">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-333">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-334">使用`requiredProtectionLevel`参数的请求安全服务的使用经过身份验证的流传输的数据。</span><span class="sxs-lookup"><span data-stu-id="9a282-334">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="9a282-335">例如，如果希望数据加密和签名，请指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="9a282-335">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="9a282-336">成功进行身份验证并不保证请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="9a282-336">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="9a282-337">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-337">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="9a282-338">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-338">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-339">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-339">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9a282-340"><paramref name="allowedImpersonationLevel" /> 不是有效值。</span><span class="sxs-lookup"><span data-stu-id="9a282-340"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-341"><paramref name="targetName" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="9a282-341"><paramref name="targetName" /> is null.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-342">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-342">The authentication failed.</span></span> <span data-ttu-id="9a282-343">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-343">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-344">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-344">The authentication failed.</span></span> <span data-ttu-id="9a282-345">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-345">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-346">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-346">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-347">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-347">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-348">或</span><span class="sxs-lookup"><span data-stu-id="9a282-348">-or-</span></span> 
<span data-ttu-id="9a282-349">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-349">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="9a282-350">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-350">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a282-351">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-351">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="9a282-352">关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-352">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-353">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-353">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="9a282-354">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-354">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="9a282-355">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-355">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="9a282-356"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="9a282-356">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="9a282-357"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="9a282-357">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="9a282-358">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-358">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="9a282-359">身份验证过程使用指定的凭据、身份验证选项和通道绑定。</span><span class="sxs-lookup"><span data-stu-id="9a282-359">The authentication process uses the specified credential, authentication options, and channel binding.</span></span></summary>
        <returns><span data-ttu-id="9a282-360">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-360">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-361">使用`requiredProtectionLevel`参数的请求安全服务的使用经过身份验证的流传输的数据。</span><span class="sxs-lookup"><span data-stu-id="9a282-361">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="9a282-362">例如，如果希望数据加密和签名，请指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="9a282-362">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="9a282-363">成功进行身份验证并不保证请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="9a282-363">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="9a282-364">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-364">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="9a282-365"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用于传递给此方法的扩展保护`binding`参数将由从应用程序检索<xref:System.Net.Security.SslStream.TransportContext%2A>关联的属性<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-365">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="9a282-366">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-366">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-367">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-367">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-368"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-368"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9a282-369">或</span><span class="sxs-lookup"><span data-stu-id="9a282-369">-or-</span></span> 
 <span data-ttu-id="9a282-370"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-370"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9a282-371"><paramref name="allowedImpersonationLevel" /> 不是有效值。</span><span class="sxs-lookup"><span data-stu-id="9a282-371"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-372">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-372">The authentication failed.</span></span> <span data-ttu-id="9a282-373">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-373">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-374">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-374">The authentication failed.</span></span> <span data-ttu-id="9a282-375">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-375">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-376">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-376">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-377">或</span><span class="sxs-lookup"><span data-stu-id="9a282-377">-or-</span></span> 
<span data-ttu-id="9a282-378">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-378">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="9a282-379">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-379">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-380">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-380">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="9a282-381">带有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="9a282-381">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a282-382">处理客户端-服务器连接的身份验证的服务器端。</span><span class="sxs-lookup"><span data-stu-id="9a282-382">Handles the server side of an authentication for a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-383">在进行身份验证时，将阻止这些方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-383">These methods block while the authentication is in progress.</span></span> <span data-ttu-id="9a282-384">若要阻止应用程序阻止等待进行身份验证完成时，使用<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-384">To prevent the application from blocking while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : unit -&gt; unit&#xA;override this.AuthenticateAsServer : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsServer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a282-385">服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-385">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-386">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="9a282-386">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="9a282-387">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-387">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="9a282-388">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和的安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="9a282-388">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="9a282-389">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-389">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-390">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-390">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="9a282-391">此方法进行阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="9a282-391">This method blocks until the operation completes.</span></span> <span data-ttu-id="9a282-392">若要阻止阻塞在操作完成之前，使用之一<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="9a282-392">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="9a282-393">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-393">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-394">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-394">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-395">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-395">The authentication failed.</span></span> <span data-ttu-id="9a282-396">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-396">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-397">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-397">The authentication failed.</span></span> <span data-ttu-id="9a282-398">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-398">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-399">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-399">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-400">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="9a282-400">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a282-401">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-401">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="9a282-402">关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-402">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (policy As ExtendedProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit" Usage="negotiateStream.AuthenticateAsServer policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="9a282-403">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-403">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <summary><span data-ttu-id="9a282-404">服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-404">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="9a282-405">身份验证过程使用指定的扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="9a282-405">The authentication process uses the specified extended protection policy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-406">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="9a282-406">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="9a282-407">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-407">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="9a282-408">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和的安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="9a282-408">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="9a282-409">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="9a282-409">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="9a282-410">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-410">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-411">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-411">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="9a282-412">此方法进行阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="9a282-412">This method blocks until the operation completes.</span></span> <span data-ttu-id="9a282-413">若要阻止阻塞在操作完成之前，使用之一<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="9a282-413">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="9a282-414">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-414">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-415">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-415">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a282-416">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-416">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-417">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-417">The authentication failed.</span></span> <span data-ttu-id="9a282-418">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-418">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-419">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-419">The authentication failed.</span></span> <span data-ttu-id="9a282-420">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-420">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-421">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="9a282-421">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-422">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-422">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="9a282-423">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-423">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="9a282-424">带有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="9a282-424">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-425">用于确立服务器身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-425">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="9a282-426"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="9a282-426">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="9a282-427"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="9a282-427">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="9a282-428">服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-428">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="9a282-429">身份验证过程使用指定的服务器凭据和身份验证选项。</span><span class="sxs-lookup"><span data-stu-id="9a282-429">The authentication process uses the specified server credentials and authentication options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-430">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-430">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-431">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-431">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="9a282-432">此方法进行阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="9a282-432">This method blocks until the operation completes.</span></span> <span data-ttu-id="9a282-433">若要阻止阻塞在操作完成之前，使用之一<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="9a282-433">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="9a282-434">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-434">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-435">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-435">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-436"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-436"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9a282-437"><paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span><span class="sxs-lookup"><span data-stu-id="9a282-437"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-438">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-438">The authentication failed.</span></span> <span data-ttu-id="9a282-439">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-439">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-440">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-440">The authentication failed.</span></span> <span data-ttu-id="9a282-441">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-441">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-442">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-442">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-443">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-443">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-444">或</span><span class="sxs-lookup"><span data-stu-id="9a282-444">-or-</span></span> 
<span data-ttu-id="9a282-445">此流先前被用作客户端尝试进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-445">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="9a282-446">不能尝试将该流作为服务器重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-446">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-447">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="9a282-447">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a282-448">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-448">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="9a282-449">关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-449">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-450">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-450">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="9a282-451">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-451">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="9a282-452"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="9a282-452">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="9a282-453"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="9a282-453">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="9a282-454">服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-454">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="9a282-455">身份验证过程使用指定的服务器凭据、身份验证选项和扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="9a282-455">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-456">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="9a282-456">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="9a282-457">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-457">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-458">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-458">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="9a282-459">此方法进行阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="9a282-459">This method blocks until the operation completes.</span></span> <span data-ttu-id="9a282-460">若要阻止阻塞在操作完成之前，使用之一<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="9a282-460">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="9a282-461">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-461">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-462">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-462">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a282-463">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-463">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-464"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-464"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9a282-465"><paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span><span class="sxs-lookup"><span data-stu-id="9a282-465"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-466">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-466">The authentication failed.</span></span> <span data-ttu-id="9a282-467">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-467">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-468">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-468">The authentication failed.</span></span> <span data-ttu-id="9a282-469">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-469">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-470">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-470">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-471">或</span><span class="sxs-lookup"><span data-stu-id="9a282-471">-or-</span></span> 
<span data-ttu-id="9a282-472">此流先前被用作客户端尝试进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-472">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="9a282-473">不能尝试将该流作为服务器重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-473">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-474">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="9a282-474">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-475">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-475">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="9a282-476">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-476">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="9a282-477">带有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="9a282-477">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a282-478">以异步操作方式处理某个客户端-服务器连接的身份验证的服务器端。</span><span class="sxs-lookup"><span data-stu-id="9a282-478">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a282-479">服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-479">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="9a282-480">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-480">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-481">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="9a282-481">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="9a282-482">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-482">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="9a282-483">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和的安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="9a282-483">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="9a282-484">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-484">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-485">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-485">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="9a282-486">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-486">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-487">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-487">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-488">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-488">The authentication failed.</span></span> <span data-ttu-id="9a282-489">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-489">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-490">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-490">The authentication failed.</span></span> <span data-ttu-id="9a282-491">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-491">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-492">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-492">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-493">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="9a282-493">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a282-494">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-494">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="9a282-495">关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-495">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (policy As ExtendedProtectionPolicy) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="9a282-496">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-496">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <summary><span data-ttu-id="9a282-497">服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-497">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="9a282-498">身份验证过程使用指定的扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="9a282-498">The authentication process uses the specified extended protection policy.</span></span></summary>
        <returns><span data-ttu-id="9a282-499">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-499">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-500">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="9a282-500">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="9a282-501">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-501">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="9a282-502">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和的安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="9a282-502">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="9a282-503">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="9a282-503">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="9a282-504">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-504">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-505">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-505">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="9a282-506">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-506">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-507">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-507">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a282-508">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-508">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-509">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-509">The authentication failed.</span></span> <span data-ttu-id="9a282-510">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-510">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-511">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-511">The authentication failed.</span></span> <span data-ttu-id="9a282-512">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-512">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-513">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="9a282-513">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-514">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-514">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="9a282-515">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-515">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="9a282-516">带有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="9a282-516">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-517">用于确立服务器身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-517">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="9a282-518"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="9a282-518">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="9a282-519"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="9a282-519">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="9a282-520">服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-520">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="9a282-521">身份验证过程使用指定的服务器凭据和身份验证选项。</span><span class="sxs-lookup"><span data-stu-id="9a282-521">The authentication process uses the specified server credentials and authentication options.</span></span></summary>
        <returns><span data-ttu-id="9a282-522">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-522">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-523">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-523">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-524">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-524">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="9a282-525">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-525">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-526">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-526">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-527"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-527"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9a282-528"><paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span><span class="sxs-lookup"><span data-stu-id="9a282-528"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-529">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-529">The authentication failed.</span></span> <span data-ttu-id="9a282-530">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-530">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-531">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-531">The authentication failed.</span></span> <span data-ttu-id="9a282-532">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-532">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-533">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-533">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-534">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-534">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-535">或</span><span class="sxs-lookup"><span data-stu-id="9a282-535">-or-</span></span> 
<span data-ttu-id="9a282-536">此流先前被用作客户端尝试进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-536">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="9a282-537">不能尝试将该流作为服务器重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-537">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-538">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="9a282-538">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a282-539">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-539">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="9a282-540">关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-540">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-541">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-541">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="9a282-542">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-542">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="9a282-543"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="9a282-543">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="9a282-544"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="9a282-544">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="9a282-545">服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-545">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="9a282-546">身份验证过程使用指定的服务器凭据、身份验证选项和扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="9a282-546">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span></summary>
        <returns><span data-ttu-id="9a282-547">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-547">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-548">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="9a282-548">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="9a282-549">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-549">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-550">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-550">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="9a282-551">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-551">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-552">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-552">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a282-553">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-553">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-554"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-554"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9a282-555"><paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span><span class="sxs-lookup"><span data-stu-id="9a282-555"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-556">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-556">The authentication failed.</span></span> <span data-ttu-id="9a282-557">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-557">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-558">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-558">The authentication failed.</span></span> <span data-ttu-id="9a282-559">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-559">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-560">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-560">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-561">或</span><span class="sxs-lookup"><span data-stu-id="9a282-561">-or-</span></span> 
<span data-ttu-id="9a282-562">此流先前被用作客户端尝试进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-562">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="9a282-563">不能尝试将该流作为服务器重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-563">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-564">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="9a282-564">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-565">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-565">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="9a282-566">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-566">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="9a282-567">带有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="9a282-567">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a282-568">开始一个异步操作，以对客户端-服务器连接中的客户端进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-568">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-569">在进行身份验证时不会阻止此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="9a282-569">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="9a282-570">若要阻止等待进行身份验证完成时，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-570">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncCallback"><span data-ttu-id="9a282-571">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-571">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="9a282-572">一个用户定义对象，其中包含该操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="9a282-572">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="9a282-573">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-573">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="9a282-574">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-574">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="9a282-575">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="9a282-575">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="9a282-576">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-576">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-577">身份验证使用客户端的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="9a282-577">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="9a282-578">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-578">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="9a282-579">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和的安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="9a282-579">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span> <span data-ttu-id="9a282-580"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="9a282-580">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="9a282-581">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="9a282-581">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="9a282-582">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="9a282-582">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="9a282-583">必须通过调用完成异步验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-583">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="9a282-584">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-584">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="9a282-585">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="9a282-585">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="9a282-586">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-586">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-587">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-587">In this case, you can retry the authentication with a different credential.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="9a282-588">下面的示例演示如何调用此方法开始异步身份验证时为客户端。</span><span class="sxs-lookup"><span data-stu-id="9a282-588">The following example demonstrates calling this method to begin an asynchronous authentication for the client.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#2)]
[!code-csharp[NclNegoAsyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#2)]  
[!code-vb[NclNegoAsyncClient#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#2)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-589">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-589">The authentication failed.</span></span> <span data-ttu-id="9a282-590">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-590">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-591">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-591">The authentication failed.</span></span> <span data-ttu-id="9a282-592">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-592">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-593">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-593">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-594">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-594">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-595">或</span><span class="sxs-lookup"><span data-stu-id="9a282-595">-or-</span></span> 
<span data-ttu-id="9a282-596">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-596">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="9a282-597">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-597">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a282-598">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-598">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="9a282-599">关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-599">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-600">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-600">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="9a282-601">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="9a282-602">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="9a282-603">一个用户定义对象，其中包含写操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="9a282-603">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="9a282-604">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-604">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="9a282-605">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="9a282-606">身份验证过程使用指定的凭据。</span><span class="sxs-lookup"><span data-stu-id="9a282-606">The authentication process uses the specified credentials.</span></span> <span data-ttu-id="9a282-607">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="9a282-607">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="9a282-608">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-609">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="9a282-609">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="9a282-610">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="9a282-610">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="9a282-611">必须通过调用完成异步验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-611">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="9a282-612">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-612">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="9a282-613">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="9a282-613">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="9a282-614">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-614">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-615">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-615">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-616"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-616"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9a282-617">或</span><span class="sxs-lookup"><span data-stu-id="9a282-617">-or-</span></span> 
 <span data-ttu-id="9a282-618"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-618"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-619">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-619">The authentication failed.</span></span> <span data-ttu-id="9a282-620">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-620">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-621">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-621">The authentication failed.</span></span> <span data-ttu-id="9a282-622">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-622">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-623">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-623">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-624">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-624">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-625">或</span><span class="sxs-lookup"><span data-stu-id="9a282-625">-or-</span></span> 
<span data-ttu-id="9a282-626">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-626">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="9a282-627">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-627">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a282-628">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-628">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="9a282-629">关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-629">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-630">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-630">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="9a282-631">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-631">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="9a282-632">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-632">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="9a282-633">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-633">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="9a282-634">一个用户定义对象，其中包含写操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="9a282-634">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="9a282-635">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-635">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="9a282-636">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-636">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="9a282-637">身份验证过程使用指定的凭据和通道绑定。</span><span class="sxs-lookup"><span data-stu-id="9a282-637">The authentication process uses the specified credentials and channel binding.</span></span> <span data-ttu-id="9a282-638">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="9a282-638">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="9a282-639">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-639">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-640">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="9a282-640">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="9a282-641">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="9a282-641">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="9a282-642">必须通过调用完成异步验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-642">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="9a282-643">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-643">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="9a282-644">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="9a282-644">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="9a282-645">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-645">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-646">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-646">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-647"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-647"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9a282-648">或</span><span class="sxs-lookup"><span data-stu-id="9a282-648">-or-</span></span> 
 <span data-ttu-id="9a282-649"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-649"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-650">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-650">The authentication failed.</span></span> <span data-ttu-id="9a282-651">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-651">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-652">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-652">The authentication failed.</span></span> <span data-ttu-id="9a282-653">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-653">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-654">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-654">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-655">或</span><span class="sxs-lookup"><span data-stu-id="9a282-655">-or-</span></span> 
<span data-ttu-id="9a282-656">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-656">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="9a282-657">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-657">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-658">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-658">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="9a282-659">带有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="9a282-659">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-660">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-660">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="9a282-661">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-661">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="9a282-662"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="9a282-662">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="9a282-663"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="9a282-663">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="9a282-664">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-664">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="9a282-665">一个用户定义对象，其中包含写操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="9a282-665">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="9a282-666">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-666">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="9a282-667">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-667">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="9a282-668">身份验证过程使用指定的凭据和身份验证选项。</span><span class="sxs-lookup"><span data-stu-id="9a282-668">The authentication process uses the specified credentials and authentication options.</span></span> <span data-ttu-id="9a282-669">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="9a282-669">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="9a282-670">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-670">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-671">使用`requiredProtectionLevel`参数的请求安全服务的使用经过身份验证的流传输的数据。</span><span class="sxs-lookup"><span data-stu-id="9a282-671">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="9a282-672">例如，如果希望数据加密和签名，请指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="9a282-672">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="9a282-673">成功进行身份验证并不保证请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="9a282-673">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="9a282-674">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-674">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="9a282-675">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="9a282-675">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="9a282-676">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="9a282-676">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="9a282-677">必须通过调用完成异步验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-677">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="9a282-678">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-678">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="9a282-679">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="9a282-679">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="9a282-680">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-680">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-681">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-681">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-682"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-682"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9a282-683">或</span><span class="sxs-lookup"><span data-stu-id="9a282-683">-or-</span></span> 
 <span data-ttu-id="9a282-684"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-684"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-685">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-685">The authentication failed.</span></span> <span data-ttu-id="9a282-686">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-686">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-687">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-687">The authentication failed.</span></span> <span data-ttu-id="9a282-688">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-688">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-689">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-689">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-690">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-690">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-691">或</span><span class="sxs-lookup"><span data-stu-id="9a282-691">-or-</span></span> 
<span data-ttu-id="9a282-692">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-692">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="9a282-693">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-693">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a282-694">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-694">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="9a282-695">关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-695">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-696">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-696">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="9a282-697">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-697">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="9a282-698">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-698">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="9a282-699"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="9a282-699">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="9a282-700"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="9a282-700">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="9a282-701">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-701">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="9a282-702">一个用户定义对象，其中包含写操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="9a282-702">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="9a282-703">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-703">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="9a282-704">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-704">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="9a282-705">身份验证过程使用指定的凭据、身份验证选项和通道绑定。</span><span class="sxs-lookup"><span data-stu-id="9a282-705">The authentication process uses the specified credentials, authentication options, and channel binding.</span></span> <span data-ttu-id="9a282-706">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="9a282-706">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="9a282-707">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-707">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-708">使用`requiredProtectionLevel`参数的请求安全服务的使用经过身份验证的流传输的数据。</span><span class="sxs-lookup"><span data-stu-id="9a282-708">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="9a282-709">例如，如果希望数据加密和签名，请指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="9a282-709">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="9a282-710">成功进行身份验证并不保证请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="9a282-710">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="9a282-711">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-711">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="9a282-712">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="9a282-712">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="9a282-713">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="9a282-713">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="9a282-714">必须通过调用完成异步验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-714">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="9a282-715">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-715">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="9a282-716">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="9a282-716">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="9a282-717">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-717">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-718">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-718">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-719"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-719"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9a282-720">或</span><span class="sxs-lookup"><span data-stu-id="9a282-720">-or-</span></span> 
 <span data-ttu-id="9a282-721"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-721"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-722">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-722">The authentication failed.</span></span> <span data-ttu-id="9a282-723">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-723">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-724">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-724">The authentication failed.</span></span> <span data-ttu-id="9a282-725">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-725">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-726">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-726">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-727">或</span><span class="sxs-lookup"><span data-stu-id="9a282-727">-or-</span></span> 
<span data-ttu-id="9a282-728">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-728">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="9a282-729">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-729">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-730">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-730">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="9a282-731">带有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="9a282-731">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a282-732">开始一个异步操作，以处理进行身份验证的客户端-服务器连接中的服务器端。</span><span class="sxs-lookup"><span data-stu-id="9a282-732">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-733">在进行身份验证时不会阻止此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="9a282-733">The overloads of this method do not block while the authentication is in progress.</span></span> <span data-ttu-id="9a282-734">若要阻止等待进行身份验证完成时，请使用<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-734">To block while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncCallback"><span data-ttu-id="9a282-735">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-735">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="9a282-736">一个用户定义对象，其中包含该操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="9a282-736">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="9a282-737">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-737">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="9a282-738">服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-738">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="9a282-739">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="9a282-739">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="9a282-740">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-740">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-741">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="9a282-741">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="9a282-742">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-742">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="9a282-743">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="9a282-743">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="9a282-744">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-744">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-745">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-745">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="9a282-746">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="9a282-746">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="9a282-747">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-747">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-748">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-748">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-749">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-749">The authentication failed.</span></span> <span data-ttu-id="9a282-750">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-750">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-751">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-751">The authentication failed.</span></span> <span data-ttu-id="9a282-752">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-752">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-753">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-753">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-754">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="9a282-754">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a282-755">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-755">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="9a282-756">关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-756">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (policy, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="9a282-757">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-757">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="9a282-758">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-758">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="9a282-759">一个用户定义对象，其中包含写操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="9a282-759">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="9a282-760">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-760">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="9a282-761">服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-761">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="9a282-762">身份验证过程使用指定的扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="9a282-762">The authentication process uses the specified extended protection policy.</span></span> <span data-ttu-id="9a282-763">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="9a282-763">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="9a282-764">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-764">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-765">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="9a282-765">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="9a282-766">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-766">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="9a282-767">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="9a282-767">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="9a282-768">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="9a282-768">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="9a282-769">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-769">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-770">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-770">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="9a282-771">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="9a282-771">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="9a282-772">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-772">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-773">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-773">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a282-774">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-774">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-775">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-775">The authentication failed.</span></span> <span data-ttu-id="9a282-776">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-776">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-777">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-777">The authentication failed.</span></span> <span data-ttu-id="9a282-778">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-778">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-779">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="9a282-779">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-780">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-780">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="9a282-781">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-781">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="9a282-782">带有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="9a282-782">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-783">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-783">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="9a282-784"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="9a282-784">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="9a282-785"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="9a282-785">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="9a282-786">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-786">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="9a282-787">一个用户定义对象，其中包含该操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="9a282-787">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="9a282-788">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-788">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="9a282-789">服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-789">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="9a282-790">身份验证过程使用指定的服务器凭据和身份验证选项。</span><span class="sxs-lookup"><span data-stu-id="9a282-790">The authentication process uses the specified server credentials and authentication options.</span></span> <span data-ttu-id="9a282-791">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="9a282-791">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="9a282-792">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-792">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-793">使用`requiredProtectionLevel`参数的请求安全服务的使用经过身份验证的流传输的数据。</span><span class="sxs-lookup"><span data-stu-id="9a282-793">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="9a282-794">例如，如果希望数据加密和签名，请指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="9a282-794">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="9a282-795">成功进行身份验证并不保证的请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="9a282-795">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="9a282-796">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-796">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="9a282-797">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="9a282-797">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="9a282-798">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="9a282-798">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="9a282-799">必须通过调用完成异步验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-799">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="9a282-800">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-800">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="9a282-801">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="9a282-801">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="9a282-802">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-802">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-803">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-803">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-804"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-804"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9a282-805"><paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span><span class="sxs-lookup"><span data-stu-id="9a282-805"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-806">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-806">The authentication failed.</span></span> <span data-ttu-id="9a282-807">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-807">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-808">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-808">The authentication failed.</span></span> <span data-ttu-id="9a282-809">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-809">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-810">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-810">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-811">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-811">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-812">或</span><span class="sxs-lookup"><span data-stu-id="9a282-812">-or-</span></span> 
<span data-ttu-id="9a282-813">此流先前被用作客户端尝试进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-813">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="9a282-814">不能尝试将该流作为服务器重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-814">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-815">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="9a282-815">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a282-816">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-816">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="9a282-817">关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-817">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="9a282-818">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-818">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="9a282-819">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-819">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="9a282-820"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="9a282-820">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="9a282-821"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="9a282-821">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="9a282-822">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-822">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="9a282-823">一个用户定义对象，其中包含写操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="9a282-823">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="9a282-824">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-824">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="9a282-825">服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-825">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="9a282-826">身份验证过程使用指定的服务器凭据、身份验证选项和扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="9a282-826">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span> <span data-ttu-id="9a282-827">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="9a282-827">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="9a282-828">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-828">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-829">使用`requiredProtectionLevel`参数的请求安全服务的使用经过身份验证的流传输的数据。</span><span class="sxs-lookup"><span data-stu-id="9a282-829">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="9a282-830">例如，如果希望数据加密和签名，请指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="9a282-830">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="9a282-831">成功进行身份验证并不保证的请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="9a282-831">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="9a282-832">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-832">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="9a282-833">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="9a282-833">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="9a282-834">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="9a282-834">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="9a282-835">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="9a282-835">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="9a282-836">必须通过调用完成异步验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-836">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="9a282-837">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-837">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="9a282-838">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="9a282-838">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="9a282-839">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-839">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-840">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-840">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a282-841">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-841">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-842"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-842"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9a282-843"><paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span><span class="sxs-lookup"><span data-stu-id="9a282-843"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-844">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-844">The authentication failed.</span></span> <span data-ttu-id="9a282-845">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-845">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-846">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-846">The authentication failed.</span></span> <span data-ttu-id="9a282-847">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-847">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-848">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-848">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="9a282-849">或</span><span class="sxs-lookup"><span data-stu-id="9a282-849">-or-</span></span> 
<span data-ttu-id="9a282-850">此流先前被用作客户端尝试进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-850">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="9a282-851">不能尝试将该流作为服务器重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-851">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-852">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="9a282-852">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-853">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-853">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="9a282-854">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-854">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="9a282-855">带有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="9a282-855">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9a282-856">一个 <see cref="T:System.Byte" /> 数组，该数组接收从流中读取的字节。</span><span class="sxs-lookup"><span data-stu-id="9a282-856">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="9a282-857">中从零开始的位置<paramref name="buffer" />从此处开始存储读取的数据从该流。</span><span class="sxs-lookup"><span data-stu-id="9a282-857">The zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="9a282-858">要从流中读取的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="9a282-858">The maximum number of bytes to read from the stream.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="9a282-859"><see cref="T:System.AsyncCallback" /> 委托，该委托引用读操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-859">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="9a282-860">用户定义的对象，其中包含读操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="9a282-860">A user-defined object containing information about the read operation.</span></span> <span data-ttu-id="9a282-861">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-861">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="9a282-862">开始一个异步读操作，此操作读取流中的数据并将其存储在指定的数组中。</span><span class="sxs-lookup"><span data-stu-id="9a282-862">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="9a282-863">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-863">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-864">如果启用了加密、 签名或加密和签名，读取的操作从基础流中读取数据、 检查数据的完整性和对其进行解密。</span><span class="sxs-lookup"><span data-stu-id="9a282-864">If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</span></span> <span data-ttu-id="9a282-865">如果没有安全服务，如数据加密或签名正在使用，此方法将启动对基础流的异步读取的操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-865">If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="9a282-866">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="9a282-866">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="9a282-867">若要阻止在操作完成之前，请使用<xref:System.Net.Security.NegotiateStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-867">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="9a282-868">异步读取的操作必须通过调用已完成<xref:System.Net.Security.NegotiateStream.EndRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-868">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndRead%2A> method.</span></span> <span data-ttu-id="9a282-869">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-869">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="9a282-870">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="9a282-870">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="9a282-871"><xref:System.Net.Security.NegotiateStream>类不支持多个读操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-871">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous read operations.</span></span> <span data-ttu-id="9a282-872">如果你尝试开始读取的操作，而另一个读取操作已在执行对同一个流，<xref:System.NotSupportedException>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="9a282-872">If you attempt to start a read operation while another read operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="9a282-873">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-873">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="9a282-874">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-874">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-875">下面的代码示例演示如何启动一个异步读的操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-875">The following code example demonstrates starting an asynchronous read operation.</span></span> <span data-ttu-id="9a282-876">此代码示例是为提供一个更大示例的一部分<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="9a282-876">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#1)]
 [!code-csharp[NclNegoAsyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-877"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-877"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a282-878"><paramref name="offset" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="9a282-878"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="9a282-879">或</span><span class="sxs-lookup"><span data-stu-id="9a282-879">-or-</span></span> 
 <span data-ttu-id="9a282-880"><paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="9a282-880"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="9a282-881">或</span><span class="sxs-lookup"><span data-stu-id="9a282-881">-or-</span></span> 
 <span data-ttu-id="9a282-882"><paramref name="offset" /> 加上 <paramref name="count" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="9a282-882"><paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="9a282-883">读操作失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-883">The read operation failed.</span></span>  
  
<span data-ttu-id="9a282-884">或</span><span class="sxs-lookup"><span data-stu-id="9a282-884">-or-</span></span> 
<span data-ttu-id="9a282-885">使用了加密服务，但未能解密该数据。</span><span class="sxs-lookup"><span data-stu-id="9a282-885">Encryption is in use, but the data could not be decrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-886">已存在一个正在执行的读取操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-886">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-887">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-887">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-888">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-888">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9a282-889">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span><span class="sxs-lookup"><span data-stu-id="9a282-889">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="9a282-890"><paramref name="buffer" /> 中从零开始的位置，从此处开始读取要写入到流中的字节。</span><span class="sxs-lookup"><span data-stu-id="9a282-890">The zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="9a282-891"><see cref="T:System.Int32" />值，该值指定要读取的字节数<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-891">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <paramref name="buffer" />.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="9a282-892"><see cref="T:System.AsyncCallback" /> 委托，它引用写操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-892">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="9a282-893">一个用户定义对象，其中包含写操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="9a282-893">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="9a282-894">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-894">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="9a282-895">开始一个异步写操作，此操作将指定缓冲区中的 <see cref="T:System.Byte" /> 写入到流中。</span><span class="sxs-lookup"><span data-stu-id="9a282-895">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span></span></summary>
        <returns><span data-ttu-id="9a282-896">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-896">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-897">如果启用了加密、 签名或加密和签名，此方法从缓冲区中读取数据加密，符号，或加密和签名，并将其使用的基础流传输。</span><span class="sxs-lookup"><span data-stu-id="9a282-897">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="9a282-898">如果没有安全服务，如数据加密或签名正在使用，此方法将启动对基础流的异步写操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-898">If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="9a282-899">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="9a282-899">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="9a282-900">若要阻止在操作完成之前，请使用<xref:System.Net.Security.NegotiateStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-900">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="9a282-901">异步读取的操作必须通过调用已完成<xref:System.Net.Security.NegotiateStream.EndWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-901">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndWrite%2A> method.</span></span> <span data-ttu-id="9a282-902">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="9a282-902">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="9a282-903">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="9a282-903">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="9a282-904"><xref:System.Net.Security.NegotiateStream>类不支持多个同时进行写入操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-904">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="9a282-905">如果你尝试开始写入操作，而另一个写入操作已在执行对同一个流，<xref:System.NotSupportedException>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="9a282-905">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="9a282-906">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-906">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="9a282-907">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-907">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="9a282-908">下面的示例演示如何开始异步写操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-908">The following example demonstrates beginning an asynchronous write operation.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#3)]
[!code-csharp[NclNegoAsyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#3)]  
[!code-vb[NclNegoAsyncClient#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#3)] 

<span data-ttu-id="9a282-909">在操作完成时，被调用以下方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-909">The following method is called when the operation completes.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
[!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
[!code-vb[NclNegoAsyncClient#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#4)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-910"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-910"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a282-911"><paramref name="offset is less than 0" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-911"><paramref name="offset is less than 0" />.</span></span>  
  
<span data-ttu-id="9a282-912">或</span><span class="sxs-lookup"><span data-stu-id="9a282-912">-or-</span></span> 
 <span data-ttu-id="9a282-913"><paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="9a282-913"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="9a282-914">或</span><span class="sxs-lookup"><span data-stu-id="9a282-914">-or-</span></span> 
 <span data-ttu-id="9a282-915"><paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="9a282-915"><paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="9a282-916">写操作失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-916">The write operation failed.</span></span>  
  
<span data-ttu-id="9a282-917">或</span><span class="sxs-lookup"><span data-stu-id="9a282-917">-or-</span></span> 
<span data-ttu-id="9a282-918">正在使用加密，但未能加密该数据。</span><span class="sxs-lookup"><span data-stu-id="9a282-918">Encryption is in use, but the data could not be encrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-919">已存在一个正在执行的写操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-919">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-920">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-920">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-921">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-921">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.NegotiateStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a282-922">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可读。</span><span class="sxs-lookup"><span data-stu-id="9a282-922">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span></span></summary>
        <value><span data-ttu-id="9a282-923"><see langword="true" /> 如果已进行身份验证且基础流为可读;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-923"><see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-924">如果身份验证成功，此属性返回通过调用返回的值<xref:System.IO.Stream.CanRead%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="9a282-924">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanRead%2A> property on the underlying stream.</span></span> <span data-ttu-id="9a282-925">当你创建的实例时指定基础流<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="9a282-925">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-926">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-926">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.NegotiateStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a282-927">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可查找。</span><span class="sxs-lookup"><span data-stu-id="9a282-927">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span></span></summary>
        <value><span data-ttu-id="9a282-928">此属性始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-928">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-929">不应尝试设置的位置<xref:System.Net.Security.NegotiateStream>对象或其基础流。</span><span class="sxs-lookup"><span data-stu-id="9a282-929">You should not attempt to set the position of the <xref:System.Net.Security.NegotiateStream> object or its underlying stream.</span></span> <span data-ttu-id="9a282-930">当你创建的实例时指定基础流<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="9a282-930">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-931">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-931">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Security.NegotiateStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a282-932">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否支持超时。</span><span class="sxs-lookup"><span data-stu-id="9a282-932">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span></span></summary>
        <value><span data-ttu-id="9a282-933"><see langword="true" /> 如果基础流支持超时;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-933"><see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-934">此属性返回通过调用返回的值<xref:System.IO.Stream.CanTimeout%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="9a282-934">This property returns the value returned by invoking the <xref:System.IO.Stream.CanTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="9a282-935">当你创建的实例时指定基础流<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="9a282-935">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-936">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-936">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.NegotiateStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a282-937">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可写。</span><span class="sxs-lookup"><span data-stu-id="9a282-937">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span></span></summary>
        <value><span data-ttu-id="9a282-938"><see langword="true" /> 如果已进行身份验证且基础流可写;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-938"><see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-939">如果身份验证成功，此属性返回通过调用返回的值<xref:System.IO.Stream.CanWrite%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="9a282-939">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanWrite%2A> property on the underlying stream.</span></span> <span data-ttu-id="9a282-940">当你创建的实例时指定基础流<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="9a282-940">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-941">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-941">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="negotiateStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="9a282-942">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-942"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="9a282-943">释放由 <see cref="T:System.Net.Security.NegotiateStream" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="9a282-943">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-944">调用此方法由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-944">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="9a282-945">`Dispose()` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="9a282-945">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="9a282-946"><xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="9a282-946"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="9a282-947">当`disposing`参数为 true 时，此方法释放任何托管对象所持有的所有资源，此<xref:System.Net.Security.NegotiateStream>的引用。</span><span class="sxs-lookup"><span data-stu-id="9a282-947">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.NegotiateStream> references.</span></span> <span data-ttu-id="9a282-948">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-948">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9a282-949">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="9a282-949">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="9a282-950">重写时<see langword="Dispose(Boolean)" />小心不要引用已经释放的早期调用中的对象<see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-950">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="9a282-951">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="9a282-951">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="9a282-952">有关详细信息<see langword="Dispose" />并<see cref="M:System.Object.Finalize" />，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="9a282-952">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="negotiateStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="9a282-953">调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="9a282-953">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></param>
        <summary><span data-ttu-id="9a282-954">结束通过调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 而启动的、正处于挂起状态的异步客户端身份验证操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-954">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-955">如果该操作未完成，此方法阻止，直至它。</span><span class="sxs-lookup"><span data-stu-id="9a282-955">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="9a282-956">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-956">When the authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-957">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-957">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="9a282-958">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-958">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-959">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-959">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="9a282-960">若要以同步方式执行此操作，使用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-960">To perform this operation synchronously, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-961"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-961"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a282-962"><paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 的调用创建的。</span><span class="sxs-lookup"><span data-stu-id="9a282-962"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-963">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-963">The authentication failed.</span></span> <span data-ttu-id="9a282-964">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-964">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-965">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-965">The authentication failed.</span></span> <span data-ttu-id="9a282-966">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-966">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-967">没有需要完成的处于挂起状态的客户端身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-967">There is no pending client authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="9a282-968">调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="9a282-968">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></param>
        <summary><span data-ttu-id="9a282-969">结束通过调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 而启动的、正处于挂起状态的异步客户端身份验证操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-969">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-970">如果该操作未完成，此方法阻止，直至它。</span><span class="sxs-lookup"><span data-stu-id="9a282-970">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="9a282-971">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-971">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="9a282-972">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-972">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="9a282-973">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="9a282-973">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="9a282-974">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-974">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="9a282-975">若要以同步方式执行此操作，请使用<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-975">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-976"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-976"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a282-977"><paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 的调用创建的。</span><span class="sxs-lookup"><span data-stu-id="9a282-977"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="9a282-978">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-978">The authentication failed.</span></span> <span data-ttu-id="9a282-979">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-979">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="9a282-980">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-980">The authentication failed.</span></span> <span data-ttu-id="9a282-981">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-981">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-982">没有要完成的处于挂起状态的身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-982">There is no pending authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="negotiateStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="9a282-983">调用 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例</span><span class="sxs-lookup"><span data-stu-id="9a282-983">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="9a282-984">结束通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步读操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-984">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="9a282-985"><see cref="T:System.Int32" /> 值，该值指定从基础流中读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="9a282-985">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-986">如果该操作未完成，此方法阻止，直至它。</span><span class="sxs-lookup"><span data-stu-id="9a282-986">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="9a282-987">若要以同步方式执行此操作，请使用<xref:System.Net.Security.NegotiateStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-987">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="9a282-988">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-988">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="9a282-989">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-989">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-990">下面的代码示例演示结束异步读取操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-990">The following code example demonstrates ending an asynchronous read operation.</span></span> <span data-ttu-id="9a282-991">有关演示如何启动该操作的示例，请参阅<xref:System.Net.Security.NegotiateStream.BeginRead%2A>。</span><span class="sxs-lookup"><span data-stu-id="9a282-991">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#3)]
 [!code-csharp[NclNegoAsyncServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-992"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-992"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a282-993">asyncResult 并不是通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而创建的。</span><span class="sxs-lookup"><span data-stu-id="9a282-993">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-994">没有任何挂起的读取的操作完成。</span><span class="sxs-lookup"><span data-stu-id="9a282-994">There is no pending read operation to complete.</span></span>

<span data-ttu-id="9a282-995">或</span><span class="sxs-lookup"><span data-stu-id="9a282-995">-or-</span></span>

<span data-ttu-id="9a282-996">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-996">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="9a282-997">读操作失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-997">The read operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="negotiateStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="9a282-998">调用 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例</span><span class="sxs-lookup"><span data-stu-id="9a282-998">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="9a282-999">结束通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步写操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-999">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-1000">如果该操作未完成，此方法阻止，直至它。</span><span class="sxs-lookup"><span data-stu-id="9a282-1000">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="9a282-1001">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-1001">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="9a282-1002">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-1002">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="9a282-1003">若要以同步方式执行此操作，请使用<xref:System.Net.Security.NegotiateStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-1003">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="9a282-1004">下面的示例演示如何调用以完成异步写操作的方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-1004">The following example demonstrates a method that is called to complete the asynchronous write operation.</span></span> <span data-ttu-id="9a282-1005">有关演示如何启动该操作的示例，请参阅<xref:System.Net.Security.NegotiateStream.BeginWrite%2A>。</span><span class="sxs-lookup"><span data-stu-id="9a282-1005">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
[!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
[!code-vb[NclNegoAsyncClient#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#4)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-1006"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-1006"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a282-1007">asyncResult 并不是通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而创建的。</span><span class="sxs-lookup"><span data-stu-id="9a282-1007">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-1008">没有正在等待的写入操作完成。</span><span class="sxs-lookup"><span data-stu-id="9a282-1008">There is no pending write operation to complete.</span></span>

<span data-ttu-id="9a282-1009">或</span><span class="sxs-lookup"><span data-stu-id="9a282-1009">-or-</span></span>

<span data-ttu-id="9a282-1010">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-1010">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="9a282-1011">写操作失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-1011">The write operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="negotiateStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a282-1012">导致所有缓冲数据都要写入基础设备。</span><span class="sxs-lookup"><span data-stu-id="9a282-1012">Causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-1013">此方法将调用<xref:System.IO.Stream.Flush%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="9a282-1013">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-1014">下面的代码示例演示如何刷新流。</span><span class="sxs-lookup"><span data-stu-id="9a282-1014">The following code example demonstrates flushing the stream.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a282-1015">获取一个值，该值指示服务器使用客户端凭据的方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-1015">Gets a value that indicates how the server can use the client's credentials.</span></span></summary>
        <value><span data-ttu-id="9a282-1016"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="9a282-1016">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-1017">您必须已成功进行身份验证之前调用此方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-1017">You must successfully authenticate before calling this method.</span></span> <span data-ttu-id="9a282-1018">通过调用一种请求身份验证时，客户端指定的模拟级别<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-1018">Clients specify the impersonation level when they request authentication by calling one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="9a282-1019">如果未指定进行身份验证<xref:System.Security.Principal.TokenImpersonationLevel>，<xref:System.Security.Principal.TokenImpersonationLevel.Identification>使用。</span><span class="sxs-lookup"><span data-stu-id="9a282-1019">If you authenticate without specifying a <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-1020">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-1020">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-1021">身份验证失败或没有进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-1021">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a282-1022">获取一个 <see cref="T:System.Boolean" /> 值，该值指示身份验证是否成功。</span><span class="sxs-lookup"><span data-stu-id="9a282-1022">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span></span></summary>
        <value><span data-ttu-id="9a282-1023"><see langword="true" /> 如果身份验证成功;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-1023"><see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-1024">客户端进行身份验证通过调用<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-1024">Clients authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="9a282-1025">通过调用的服务器进行身份验证<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-1025">Servers authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-1026">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-1026">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a282-1027">获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.NegotiateStream" /> 是否使用数据加密。</span><span class="sxs-lookup"><span data-stu-id="9a282-1027">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span></span></summary>
        <value><span data-ttu-id="9a282-1028"><see langword="true" /> 如果正在通过网络传输之前加密和解密数据，到达远程终结点;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-1028"><see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-1029">加密来帮助保护隐私的数据;也就是说，它有助于确保，相互传输数据时它不能解密由第三方。</span><span class="sxs-lookup"><span data-stu-id="9a282-1029">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-1030">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-1030">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Security.ProtectionLevel" />
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a282-1031">获取一个 <see cref="T:System.Boolean" /> 值，该值指示服务器和客户端是否均已进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-1031">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span></span></summary>
        <value><span data-ttu-id="9a282-1032"><see langword="true" /> 如果服务器已经过身份验证;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-1032"><see langword="true" /> if the server has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-1033">当客户端想要提供身份验证凭据的服务器时，客户端指定相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-1033">Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</span></span> <span data-ttu-id="9a282-1034">默认情况下，客户端请求相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-1034">By default, clients request mutual authentication.</span></span>  
  
 <span data-ttu-id="9a282-1035">协商协议选择 NTLM 或 Kerberos，具体取决于客户端和服务器支持的安全协议。</span><span class="sxs-lookup"><span data-stu-id="9a282-1035">The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</span></span> <span data-ttu-id="9a282-1036">NTLM 不支持相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-1036">NTLM does not support mutual authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-1037">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-1037">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.NegotiateStream.IsServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a282-1038">获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.NegotiateStream" /> 使用的连接的本地端是否作为服务器进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-1038">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span></span></summary>
        <value><span data-ttu-id="9a282-1039"><see langword="true" /> 如果本地终结点作为经过身份验证的连接; 的服务器端成功通过了身份验证否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-1039"><see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-1040">如果身份验证失败或未出现，此属性返回`false`。</span><span class="sxs-lookup"><span data-stu-id="9a282-1040">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="9a282-1041">若要与服务器进行身份验证，调用<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-1041">To authenticate as the server, call the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-1042">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-1042">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.NegotiateStream.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a282-1043">获取一个 <see cref="T:System.Boolean" /> 值，该值指示使用此流发送的数据是否进行签名。</span><span class="sxs-lookup"><span data-stu-id="9a282-1043">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span></span></summary>
        <value><span data-ttu-id="9a282-1044"><see langword="true" /> 如果然后进行传输; 签名的数据否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-1044"><see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-1045">数据签名可帮助保护的数据; 完整性也就是说，它可帮助确定是否将数据已被篡改在传输过程中的收件人。</span><span class="sxs-lookup"><span data-stu-id="9a282-1045">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-1046">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-1046">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.NegotiateStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a282-1047">获取基础流的长度。</span><span class="sxs-lookup"><span data-stu-id="9a282-1047">Gets the length of the underlying stream.</span></span></summary>
        <value><span data-ttu-id="9a282-1048">一个<see cref="T:System.Int64" />，它指定基础流的长度。</span><span class="sxs-lookup"><span data-stu-id="9a282-1048">A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-1049">此属性返回通过调用返回的值<xref:System.IO.Stream.Length%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="9a282-1049">This property returns the value returned by invoking the <xref:System.IO.Stream.Length%2A> property on the underlying stream.</span></span> <span data-ttu-id="9a282-1050">如果基础流不可查找，此属性通常会引发异常。</span><span class="sxs-lookup"><span data-stu-id="9a282-1050">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="9a282-1051">基础流的运行时类型确定引发的异常的运行时的类型。</span><span class="sxs-lookup"><span data-stu-id="9a282-1051">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-1052">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-1052">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-1053">当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-1053">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.NegotiateStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a282-1054">获取或设置基础流中的当前位置。</span><span class="sxs-lookup"><span data-stu-id="9a282-1054">Gets or sets the current position in the underlying stream.</span></span></summary>
        <value><span data-ttu-id="9a282-1055">一个<see cref="T:System.Int64" />，它指定基础流中的当前位置。</span><span class="sxs-lookup"><span data-stu-id="9a282-1055">A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-1056">此属性返回通过调用返回的值<xref:System.IO.Stream.Position%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="9a282-1056">This property returns the value returned by invoking the <xref:System.IO.Stream.Position%2A> property on the underlying stream.</span></span> <span data-ttu-id="9a282-1057">如果基础流不可查找，此属性通常会引发异常。</span><span class="sxs-lookup"><span data-stu-id="9a282-1057">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="9a282-1058">基础流的运行时类型确定引发的异常的运行时的类型。</span><span class="sxs-lookup"><span data-stu-id="9a282-1058">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-1059">不支持设置此属性。</span><span class="sxs-lookup"><span data-stu-id="9a282-1059">Setting this property is not supported.</span></span>  
  
<span data-ttu-id="9a282-1060">或</span><span class="sxs-lookup"><span data-stu-id="9a282-1060">-or-</span></span> 
<span data-ttu-id="9a282-1061">当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-1061">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="negotiateStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9a282-1062">一个 <see cref="T:System.Byte" /> 数组，该数组接收从流中读取的字节。</span><span class="sxs-lookup"><span data-stu-id="9a282-1062">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="9a282-1063">一个<see cref="T:System.Int32" />包含中的从零开始的位置<paramref name="buffer" />从此处开始存储读取的数据从该流。</span><span class="sxs-lookup"><span data-stu-id="9a282-1063">A <see cref="T:System.Int32" /> containing the zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="9a282-1064"><see cref="T:System.Int32" />，包含要从流中读取的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="9a282-1064">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span></span></param>
        <summary><span data-ttu-id="9a282-1065">读取此流中的数据并将其存储在指定的数组中。</span><span class="sxs-lookup"><span data-stu-id="9a282-1065">Reads data from this stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="9a282-1066"><see cref="T:System.Int32" /> 值，该值指定从基础流中读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="9a282-1066">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span></span> <span data-ttu-id="9a282-1067">如果再也没有要读取的数据，将返回 0。</span><span class="sxs-lookup"><span data-stu-id="9a282-1067">When there is no more data to be read, returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-1068">该方法读取的最多`count`个字节从当前流，并将它们存储在`buffer`开始`offset`。</span><span class="sxs-lookup"><span data-stu-id="9a282-1068">The method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span>  
  
 <span data-ttu-id="9a282-1069">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-1069">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="9a282-1070">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-1070">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="9a282-1071">若要以异步方式执行此操作，请使用<xref:System.Net.Security.NegotiateStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-1071">To perform this operation asynchronously, use the <xref:System.Net.Security.NegotiateStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-1072">下面的代码示例演示如何读取从<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-1072">The following code example demonstrates reading from a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncServer/CPP/NclNegoSyncServer.cpp#1)]
 [!code-csharp[NclNegoSyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="9a282-1073">读操作失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-1073">The read operation failed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-1074">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-1074">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-1075">已在进行 <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> 操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-1075">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a282-1076">获取或设置读操作阻止等待数据的时间。</span><span class="sxs-lookup"><span data-stu-id="9a282-1076">Gets or sets the amount of time a read operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="9a282-1077">一个<see cref="T:System.Int32" />指定读取的操作失败前经过的时间量。</span><span class="sxs-lookup"><span data-stu-id="9a282-1077">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-1078">此属性返回通过调用返回的值<xref:System.IO.Stream.ReadTimeout%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="9a282-1078">This property returns the value returned by invoking the <xref:System.IO.Stream.ReadTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="9a282-1079">当设置此属性，<xref:System.IO.Stream.ReadTimeout%2A>对基础流的值设置为指定的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-1079">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="9a282-1080">基础流是否<xref:System.Net.Sockets.NetworkStream>，<xref:System.Net.Security.NegotiateStream.ReadTimeout%2A>以毫秒为单位并将设置为<xref:System.Threading.Timeout.Infinite>默认情况下，因此，它读取操作就不会超时。</span><span class="sxs-lookup"><span data-stu-id="9a282-1080">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-1081">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-1081">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteIdentity : System.Security.Principal.IIdentity" Usage="System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a282-1082">获取有关共享此已验证身份的流的远程方的身份信息。</span><span class="sxs-lookup"><span data-stu-id="9a282-1082">Gets information about the identity of the remote party sharing this authenticated stream.</span></span></summary>
        <value><span data-ttu-id="9a282-1083"><see cref="T:System.Security.Principal.IIdentity" />描述的远程终结点标识的对象。</span><span class="sxs-lookup"><span data-stu-id="9a282-1083">An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-1084">当客户端访问，此属性返回<xref:System.Security.Principal.GenericIdentity>包含服务的服务器和使用的身份验证协议的主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="9a282-1084">When accessed by the client, this property returns a <xref:System.Security.Principal.GenericIdentity> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</span></span> <span data-ttu-id="9a282-1085">如果访问服务器，该属性返回<xref:System.Security.Principal.WindowsIdentity>描述客户端。</span><span class="sxs-lookup"><span data-stu-id="9a282-1085">When accessed by the server, this property returns a <xref:System.Security.Principal.WindowsIdentity> that describes the client.</span></span> <span data-ttu-id="9a282-1086">如果<xref:System.Security.Principal.WindowsIdentity>是不可用，客户端信息返回到服务器中<xref:System.Security.Principal.GenericIdentity>。</span><span class="sxs-lookup"><span data-stu-id="9a282-1086">If the <xref:System.Security.Principal.WindowsIdentity> is not available, client information is returned to the server in a <xref:System.Security.Principal.GenericIdentity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-1087">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-1087">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#2)]
 [!code-csharp[NclNegoAsyncServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-1088">身份验证失败或没有进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-1088">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="negotiateStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="9a282-1089">忽略此值。</span><span class="sxs-lookup"><span data-stu-id="9a282-1089">This value is ignored.</span></span></param>
        <param name="origin"><span data-ttu-id="9a282-1090">忽略此值。</span><span class="sxs-lookup"><span data-stu-id="9a282-1090">This value is ignored.</span></span></param>
        <summary><span data-ttu-id="9a282-1091">引发 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-1091">Throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="9a282-1092">总是引发 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-1092">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-1093">请勿调用此方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-1093">Do not call this method.</span></span> <span data-ttu-id="9a282-1094">它被继承，但不是受<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-1094">It is inherited, but is not supported by <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-1095"><see cref="T:System.Net.Security.NegotiateStream" /> 上不支持查找。</span><span class="sxs-lookup"><span data-stu-id="9a282-1095">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="negotiateStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9a282-1096"><see cref="T:System.Int64" /> 值，该值指定流的长度。</span><span class="sxs-lookup"><span data-stu-id="9a282-1096">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span></span></param>
        <summary><span data-ttu-id="9a282-1097">设置基础流的长度。</span><span class="sxs-lookup"><span data-stu-id="9a282-1097">Sets the length of the underlying stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="negotiateStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9a282-1098">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span><span class="sxs-lookup"><span data-stu-id="9a282-1098">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="9a282-1099">包含 <paramref name="buffer" /> 中从零开始的位置的 <see cref="T:System.Int32" />，将从此位置开始读取要写入到流中的字节。</span><span class="sxs-lookup"><span data-stu-id="9a282-1099">An <see cref="T:System.Int32" /> containing the zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="9a282-1100">一个<see cref="T:System.Int32" />包含要读取的字节数<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-1100">A <see cref="T:System.Int32" /> containing the number of bytes to read from <paramref name="buffer" />.</span></span></param>
        <summary><span data-ttu-id="9a282-1101">使用指定的缓冲区和偏移将指定数目的 <see cref="T:System.Byte" /> 写入基础流。</span><span class="sxs-lookup"><span data-stu-id="9a282-1101">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-1102">如果启用了加密、 签名或加密和签名，此方法从缓冲区中读取数据加密，符号，或加密和签名，并将其使用的基础流传输。</span><span class="sxs-lookup"><span data-stu-id="9a282-1102">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="9a282-1103">如果没有安全服务，如数据加密或签名正在使用，此方法将调用<xref:System.IO.Stream.Write%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="9a282-1103">If no security services such as data encryption or signing are in use, this method invokes <xref:System.IO.Stream.Write%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="9a282-1104">此方法会阻止写入操作完成时。</span><span class="sxs-lookup"><span data-stu-id="9a282-1104">This method blocks while the write operation completes.</span></span> <span data-ttu-id="9a282-1105">若要阻止阻塞该操作完成时，使用<xref:System.Net.Security.NegotiateStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-1105">To prevent blocking while the operation completes, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
 <span data-ttu-id="9a282-1106">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-1106">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="9a282-1107">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a282-1107">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="9a282-1108"><xref:System.Net.Security.NegotiateStream>类不支持多个同时进行写入操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-1108">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="9a282-1109">如果你尝试开始写入操作，而另一个写入操作已在执行对同一个流，<xref:System.NotSupportedException>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="9a282-1109">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-1110">下面的代码示例演示如何写入<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="9a282-1110">The following code example demonstrates writing to a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a282-1111"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-1111"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a282-1112"><paramref name="offset is less than 0" />。</span><span class="sxs-lookup"><span data-stu-id="9a282-1112"><paramref name="offset is less than 0" />.</span></span>  
  
<span data-ttu-id="9a282-1113">或</span><span class="sxs-lookup"><span data-stu-id="9a282-1113">-or-</span></span> 
 <span data-ttu-id="9a282-1114"><paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="9a282-1114"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="9a282-1115">或</span><span class="sxs-lookup"><span data-stu-id="9a282-1115">-or-</span></span> 
 <span data-ttu-id="9a282-1116"><paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="9a282-1116"><paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="9a282-1117">写操作失败。</span><span class="sxs-lookup"><span data-stu-id="9a282-1117">The write operation failed.</span></span>  
  
<span data-ttu-id="9a282-1118">或</span><span class="sxs-lookup"><span data-stu-id="9a282-1118">-or-</span></span> 
<span data-ttu-id="9a282-1119">正在使用加密，但未能加密该数据。</span><span class="sxs-lookup"><span data-stu-id="9a282-1119">Encryption is in use, but the data could not be encrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a282-1120">已存在一个正在执行的写操作。</span><span class="sxs-lookup"><span data-stu-id="9a282-1120">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a282-1121">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="9a282-1121">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9a282-1122">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9a282-1122">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a282-1123">获取或设置写操作阻止等待数据的时间。</span><span class="sxs-lookup"><span data-stu-id="9a282-1123">Gets or sets the amount of time a write operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="9a282-1124">一个<see cref="T:System.Int32" />指定写入操作失败前经过的时间量。</span><span class="sxs-lookup"><span data-stu-id="9a282-1124">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a282-1125">此属性返回通过调用返回的值<xref:System.IO.Stream.WriteTimeout%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="9a282-1125">This property returns the value returned by invoking the <xref:System.IO.Stream.WriteTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="9a282-1126">对于集合运算指定的值设置<xref:System.IO.Stream.WriteTimeout%2A>基础流上的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-1126">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="9a282-1127">基础流是否<xref:System.Net.Sockets.NetworkStream>，<xref:System.Net.Security.NegotiateStream.WriteTimeout%2A>以毫秒为单位并将设置为<xref:System.Threading.Timeout.Infinite>默认情况下，这样写操作就不会超时。</span><span class="sxs-lookup"><span data-stu-id="9a282-1127">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a282-1128">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9a282-1128">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>